// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "circ_buff_read_many128.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic circ_buff_read_many128::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic circ_buff_read_many128::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state1 = "1";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state2 = "10";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state3 = "100";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state4 = "1000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state5 = "10000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state6 = "100000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state7 = "1000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state8 = "10000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state9 = "100000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state10 = "1000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state11 = "10000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state12 = "100000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_pp0_stage0 = "10000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state24 = "100000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_pp1_stage0 = "1000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state28 = "10000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state29 = "100000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state30 = "1000000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state31 = "10000000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state32 = "100000000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state33 = "1000000000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state34 = "10000000000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state35 = "100000000000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state36 = "1000000000000000000000000";
const sc_lv<26> circ_buff_read_many128::ap_ST_fsm_state37 = "10000000000000000000000000";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool circ_buff_read_many128::ap_const_boolean_1 = true;
const sc_lv<1> circ_buff_read_many128::ap_const_lv1_0 = "0";
const sc_lv<1> circ_buff_read_many128::ap_const_lv1_1 = "1";
const sc_lv<2> circ_buff_read_many128::ap_const_lv2_0 = "00";
const sc_lv<2> circ_buff_read_many128::ap_const_lv2_2 = "10";
const sc_lv<2> circ_buff_read_many128::ap_const_lv2_3 = "11";
const sc_lv<2> circ_buff_read_many128::ap_const_lv2_1 = "1";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_4 = "100";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_B = "1011";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_D = "1101";
const bool circ_buff_read_many128::ap_const_boolean_0 = false;
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_11 = "10001";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_12 = "10010";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_17 = "10111";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_F = "1111";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_0 = "000";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_1 = "1";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_2 = "10";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_3 = "11";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_4 = "100";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_7 = "111";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_6 = "110";
const sc_lv<3> circ_buff_read_many128::ap_const_lv3_5 = "101";
const int circ_buff_read_many128::C_S_AXI_DATA_WIDTH = "100000";
const int circ_buff_read_many128::C_M_AXI_GMEM_READ_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int circ_buff_read_many128::C_M_AXI_GMEM_READ_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int circ_buff_read_many128::C_M_AXI_GMEM_READ_CACHE_VALUE = "11";
const int circ_buff_read_many128::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_1 = "1";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_3 = "11";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_C = "1100";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_E = "1110";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_10 = "10000";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_18 = "11000";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_2 = "10";
const sc_lv<15> circ_buff_read_many128::ap_const_lv15_0 = "000000000000000";
const sc_lv<24> circ_buff_read_many128::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<4> circ_buff_read_many128::ap_const_lv4_0 = "0000";
const sc_lv<16> circ_buff_read_many128::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_19 = "11001";
const sc_lv<16> circ_buff_read_many128::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> circ_buff_read_many128::ap_const_lv32_1F = "11111";
const sc_lv<8> circ_buff_read_many128::ap_const_lv8_1 = "1";
const sc_lv<5> circ_buff_read_many128::ap_const_lv5_0 = "00000";
const sc_lv<13> circ_buff_read_many128::ap_const_lv13_201 = "1000000001";
const sc_lv<16> circ_buff_read_many128::ap_const_lv16_200 = "1000000000";
const sc_lv<15> circ_buff_read_many128::ap_const_lv15_1 = "1";
const sc_lv<9> circ_buff_read_many128::ap_const_lv9_1 = "1";
const sc_lv<24> circ_buff_read_many128::ap_const_lv24_1 = "1";
const sc_lv<4> circ_buff_read_many128::ap_const_lv4_1 = "1";
const sc_lv<8> circ_buff_read_many128::ap_const_lv8_0 = "00000000";
const sc_lv<8> circ_buff_read_many128::ap_const_lv8_20 = "100000";
const sc_lv<8> circ_buff_read_many128::ap_const_lv8_40 = "1000000";
const sc_lv<8> circ_buff_read_many128::ap_const_lv8_60 = "1100000";
const sc_lv<13> circ_buff_read_many128::ap_const_lv13_200 = "1000000000";

circ_buff_read_many128::circ_buff_read_many128(sc_module_name name) : sc_module(name), mVcdFile(0) {
    local_words_U = new circ_buff_read_many128_local_words("local_words_U");
    local_words_U->clk(ap_clk);
    local_words_U->reset(ap_rst_n_inv);
    local_words_U->address0(local_words_address0);
    local_words_U->ce0(local_words_ce0);
    local_words_U->we0(local_words_we0);
    local_words_U->d0(useable_words_q0);
    local_words_U->q0(local_words_q0);
    tail_U = new circ_buff_read_many128_tail("tail_U");
    tail_U->clk(ap_clk);
    tail_U->reset(ap_rst_n_inv);
    tail_U->address0(tail_address0);
    tail_U->ce0(tail_ce0);
    tail_U->we0(tail_we0);
    tail_U->d0(tail_d0);
    tail_U->q0(tail_q0);
    circ_buff_read_many128_control_s_axi_U = new circ_buff_read_many128_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("circ_buff_read_many128_control_s_axi_U");
    circ_buff_read_many128_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    circ_buff_read_many128_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    circ_buff_read_many128_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    circ_buff_read_many128_control_s_axi_U->WVALID(s_axi_control_WVALID);
    circ_buff_read_many128_control_s_axi_U->WREADY(s_axi_control_WREADY);
    circ_buff_read_many128_control_s_axi_U->WDATA(s_axi_control_WDATA);
    circ_buff_read_many128_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    circ_buff_read_many128_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    circ_buff_read_many128_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    circ_buff_read_many128_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    circ_buff_read_many128_control_s_axi_U->RVALID(s_axi_control_RVALID);
    circ_buff_read_many128_control_s_axi_U->RREADY(s_axi_control_RREADY);
    circ_buff_read_many128_control_s_axi_U->RDATA(s_axi_control_RDATA);
    circ_buff_read_many128_control_s_axi_U->RRESP(s_axi_control_RRESP);
    circ_buff_read_many128_control_s_axi_U->BVALID(s_axi_control_BVALID);
    circ_buff_read_many128_control_s_axi_U->BREADY(s_axi_control_BREADY);
    circ_buff_read_many128_control_s_axi_U->BRESP(s_axi_control_BRESP);
    circ_buff_read_many128_control_s_axi_U->ACLK(ap_clk);
    circ_buff_read_many128_control_s_axi_U->ARESET(ap_rst_n_inv);
    circ_buff_read_many128_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    circ_buff_read_many128_control_s_axi_U->ap_start(ap_start);
    circ_buff_read_many128_control_s_axi_U->interrupt(interrupt);
    circ_buff_read_many128_control_s_axi_U->ap_ready(ap_ready);
    circ_buff_read_many128_control_s_axi_U->ap_done(ap_done);
    circ_buff_read_many128_control_s_axi_U->ap_idle(ap_idle);
    circ_buff_read_many128_control_s_axi_U->input_V(input_V);
    circ_buff_read_many128_control_s_axi_U->reset(reset);
    circ_buff_read_many128_control_s_axi_U->debug_register(debug_register);
    circ_buff_read_many128_control_s_axi_U->useable_words_address0(useable_words_address0);
    circ_buff_read_many128_control_s_axi_U->useable_words_ce0(useable_words_ce0);
    circ_buff_read_many128_control_s_axi_U->useable_words_q0(useable_words_q0);
    circ_buff_read_many128_gmem_read_m_axi_U = new circ_buff_read_many128_gmem_read_m_axi<0,128,32,5,16,16,16,16,C_M_AXI_GMEM_READ_ID_WIDTH,C_M_AXI_GMEM_READ_ADDR_WIDTH,C_M_AXI_GMEM_READ_DATA_WIDTH,C_M_AXI_GMEM_READ_AWUSER_WIDTH,C_M_AXI_GMEM_READ_ARUSER_WIDTH,C_M_AXI_GMEM_READ_WUSER_WIDTH,C_M_AXI_GMEM_READ_RUSER_WIDTH,C_M_AXI_GMEM_READ_BUSER_WIDTH,C_M_AXI_GMEM_READ_USER_VALUE,C_M_AXI_GMEM_READ_PROT_VALUE,C_M_AXI_GMEM_READ_CACHE_VALUE>("circ_buff_read_many128_gmem_read_m_axi_U");
    circ_buff_read_many128_gmem_read_m_axi_U->AWVALID(m_axi_gmem_read_AWVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->AWREADY(m_axi_gmem_read_AWREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->AWADDR(m_axi_gmem_read_AWADDR);
    circ_buff_read_many128_gmem_read_m_axi_U->AWID(m_axi_gmem_read_AWID);
    circ_buff_read_many128_gmem_read_m_axi_U->AWLEN(m_axi_gmem_read_AWLEN);
    circ_buff_read_many128_gmem_read_m_axi_U->AWSIZE(m_axi_gmem_read_AWSIZE);
    circ_buff_read_many128_gmem_read_m_axi_U->AWBURST(m_axi_gmem_read_AWBURST);
    circ_buff_read_many128_gmem_read_m_axi_U->AWLOCK(m_axi_gmem_read_AWLOCK);
    circ_buff_read_many128_gmem_read_m_axi_U->AWCACHE(m_axi_gmem_read_AWCACHE);
    circ_buff_read_many128_gmem_read_m_axi_U->AWPROT(m_axi_gmem_read_AWPROT);
    circ_buff_read_many128_gmem_read_m_axi_U->AWQOS(m_axi_gmem_read_AWQOS);
    circ_buff_read_many128_gmem_read_m_axi_U->AWREGION(m_axi_gmem_read_AWREGION);
    circ_buff_read_many128_gmem_read_m_axi_U->AWUSER(m_axi_gmem_read_AWUSER);
    circ_buff_read_many128_gmem_read_m_axi_U->WVALID(m_axi_gmem_read_WVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->WREADY(m_axi_gmem_read_WREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->WDATA(m_axi_gmem_read_WDATA);
    circ_buff_read_many128_gmem_read_m_axi_U->WSTRB(m_axi_gmem_read_WSTRB);
    circ_buff_read_many128_gmem_read_m_axi_U->WLAST(m_axi_gmem_read_WLAST);
    circ_buff_read_many128_gmem_read_m_axi_U->WID(m_axi_gmem_read_WID);
    circ_buff_read_many128_gmem_read_m_axi_U->WUSER(m_axi_gmem_read_WUSER);
    circ_buff_read_many128_gmem_read_m_axi_U->ARVALID(m_axi_gmem_read_ARVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->ARREADY(m_axi_gmem_read_ARREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->ARADDR(m_axi_gmem_read_ARADDR);
    circ_buff_read_many128_gmem_read_m_axi_U->ARID(m_axi_gmem_read_ARID);
    circ_buff_read_many128_gmem_read_m_axi_U->ARLEN(m_axi_gmem_read_ARLEN);
    circ_buff_read_many128_gmem_read_m_axi_U->ARSIZE(m_axi_gmem_read_ARSIZE);
    circ_buff_read_many128_gmem_read_m_axi_U->ARBURST(m_axi_gmem_read_ARBURST);
    circ_buff_read_many128_gmem_read_m_axi_U->ARLOCK(m_axi_gmem_read_ARLOCK);
    circ_buff_read_many128_gmem_read_m_axi_U->ARCACHE(m_axi_gmem_read_ARCACHE);
    circ_buff_read_many128_gmem_read_m_axi_U->ARPROT(m_axi_gmem_read_ARPROT);
    circ_buff_read_many128_gmem_read_m_axi_U->ARQOS(m_axi_gmem_read_ARQOS);
    circ_buff_read_many128_gmem_read_m_axi_U->ARREGION(m_axi_gmem_read_ARREGION);
    circ_buff_read_many128_gmem_read_m_axi_U->ARUSER(m_axi_gmem_read_ARUSER);
    circ_buff_read_many128_gmem_read_m_axi_U->RVALID(m_axi_gmem_read_RVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->RREADY(m_axi_gmem_read_RREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->RDATA(m_axi_gmem_read_RDATA);
    circ_buff_read_many128_gmem_read_m_axi_U->RLAST(m_axi_gmem_read_RLAST);
    circ_buff_read_many128_gmem_read_m_axi_U->RID(m_axi_gmem_read_RID);
    circ_buff_read_many128_gmem_read_m_axi_U->RUSER(m_axi_gmem_read_RUSER);
    circ_buff_read_many128_gmem_read_m_axi_U->RRESP(m_axi_gmem_read_RRESP);
    circ_buff_read_many128_gmem_read_m_axi_U->BVALID(m_axi_gmem_read_BVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->BREADY(m_axi_gmem_read_BREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->BRESP(m_axi_gmem_read_BRESP);
    circ_buff_read_many128_gmem_read_m_axi_U->BID(m_axi_gmem_read_BID);
    circ_buff_read_many128_gmem_read_m_axi_U->BUSER(m_axi_gmem_read_BUSER);
    circ_buff_read_many128_gmem_read_m_axi_U->ACLK(ap_clk);
    circ_buff_read_many128_gmem_read_m_axi_U->ARESET(ap_rst_n_inv);
    circ_buff_read_many128_gmem_read_m_axi_U->ACLK_EN(ap_var_for_const0);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARVALID(gmem_read_ARVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARREADY(gmem_read_ARREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARADDR(gmem_read_ARADDR);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARID(ap_var_for_const1);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARLEN(ap_var_for_const2);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARSIZE(ap_var_for_const3);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARLOCK(ap_var_for_const4);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARCACHE(ap_var_for_const5);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARQOS(ap_var_for_const5);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARPROT(ap_var_for_const3);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARUSER(ap_var_for_const1);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARBURST(ap_var_for_const4);
    circ_buff_read_many128_gmem_read_m_axi_U->I_ARREGION(ap_var_for_const5);
    circ_buff_read_many128_gmem_read_m_axi_U->I_RVALID(gmem_read_RVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->I_RREADY(gmem_read_RREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->I_RDATA(gmem_read_RDATA);
    circ_buff_read_many128_gmem_read_m_axi_U->I_RID(gmem_read_RID);
    circ_buff_read_many128_gmem_read_m_axi_U->I_RUSER(gmem_read_RUSER);
    circ_buff_read_many128_gmem_read_m_axi_U->I_RRESP(gmem_read_RRESP);
    circ_buff_read_many128_gmem_read_m_axi_U->I_RLAST(gmem_read_RLAST);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWVALID(gmem_read_AWVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWREADY(gmem_read_AWREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWADDR(gmem_read_AWADDR);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWID(ap_var_for_const1);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWLEN(ap_var_for_const2);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWSIZE(ap_var_for_const3);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWLOCK(ap_var_for_const4);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWCACHE(ap_var_for_const5);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWQOS(ap_var_for_const5);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWPROT(ap_var_for_const3);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWUSER(ap_var_for_const1);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWBURST(ap_var_for_const4);
    circ_buff_read_many128_gmem_read_m_axi_U->I_AWREGION(ap_var_for_const5);
    circ_buff_read_many128_gmem_read_m_axi_U->I_WVALID(gmem_read_WVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->I_WREADY(gmem_read_WREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->I_WDATA(gmem_read_WDATA);
    circ_buff_read_many128_gmem_read_m_axi_U->I_WID(ap_var_for_const1);
    circ_buff_read_many128_gmem_read_m_axi_U->I_WUSER(ap_var_for_const1);
    circ_buff_read_many128_gmem_read_m_axi_U->I_WLAST(ap_var_for_const6);
    circ_buff_read_many128_gmem_read_m_axi_U->I_WSTRB(ap_var_for_const7);
    circ_buff_read_many128_gmem_read_m_axi_U->I_BVALID(gmem_read_BVALID);
    circ_buff_read_many128_gmem_read_m_axi_U->I_BREADY(gmem_read_BREADY);
    circ_buff_read_many128_gmem_read_m_axi_U->I_BRESP(gmem_read_BRESP);
    circ_buff_read_many128_gmem_read_m_axi_U->I_BID(gmem_read_BID);
    circ_buff_read_many128_gmem_read_m_axi_U->I_BUSER(gmem_read_BUSER);
    data_V_U = new circ_buff_read_many128_data_V("data_V_U");
    data_V_U->clk(ap_clk);
    data_V_U->reset(ap_rst_n_inv);
    data_V_U->address0(data_V_address0);
    data_V_U->ce0(data_V_ce0);
    data_V_U->we0(data_V_we0);
    data_V_U->d0(gmem_read_addr_1_rea_reg_955);
    data_V_U->q0(data_V_q0);
    circ_buff_read_many128_mux_42_8_1_1_U1 = new circ_buff_read_many128_mux_42_8_1_1<1,1,8,8,8,8,2,8>("circ_buff_read_many128_mux_42_8_1_1_U1");
    circ_buff_read_many128_mux_42_8_1_1_U1->din0(ap_var_for_const8);
    circ_buff_read_many128_mux_42_8_1_1_U1->din1(ap_var_for_const9);
    circ_buff_read_many128_mux_42_8_1_1_U1->din2(ap_var_for_const10);
    circ_buff_read_many128_mux_42_8_1_1_U1->din3(ap_var_for_const11);
    circ_buff_read_many128_mux_42_8_1_1_U1->din4(op2_assign_fu_734_p5);
    circ_buff_read_many128_mux_42_8_1_1_U1->dout(op2_assign_fu_734_p6);
    circ_buff_read_many128_mul_mul_8ns_16ns_24_1_1_U2 = new circ_buff_read_many128_mul_mul_8ns_16ns_24_1_1<1,1,8,16,24>("circ_buff_read_many128_mul_mul_8ns_16ns_24_1_1_U2");
    circ_buff_read_many128_mul_mul_8ns_16ns_24_1_1_U2->din0(bound_fu_820_p0);
    circ_buff_read_many128_mul_mul_8ns_16ns_24_1_1_U2->din1(bound_fu_820_p1);
    circ_buff_read_many128_mul_mul_8ns_16ns_24_1_1_U2->dout(bound_fu_820_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_s_reg_930_pp0_iter7_reg );
    sensitive << ( gmem_read_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_s_reg_930_pp0_iter7_reg );
    sensitive << ( gmem_read_RVALID );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_s_reg_930_pp0_iter7_reg );
    sensitive << ( gmem_read_RVALID );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state26_io );
    sensitive << ( ap_block_state27_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state26_io );
    sensitive << ( ap_block_state27_io );

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state15_io);
    sensitive << ( tmp_s_reg_930 );
    sensitive << ( ap_sig_ioackin_gmem_read_ARREADY );

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter8);
    sensitive << ( tmp_s_reg_930_pp0_iter7_reg );
    sensitive << ( gmem_read_RVALID );

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state25_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state26_io);
    sensitive << ( fifo_out_0_V_1_ack_in );
    sensitive << ( fifo_out_1_V_1_ack_in );
    sensitive << ( fifo_out_2_V_1_ack_in );
    sensitive << ( fifo_out_3_V_1_ack_in );
    sensitive << ( fifo_out_4_V_1_ack_in );
    sensitive << ( fifo_out_5_V_1_ack_in );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_predicate_op195_write_state26 );

    SC_METHOD(thread_ap_block_state26_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state27_io);
    sensitive << ( fifo_out_0_V_1_ack_in );
    sensitive << ( fifo_out_1_V_1_ack_in );
    sensitive << ( fifo_out_2_V_1_ack_in );
    sensitive << ( fifo_out_3_V_1_ack_in );
    sensitive << ( fifo_out_4_V_1_ack_in );
    sensitive << ( fifo_out_5_V_1_ack_in );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_predicate_op206_write_state27 );

    SC_METHOD(thread_ap_block_state27_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state35);
    sensitive << ( tmp_8_reg_920 );
    sensitive << ( gmem_read_BVALID );

    SC_METHOD(thread_ap_block_state37);
    sensitive << ( fifo_out_0_V_1_ack_in );
    sensitive << ( fifo_out_1_V_1_ack_in );
    sensitive << ( fifo_out_2_V_1_ack_in );
    sensitive << ( fifo_out_3_V_1_ack_in );
    sensitive << ( fifo_out_4_V_1_ack_in );
    sensitive << ( fifo_out_5_V_1_ack_in );

    SC_METHOD(thread_ap_condition_1071);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_930 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state14);
    sensitive << ( tmp_s_fu_614_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state25);
    sensitive << ( exitcond_flatten_fu_687_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( fifo_out_0_V_1_ack_in );
    sensitive << ( fifo_out_0_V_1_state );
    sensitive << ( fifo_out_1_V_1_ack_in );
    sensitive << ( fifo_out_1_V_1_state );
    sensitive << ( fifo_out_2_V_1_ack_in );
    sensitive << ( fifo_out_2_V_1_state );
    sensitive << ( fifo_out_3_V_1_ack_in );
    sensitive << ( fifo_out_3_V_1_state );
    sensitive << ( fifo_out_4_V_1_ack_in );
    sensitive << ( fifo_out_4_V_1_state );
    sensitive << ( fifo_out_5_V_1_ack_in );
    sensitive << ( fifo_out_5_V_1_state );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_phi_mux_first_flag_1_phi_fu_449_p4);
    sensitive << ( first_flag_1_reg_445 );

    SC_METHOD(thread_ap_phi_mux_h2_phi_fu_416_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( h2_reg_412 );
    sensitive << ( exitcond_flatten_reg_965 );
    sensitive << ( temp_V_mid2_v_reg_979 );

    SC_METHOD(thread_ap_phi_mux_h_phi_fu_393_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_reg_930 );
    sensitive << ( h_reg_389 );
    sensitive << ( h_1_reg_934 );

    SC_METHOD(thread_ap_phi_mux_val_assign_phi_fu_382_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_reg_930 );
    sensitive << ( val_assign_reg_378 );
    sensitive << ( stream_tail_1_cast_reg_944 );

    SC_METHOD(thread_ap_predicate_op195_write_state26);
    sensitive << ( stride_reg_366 );

    SC_METHOD(thread_ap_predicate_op206_write_state27);
    sensitive << ( stride_reg_366 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( fifo_out_0_V_1_ack_in );
    sensitive << ( fifo_out_0_V_1_state );
    sensitive << ( fifo_out_1_V_1_ack_in );
    sensitive << ( fifo_out_1_V_1_state );
    sensitive << ( fifo_out_2_V_1_ack_in );
    sensitive << ( fifo_out_2_V_1_state );
    sensitive << ( fifo_out_3_V_1_ack_in );
    sensitive << ( fifo_out_3_V_1_state );
    sensitive << ( fifo_out_4_V_1_ack_in );
    sensitive << ( fifo_out_4_V_1_state );
    sensitive << ( fifo_out_5_V_1_ack_in );
    sensitive << ( fifo_out_5_V_1_state );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gmem_read_ARREADY);
    sensitive << ( gmem_read_ARREADY );
    sensitive << ( ap_reg_ioackin_gmem_read_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_read_AWREADY);
    sensitive << ( gmem_read_AWREADY );
    sensitive << ( ap_reg_ioackin_gmem_read_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_read_WREADY);
    sensitive << ( gmem_read_WREADY );
    sensitive << ( ap_reg_ioackin_gmem_read_WREADY );

    SC_METHOD(thread_bound_fu_820_p0);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( bound_fu_820_p00 );

    SC_METHOD(thread_bound_fu_820_p00);
    sensitive << ( words_reg_914 );

    SC_METHOD(thread_bound_fu_820_p1);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( bound_fu_820_p10 );

    SC_METHOD(thread_bound_fu_820_p10);
    sensitive << ( bytes_read_reg_924 );

    SC_METHOD(thread_bytes_read_fu_604_p2);
    sensitive << ( tail_q0 );
    sensitive << ( p_pn_fu_596_p3 );

    SC_METHOD(thread_data_V_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( tmp_12_fu_667_p1 );
    sensitive << ( temp_V_mid2_fu_720_p1 );

    SC_METHOD(thread_data_V_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_data_V_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_s_reg_930_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_exitcond1_fu_511_p2);
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_exitcond_flatten_fu_687_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar_flatten_reg_401 );
    sensitive << ( bound_reg_960 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_fu_797_p2);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( i1_reg_434 );

    SC_METHOD(thread_fifo_out_0_V_1_ack_in);
    sensitive << ( fifo_out_0_V_1_state );

    SC_METHOD(thread_fifo_out_0_V_1_ack_out);
    sensitive << ( fifo_out_0_V_TREADY );

    SC_METHOD(thread_fifo_out_0_V_1_data_out);
    sensitive << ( fifo_out_0_V_1_payload_A );
    sensitive << ( fifo_out_0_V_1_payload_B );
    sensitive << ( fifo_out_0_V_1_sel );

    SC_METHOD(thread_fifo_out_0_V_1_load_A);
    sensitive << ( fifo_out_0_V_1_sel_wr );
    sensitive << ( fifo_out_0_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_0_V_1_load_B);
    sensitive << ( fifo_out_0_V_1_sel_wr );
    sensitive << ( fifo_out_0_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_0_V_1_sel);
    sensitive << ( fifo_out_0_V_1_sel_rd );

    SC_METHOD(thread_fifo_out_0_V_1_state_cmp_full);
    sensitive << ( fifo_out_0_V_1_state );

    SC_METHOD(thread_fifo_out_0_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_fifo_out_0_V_1_vld_out);
    sensitive << ( fifo_out_0_V_1_state );

    SC_METHOD(thread_fifo_out_0_V_TDATA);
    sensitive << ( fifo_out_0_V_1_data_out );

    SC_METHOD(thread_fifo_out_0_V_TDATA_blk_n);
    sensitive << ( fifo_out_0_V_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_fifo_out_0_V_TVALID);
    sensitive << ( fifo_out_0_V_1_state );

    SC_METHOD(thread_fifo_out_1_V_1_ack_in);
    sensitive << ( fifo_out_1_V_1_state );

    SC_METHOD(thread_fifo_out_1_V_1_ack_out);
    sensitive << ( fifo_out_1_V_TREADY );

    SC_METHOD(thread_fifo_out_1_V_1_data_out);
    sensitive << ( fifo_out_1_V_1_payload_A );
    sensitive << ( fifo_out_1_V_1_payload_B );
    sensitive << ( fifo_out_1_V_1_sel );

    SC_METHOD(thread_fifo_out_1_V_1_load_A);
    sensitive << ( fifo_out_1_V_1_sel_wr );
    sensitive << ( fifo_out_1_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_1_V_1_load_B);
    sensitive << ( fifo_out_1_V_1_sel_wr );
    sensitive << ( fifo_out_1_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_1_V_1_sel);
    sensitive << ( fifo_out_1_V_1_sel_rd );

    SC_METHOD(thread_fifo_out_1_V_1_state_cmp_full);
    sensitive << ( fifo_out_1_V_1_state );

    SC_METHOD(thread_fifo_out_1_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_fifo_out_1_V_1_vld_out);
    sensitive << ( fifo_out_1_V_1_state );

    SC_METHOD(thread_fifo_out_1_V_TDATA);
    sensitive << ( fifo_out_1_V_1_data_out );

    SC_METHOD(thread_fifo_out_1_V_TDATA_blk_n);
    sensitive << ( fifo_out_1_V_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_fifo_out_1_V_TVALID);
    sensitive << ( fifo_out_1_V_1_state );

    SC_METHOD(thread_fifo_out_2_V_1_ack_in);
    sensitive << ( fifo_out_2_V_1_state );

    SC_METHOD(thread_fifo_out_2_V_1_ack_out);
    sensitive << ( fifo_out_2_V_TREADY );

    SC_METHOD(thread_fifo_out_2_V_1_data_out);
    sensitive << ( fifo_out_2_V_1_payload_A );
    sensitive << ( fifo_out_2_V_1_payload_B );
    sensitive << ( fifo_out_2_V_1_sel );

    SC_METHOD(thread_fifo_out_2_V_1_load_A);
    sensitive << ( fifo_out_2_V_1_sel_wr );
    sensitive << ( fifo_out_2_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_2_V_1_load_B);
    sensitive << ( fifo_out_2_V_1_sel_wr );
    sensitive << ( fifo_out_2_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_2_V_1_sel);
    sensitive << ( fifo_out_2_V_1_sel_rd );

    SC_METHOD(thread_fifo_out_2_V_1_state_cmp_full);
    sensitive << ( fifo_out_2_V_1_state );

    SC_METHOD(thread_fifo_out_2_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_fifo_out_2_V_1_vld_out);
    sensitive << ( fifo_out_2_V_1_state );

    SC_METHOD(thread_fifo_out_2_V_TDATA);
    sensitive << ( fifo_out_2_V_1_data_out );

    SC_METHOD(thread_fifo_out_2_V_TDATA_blk_n);
    sensitive << ( fifo_out_2_V_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_fifo_out_2_V_TVALID);
    sensitive << ( fifo_out_2_V_1_state );

    SC_METHOD(thread_fifo_out_3_V_1_ack_in);
    sensitive << ( fifo_out_3_V_1_state );

    SC_METHOD(thread_fifo_out_3_V_1_ack_out);
    sensitive << ( fifo_out_3_V_TREADY );

    SC_METHOD(thread_fifo_out_3_V_1_data_out);
    sensitive << ( fifo_out_3_V_1_payload_A );
    sensitive << ( fifo_out_3_V_1_payload_B );
    sensitive << ( fifo_out_3_V_1_sel );

    SC_METHOD(thread_fifo_out_3_V_1_load_A);
    sensitive << ( fifo_out_3_V_1_sel_wr );
    sensitive << ( fifo_out_3_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_3_V_1_load_B);
    sensitive << ( fifo_out_3_V_1_sel_wr );
    sensitive << ( fifo_out_3_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_3_V_1_sel);
    sensitive << ( fifo_out_3_V_1_sel_rd );

    SC_METHOD(thread_fifo_out_3_V_1_state_cmp_full);
    sensitive << ( fifo_out_3_V_1_state );

    SC_METHOD(thread_fifo_out_3_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_fifo_out_3_V_1_vld_out);
    sensitive << ( fifo_out_3_V_1_state );

    SC_METHOD(thread_fifo_out_3_V_TDATA);
    sensitive << ( fifo_out_3_V_1_data_out );

    SC_METHOD(thread_fifo_out_3_V_TDATA_blk_n);
    sensitive << ( fifo_out_3_V_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_fifo_out_3_V_TVALID);
    sensitive << ( fifo_out_3_V_1_state );

    SC_METHOD(thread_fifo_out_4_V_1_ack_in);
    sensitive << ( fifo_out_4_V_1_state );

    SC_METHOD(thread_fifo_out_4_V_1_ack_out);
    sensitive << ( fifo_out_4_V_TREADY );

    SC_METHOD(thread_fifo_out_4_V_1_data_out);
    sensitive << ( fifo_out_4_V_1_payload_A );
    sensitive << ( fifo_out_4_V_1_payload_B );
    sensitive << ( fifo_out_4_V_1_sel );

    SC_METHOD(thread_fifo_out_4_V_1_load_A);
    sensitive << ( fifo_out_4_V_1_sel_wr );
    sensitive << ( fifo_out_4_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_4_V_1_load_B);
    sensitive << ( fifo_out_4_V_1_sel_wr );
    sensitive << ( fifo_out_4_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_4_V_1_sel);
    sensitive << ( fifo_out_4_V_1_sel_rd );

    SC_METHOD(thread_fifo_out_4_V_1_state_cmp_full);
    sensitive << ( fifo_out_4_V_1_state );

    SC_METHOD(thread_fifo_out_4_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_fifo_out_4_V_1_vld_out);
    sensitive << ( fifo_out_4_V_1_state );

    SC_METHOD(thread_fifo_out_4_V_TDATA);
    sensitive << ( fifo_out_4_V_1_data_out );

    SC_METHOD(thread_fifo_out_4_V_TDATA_blk_n);
    sensitive << ( fifo_out_4_V_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_fifo_out_4_V_TVALID);
    sensitive << ( fifo_out_4_V_1_state );

    SC_METHOD(thread_fifo_out_5_V_1_ack_in);
    sensitive << ( fifo_out_5_V_1_state );

    SC_METHOD(thread_fifo_out_5_V_1_ack_out);
    sensitive << ( fifo_out_5_V_TREADY );

    SC_METHOD(thread_fifo_out_5_V_1_data_out);
    sensitive << ( fifo_out_5_V_1_payload_A );
    sensitive << ( fifo_out_5_V_1_payload_B );
    sensitive << ( fifo_out_5_V_1_sel );

    SC_METHOD(thread_fifo_out_5_V_1_load_A);
    sensitive << ( fifo_out_5_V_1_sel_wr );
    sensitive << ( fifo_out_5_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_5_V_1_load_B);
    sensitive << ( fifo_out_5_V_1_sel_wr );
    sensitive << ( fifo_out_5_V_1_state_cmp_full );

    SC_METHOD(thread_fifo_out_5_V_1_sel);
    sensitive << ( fifo_out_5_V_1_sel_rd );

    SC_METHOD(thread_fifo_out_5_V_1_state_cmp_full);
    sensitive << ( fifo_out_5_V_1_state );

    SC_METHOD(thread_fifo_out_5_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_predicate_op195_write_state26 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_fifo_out_5_V_1_vld_out);
    sensitive << ( fifo_out_5_V_1_state );

    SC_METHOD(thread_fifo_out_5_V_TDATA);
    sensitive << ( fifo_out_5_V_1_data_out );

    SC_METHOD(thread_fifo_out_5_V_TDATA_blk_n);
    sensitive << ( fifo_out_5_V_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( stride_reg_366 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_fifo_out_5_V_TVALID);
    sensitive << ( fifo_out_5_V_1_state );

    SC_METHOD(thread_first_load_load_fu_484_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( first );

    SC_METHOD(thread_gmem_read_ARADDR);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( input_V2_sum_cast_fu_554_p1 );
    sensitive << ( input_V2_sum4_cast_fu_657_p1 );
    sensitive << ( ap_reg_ioackin_gmem_read_ARREADY );
    sensitive << ( ap_condition_1071 );

    SC_METHOD(thread_gmem_read_ARVALID);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_930 );
    sensitive << ( ap_reg_ioackin_gmem_read_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_gmem_read_AWADDR);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( input_V2_sum3_cast_fu_782_p1 );
    sensitive << ( ap_reg_ioackin_gmem_read_AWREADY );

    SC_METHOD(thread_gmem_read_AWVALID);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_reg_ioackin_gmem_read_AWREADY );

    SC_METHOD(thread_gmem_read_BREADY);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_8_reg_920 );
    sensitive << ( gmem_read_BVALID );

    SC_METHOD(thread_gmem_read_RREADY);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_s_reg_930_pp0_iter7_reg );
    sensitive << ( gmem_read_RVALID );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_gmem_read_WDATA);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( val_assign_reg_378 );
    sensitive << ( ap_reg_ioackin_gmem_read_WREADY );

    SC_METHOD(thread_gmem_read_WVALID);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_reg_ioackin_gmem_read_WREADY );

    SC_METHOD(thread_gmem_read_blk_n_AR);
    sensitive << ( m_axi_gmem_read_ARREADY );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_reg_930 );

    SC_METHOD(thread_gmem_read_blk_n_AW);
    sensitive << ( m_axi_gmem_read_AWREADY );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_gmem_read_blk_n_B);
    sensitive << ( m_axi_gmem_read_BVALID );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_8_reg_920 );

    SC_METHOD(thread_gmem_read_blk_n_R);
    sensitive << ( m_axi_gmem_read_RVALID );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_s_reg_930_pp0_iter7_reg );

    SC_METHOD(thread_gmem_read_blk_n_W);
    sensitive << ( m_axi_gmem_read_WREADY );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_h_1_fu_619_p2);
    sensitive << ( ap_phi_mux_h_phi_fu_393_p4 );

    SC_METHOD(thread_h_cast_fu_610_p1);
    sensitive << ( ap_phi_mux_h_phi_fu_393_p4 );

    SC_METHOD(thread_h_s_fu_706_p2);
    sensitive << ( ap_phi_mux_h2_phi_fu_416_p4 );

    SC_METHOD(thread_i_1_fu_494_p2);
    sensitive << ( i_reg_342 );

    SC_METHOD(thread_i_2_fu_803_p2);
    sensitive << ( i1_reg_434 );

    SC_METHOD(thread_idx_cast3_fu_570_p1);
    sensitive << ( idx_reg_866 );

    SC_METHOD(thread_idx_cast_fu_535_p1);
    sensitive << ( idx_fu_523_p5 );

    SC_METHOD(thread_idx_fu_523_p5);
    sensitive << ( stride_reg_366 );

    SC_METHOD(thread_indvar_flatten_next_fu_692_p2);
    sensitive << ( indvar_flatten_reg_401 );

    SC_METHOD(thread_input_V2_sum3_cast_fu_782_p1);
    sensitive << ( input_V2_sum3_reg_1004 );

    SC_METHOD(thread_input_V2_sum3_fu_777_p2);
    sensitive << ( tmp_16_cast8_reg_826 );
    sensitive << ( tmp_19_cast_fu_773_p1 );

    SC_METHOD(thread_input_V2_sum4_cast_fu_657_p1);
    sensitive << ( input_V2_sum4_reg_939 );

    SC_METHOD(thread_input_V2_sum4_fu_638_p2);
    sensitive << ( tmp_16_cast8_reg_826 );
    sensitive << ( tmp_15_cast_fu_634_p1 );

    SC_METHOD(thread_input_V2_sum_cast_fu_554_p1);
    sensitive << ( input_V2_sum_reg_876 );

    SC_METHOD(thread_input_V2_sum_fu_549_p2);
    sensitive << ( tmp_16_cast8_reg_826 );
    sensitive << ( tmp_cast_fu_545_p1 );

    SC_METHOD(thread_local_words_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_2_reg_845 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_3_fu_564_p1 );

    SC_METHOD(thread_local_words_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( gmem_read_RVALID );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_local_words_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_op2_assign_fu_734_p5);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( t_V_mid2_reg_974 );

    SC_METHOD(thread_p_pn_fu_596_p3);
    sensitive << ( tmp_10_fu_587_p1 );
    sensitive << ( tmp_7_fu_582_p2 );
    sensitive << ( p_s_fu_590_p2 );

    SC_METHOD(thread_p_s_fu_590_p2);
    sensitive << ( tmp_10_fu_587_p1 );

    SC_METHOD(thread_r_V_fu_752_p2);
    sensitive << ( data_V_q0 );
    sensitive << ( tmp_19_fu_748_p1 );

    SC_METHOD(thread_stream_tail_1_cast_fu_653_p1);
    sensitive << ( stream_tail_fu_647_p2 );

    SC_METHOD(thread_stream_tail_fu_647_p2);
    sensitive << ( tmp_14_fu_643_p1 );

    SC_METHOD(thread_stride_1_fu_517_p2);
    sensitive << ( stride_reg_366 );

    SC_METHOD(thread_t_V_mid2_fu_698_p3);
    sensitive << ( t_V_reg_423 );
    sensitive << ( tmp_15_fu_682_p2 );

    SC_METHOD(thread_tail_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tail_addr_1_reg_894 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( tmp_3_fu_564_p1 );
    sensitive << ( tmp_5_fu_809_p1 );

    SC_METHOD(thread_tail_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( gmem_read_RVALID );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_tail_d0);
    sensitive << ( val_assign_reg_378 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_tail_we0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( exitcond_fu_797_p2 );

    SC_METHOD(thread_temp_V_mid2_fu_720_p1);
    sensitive << ( temp_V_mid2_v_fu_712_p3 );

    SC_METHOD(thread_temp_V_mid2_v_fu_712_p3);
    sensitive << ( ap_phi_mux_h2_phi_fu_416_p4 );
    sensitive << ( tmp_15_fu_682_p2 );
    sensitive << ( h_s_fu_706_p2 );

    SC_METHOD(thread_tmp_10_fu_587_p1);
    sensitive << ( stream_head_V_reg_887 );

    SC_METHOD(thread_tmp_12_fu_667_p1);
    sensitive << ( h_reg_389_pp0_iter8_reg );

    SC_METHOD(thread_tmp_13_fu_629_p2);
    sensitive << ( idx_cast3_reg_904 );
    sensitive << ( tmp_16_cast_fu_625_p1 );

    SC_METHOD(thread_tmp_14_fu_643_p1);
    sensitive << ( ap_phi_mux_val_assign_phi_fu_382_p4 );

    SC_METHOD(thread_tmp_15_cast_fu_634_p1);
    sensitive << ( tmp_13_fu_629_p2 );

    SC_METHOD(thread_tmp_15_fu_682_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( words_reg_914 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_24_cast_fu_678_p1 );

    SC_METHOD(thread_tmp_16_cast8_fu_480_p1);
    sensitive << ( tmp_fu_470_p4 );

    SC_METHOD(thread_tmp_16_cast_fu_625_p1);
    sensitive << ( ap_phi_mux_val_assign_phi_fu_382_p4 );

    SC_METHOD(thread_tmp_16_fu_768_p2);
    sensitive << ( idx_cast_reg_871 );

    SC_METHOD(thread_tmp_19_cast_fu_773_p1);
    sensitive << ( tmp_16_fu_768_p2 );

    SC_METHOD(thread_tmp_19_fu_748_p1);
    sensitive << ( op2_assign_fu_734_p6 );

    SC_METHOD(thread_tmp_1_fu_488_p2);
    sensitive << ( first_load_reg_833 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_342 );

    SC_METHOD(thread_tmp_20_fu_758_p1);
    sensitive << ( r_V_fu_752_p2 );

    SC_METHOD(thread_tmp_24_cast_fu_678_p1);
    sensitive << ( t_V_reg_423 );

    SC_METHOD(thread_tmp_2_fu_500_p1);
    sensitive << ( i_reg_342 );

    SC_METHOD(thread_tmp_3_fu_564_p1);
    sensitive << ( stride_reg_366 );

    SC_METHOD(thread_tmp_4_fu_505_p2);
    sensitive << ( reset );
    sensitive << ( first_load_reg_833 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_488_p2 );

    SC_METHOD(thread_tmp_5_fu_809_p1);
    sensitive << ( i1_reg_434 );

    SC_METHOD(thread_tmp_6_fu_573_p1);
    sensitive << ( tail_q0 );

    SC_METHOD(thread_tmp_7_fu_582_p2);
    sensitive << ( stream_head_V_reg_887 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_8_fu_577_p2 );
    sensitive << ( tmp_6_fu_573_p1 );

    SC_METHOD(thread_tmp_8_fu_577_p2);
    sensitive << ( stream_head_V_reg_887 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_6_fu_573_p1 );

    SC_METHOD(thread_tmp_9_fu_539_p2);
    sensitive << ( idx_cast_fu_535_p1 );

    SC_METHOD(thread_tmp_cast_fu_545_p1);
    sensitive << ( tmp_9_fu_539_p2 );

    SC_METHOD(thread_tmp_fu_470_p4);
    sensitive << ( input_V );

    SC_METHOD(thread_tmp_s_fu_614_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( bytes_read_reg_924 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( h_cast_fu_610_p1 );

    SC_METHOD(thread_useable_words_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_fu_500_p1 );

    SC_METHOD(thread_useable_words_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_word_V_fu_725_p2);
    sensitive << ( t_V_mid2_fu_698_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( fifo_out_0_V_1_ack_in );
    sensitive << ( fifo_out_0_V_1_state );
    sensitive << ( fifo_out_1_V_1_ack_in );
    sensitive << ( fifo_out_1_V_1_state );
    sensitive << ( fifo_out_2_V_1_ack_in );
    sensitive << ( fifo_out_2_V_1_state );
    sensitive << ( fifo_out_3_V_1_ack_in );
    sensitive << ( fifo_out_3_V_1_state );
    sensitive << ( fifo_out_4_V_1_ack_in );
    sensitive << ( fifo_out_4_V_1_state );
    sensitive << ( fifo_out_5_V_1_ack_in );
    sensitive << ( fifo_out_5_V_1_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_8_reg_920 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( gmem_read_RVALID );
    sensitive << ( gmem_read_BVALID );
    sensitive << ( ap_sig_ioackin_gmem_read_ARREADY );
    sensitive << ( first_load_reg_833 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_488_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_511_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_8_fu_577_p2 );
    sensitive << ( tmp_s_fu_614_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_687_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_sig_ioackin_gmem_read_AWREADY );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( tmp_4_fu_505_p2 );
    sensitive << ( exitcond_fu_797_p2 );
    sensitive << ( ap_sig_ioackin_gmem_read_WREADY );
    sensitive << ( ap_CS_fsm_state37 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const11);

    ap_CS_fsm = "00000000000000000000000001";
    fifo_out_0_V_1_sel_rd = SC_LOGIC_0;
    fifo_out_0_V_1_sel_wr = SC_LOGIC_0;
    fifo_out_0_V_1_state = "00";
    fifo_out_1_V_1_sel_rd = SC_LOGIC_0;
    fifo_out_1_V_1_sel_wr = SC_LOGIC_0;
    fifo_out_1_V_1_state = "00";
    fifo_out_2_V_1_sel_rd = SC_LOGIC_0;
    fifo_out_2_V_1_sel_wr = SC_LOGIC_0;
    fifo_out_2_V_1_state = "00";
    fifo_out_3_V_1_sel_rd = SC_LOGIC_0;
    fifo_out_3_V_1_sel_wr = SC_LOGIC_0;
    fifo_out_3_V_1_state = "00";
    fifo_out_4_V_1_sel_rd = SC_LOGIC_0;
    fifo_out_4_V_1_sel_wr = SC_LOGIC_0;
    fifo_out_4_V_1_state = "00";
    fifo_out_5_V_1_sel_rd = SC_LOGIC_0;
    fifo_out_5_V_1_sel_wr = SC_LOGIC_0;
    fifo_out_5_V_1_state = "00";
    first = "0";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_reg_ioackin_gmem_read_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_read_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_read_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "circ_buff_read_many128_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_read_AWVALID, "(port)m_axi_gmem_read_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_read_AWREADY, "(port)m_axi_gmem_read_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_read_AWADDR, "(port)m_axi_gmem_read_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_read_AWID, "(port)m_axi_gmem_read_AWID");
    sc_trace(mVcdFile, m_axi_gmem_read_AWLEN, "(port)m_axi_gmem_read_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_read_AWSIZE, "(port)m_axi_gmem_read_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_read_AWBURST, "(port)m_axi_gmem_read_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_read_AWLOCK, "(port)m_axi_gmem_read_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_read_AWCACHE, "(port)m_axi_gmem_read_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_read_AWPROT, "(port)m_axi_gmem_read_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_read_AWQOS, "(port)m_axi_gmem_read_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_read_AWREGION, "(port)m_axi_gmem_read_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_read_AWUSER, "(port)m_axi_gmem_read_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_read_WVALID, "(port)m_axi_gmem_read_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_read_WREADY, "(port)m_axi_gmem_read_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_read_WDATA, "(port)m_axi_gmem_read_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_read_WSTRB, "(port)m_axi_gmem_read_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_read_WLAST, "(port)m_axi_gmem_read_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_read_WID, "(port)m_axi_gmem_read_WID");
    sc_trace(mVcdFile, m_axi_gmem_read_WUSER, "(port)m_axi_gmem_read_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_read_ARVALID, "(port)m_axi_gmem_read_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_read_ARREADY, "(port)m_axi_gmem_read_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_read_ARADDR, "(port)m_axi_gmem_read_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_read_ARID, "(port)m_axi_gmem_read_ARID");
    sc_trace(mVcdFile, m_axi_gmem_read_ARLEN, "(port)m_axi_gmem_read_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_read_ARSIZE, "(port)m_axi_gmem_read_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_read_ARBURST, "(port)m_axi_gmem_read_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_read_ARLOCK, "(port)m_axi_gmem_read_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_read_ARCACHE, "(port)m_axi_gmem_read_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_read_ARPROT, "(port)m_axi_gmem_read_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_read_ARQOS, "(port)m_axi_gmem_read_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_read_ARREGION, "(port)m_axi_gmem_read_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_read_ARUSER, "(port)m_axi_gmem_read_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_read_RVALID, "(port)m_axi_gmem_read_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_read_RREADY, "(port)m_axi_gmem_read_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_read_RDATA, "(port)m_axi_gmem_read_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_read_RLAST, "(port)m_axi_gmem_read_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_read_RID, "(port)m_axi_gmem_read_RID");
    sc_trace(mVcdFile, m_axi_gmem_read_RUSER, "(port)m_axi_gmem_read_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_read_RRESP, "(port)m_axi_gmem_read_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_read_BVALID, "(port)m_axi_gmem_read_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_read_BREADY, "(port)m_axi_gmem_read_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_read_BRESP, "(port)m_axi_gmem_read_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_read_BID, "(port)m_axi_gmem_read_BID");
    sc_trace(mVcdFile, m_axi_gmem_read_BUSER, "(port)m_axi_gmem_read_BUSER");
    sc_trace(mVcdFile, fifo_out_0_V_TDATA, "(port)fifo_out_0_V_TDATA");
    sc_trace(mVcdFile, fifo_out_0_V_TVALID, "(port)fifo_out_0_V_TVALID");
    sc_trace(mVcdFile, fifo_out_0_V_TREADY, "(port)fifo_out_0_V_TREADY");
    sc_trace(mVcdFile, fifo_out_1_V_TDATA, "(port)fifo_out_1_V_TDATA");
    sc_trace(mVcdFile, fifo_out_1_V_TVALID, "(port)fifo_out_1_V_TVALID");
    sc_trace(mVcdFile, fifo_out_1_V_TREADY, "(port)fifo_out_1_V_TREADY");
    sc_trace(mVcdFile, fifo_out_2_V_TDATA, "(port)fifo_out_2_V_TDATA");
    sc_trace(mVcdFile, fifo_out_2_V_TVALID, "(port)fifo_out_2_V_TVALID");
    sc_trace(mVcdFile, fifo_out_2_V_TREADY, "(port)fifo_out_2_V_TREADY");
    sc_trace(mVcdFile, fifo_out_3_V_TDATA, "(port)fifo_out_3_V_TDATA");
    sc_trace(mVcdFile, fifo_out_3_V_TVALID, "(port)fifo_out_3_V_TVALID");
    sc_trace(mVcdFile, fifo_out_3_V_TREADY, "(port)fifo_out_3_V_TREADY");
    sc_trace(mVcdFile, fifo_out_4_V_TDATA, "(port)fifo_out_4_V_TDATA");
    sc_trace(mVcdFile, fifo_out_4_V_TVALID, "(port)fifo_out_4_V_TVALID");
    sc_trace(mVcdFile, fifo_out_4_V_TREADY, "(port)fifo_out_4_V_TREADY");
    sc_trace(mVcdFile, fifo_out_5_V_TDATA, "(port)fifo_out_5_V_TDATA");
    sc_trace(mVcdFile, fifo_out_5_V_TVALID, "(port)fifo_out_5_V_TVALID");
    sc_trace(mVcdFile, fifo_out_5_V_TREADY, "(port)fifo_out_5_V_TREADY");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_V, "input_V");
    sc_trace(mVcdFile, reset, "reset");
    sc_trace(mVcdFile, debug_register, "debug_register");
    sc_trace(mVcdFile, useable_words_address0, "useable_words_address0");
    sc_trace(mVcdFile, useable_words_ce0, "useable_words_ce0");
    sc_trace(mVcdFile, useable_words_q0, "useable_words_q0");
    sc_trace(mVcdFile, fifo_out_0_V_1_data_out, "fifo_out_0_V_1_data_out");
    sc_trace(mVcdFile, fifo_out_0_V_1_vld_in, "fifo_out_0_V_1_vld_in");
    sc_trace(mVcdFile, fifo_out_0_V_1_vld_out, "fifo_out_0_V_1_vld_out");
    sc_trace(mVcdFile, fifo_out_0_V_1_ack_in, "fifo_out_0_V_1_ack_in");
    sc_trace(mVcdFile, fifo_out_0_V_1_ack_out, "fifo_out_0_V_1_ack_out");
    sc_trace(mVcdFile, fifo_out_0_V_1_payload_A, "fifo_out_0_V_1_payload_A");
    sc_trace(mVcdFile, fifo_out_0_V_1_payload_B, "fifo_out_0_V_1_payload_B");
    sc_trace(mVcdFile, fifo_out_0_V_1_sel_rd, "fifo_out_0_V_1_sel_rd");
    sc_trace(mVcdFile, fifo_out_0_V_1_sel_wr, "fifo_out_0_V_1_sel_wr");
    sc_trace(mVcdFile, fifo_out_0_V_1_sel, "fifo_out_0_V_1_sel");
    sc_trace(mVcdFile, fifo_out_0_V_1_load_A, "fifo_out_0_V_1_load_A");
    sc_trace(mVcdFile, fifo_out_0_V_1_load_B, "fifo_out_0_V_1_load_B");
    sc_trace(mVcdFile, fifo_out_0_V_1_state, "fifo_out_0_V_1_state");
    sc_trace(mVcdFile, fifo_out_0_V_1_state_cmp_full, "fifo_out_0_V_1_state_cmp_full");
    sc_trace(mVcdFile, fifo_out_1_V_1_data_out, "fifo_out_1_V_1_data_out");
    sc_trace(mVcdFile, fifo_out_1_V_1_vld_in, "fifo_out_1_V_1_vld_in");
    sc_trace(mVcdFile, fifo_out_1_V_1_vld_out, "fifo_out_1_V_1_vld_out");
    sc_trace(mVcdFile, fifo_out_1_V_1_ack_in, "fifo_out_1_V_1_ack_in");
    sc_trace(mVcdFile, fifo_out_1_V_1_ack_out, "fifo_out_1_V_1_ack_out");
    sc_trace(mVcdFile, fifo_out_1_V_1_payload_A, "fifo_out_1_V_1_payload_A");
    sc_trace(mVcdFile, fifo_out_1_V_1_payload_B, "fifo_out_1_V_1_payload_B");
    sc_trace(mVcdFile, fifo_out_1_V_1_sel_rd, "fifo_out_1_V_1_sel_rd");
    sc_trace(mVcdFile, fifo_out_1_V_1_sel_wr, "fifo_out_1_V_1_sel_wr");
    sc_trace(mVcdFile, fifo_out_1_V_1_sel, "fifo_out_1_V_1_sel");
    sc_trace(mVcdFile, fifo_out_1_V_1_load_A, "fifo_out_1_V_1_load_A");
    sc_trace(mVcdFile, fifo_out_1_V_1_load_B, "fifo_out_1_V_1_load_B");
    sc_trace(mVcdFile, fifo_out_1_V_1_state, "fifo_out_1_V_1_state");
    sc_trace(mVcdFile, fifo_out_1_V_1_state_cmp_full, "fifo_out_1_V_1_state_cmp_full");
    sc_trace(mVcdFile, fifo_out_2_V_1_data_out, "fifo_out_2_V_1_data_out");
    sc_trace(mVcdFile, fifo_out_2_V_1_vld_in, "fifo_out_2_V_1_vld_in");
    sc_trace(mVcdFile, fifo_out_2_V_1_vld_out, "fifo_out_2_V_1_vld_out");
    sc_trace(mVcdFile, fifo_out_2_V_1_ack_in, "fifo_out_2_V_1_ack_in");
    sc_trace(mVcdFile, fifo_out_2_V_1_ack_out, "fifo_out_2_V_1_ack_out");
    sc_trace(mVcdFile, fifo_out_2_V_1_payload_A, "fifo_out_2_V_1_payload_A");
    sc_trace(mVcdFile, fifo_out_2_V_1_payload_B, "fifo_out_2_V_1_payload_B");
    sc_trace(mVcdFile, fifo_out_2_V_1_sel_rd, "fifo_out_2_V_1_sel_rd");
    sc_trace(mVcdFile, fifo_out_2_V_1_sel_wr, "fifo_out_2_V_1_sel_wr");
    sc_trace(mVcdFile, fifo_out_2_V_1_sel, "fifo_out_2_V_1_sel");
    sc_trace(mVcdFile, fifo_out_2_V_1_load_A, "fifo_out_2_V_1_load_A");
    sc_trace(mVcdFile, fifo_out_2_V_1_load_B, "fifo_out_2_V_1_load_B");
    sc_trace(mVcdFile, fifo_out_2_V_1_state, "fifo_out_2_V_1_state");
    sc_trace(mVcdFile, fifo_out_2_V_1_state_cmp_full, "fifo_out_2_V_1_state_cmp_full");
    sc_trace(mVcdFile, fifo_out_3_V_1_data_out, "fifo_out_3_V_1_data_out");
    sc_trace(mVcdFile, fifo_out_3_V_1_vld_in, "fifo_out_3_V_1_vld_in");
    sc_trace(mVcdFile, fifo_out_3_V_1_vld_out, "fifo_out_3_V_1_vld_out");
    sc_trace(mVcdFile, fifo_out_3_V_1_ack_in, "fifo_out_3_V_1_ack_in");
    sc_trace(mVcdFile, fifo_out_3_V_1_ack_out, "fifo_out_3_V_1_ack_out");
    sc_trace(mVcdFile, fifo_out_3_V_1_payload_A, "fifo_out_3_V_1_payload_A");
    sc_trace(mVcdFile, fifo_out_3_V_1_payload_B, "fifo_out_3_V_1_payload_B");
    sc_trace(mVcdFile, fifo_out_3_V_1_sel_rd, "fifo_out_3_V_1_sel_rd");
    sc_trace(mVcdFile, fifo_out_3_V_1_sel_wr, "fifo_out_3_V_1_sel_wr");
    sc_trace(mVcdFile, fifo_out_3_V_1_sel, "fifo_out_3_V_1_sel");
    sc_trace(mVcdFile, fifo_out_3_V_1_load_A, "fifo_out_3_V_1_load_A");
    sc_trace(mVcdFile, fifo_out_3_V_1_load_B, "fifo_out_3_V_1_load_B");
    sc_trace(mVcdFile, fifo_out_3_V_1_state, "fifo_out_3_V_1_state");
    sc_trace(mVcdFile, fifo_out_3_V_1_state_cmp_full, "fifo_out_3_V_1_state_cmp_full");
    sc_trace(mVcdFile, fifo_out_4_V_1_data_out, "fifo_out_4_V_1_data_out");
    sc_trace(mVcdFile, fifo_out_4_V_1_vld_in, "fifo_out_4_V_1_vld_in");
    sc_trace(mVcdFile, fifo_out_4_V_1_vld_out, "fifo_out_4_V_1_vld_out");
    sc_trace(mVcdFile, fifo_out_4_V_1_ack_in, "fifo_out_4_V_1_ack_in");
    sc_trace(mVcdFile, fifo_out_4_V_1_ack_out, "fifo_out_4_V_1_ack_out");
    sc_trace(mVcdFile, fifo_out_4_V_1_payload_A, "fifo_out_4_V_1_payload_A");
    sc_trace(mVcdFile, fifo_out_4_V_1_payload_B, "fifo_out_4_V_1_payload_B");
    sc_trace(mVcdFile, fifo_out_4_V_1_sel_rd, "fifo_out_4_V_1_sel_rd");
    sc_trace(mVcdFile, fifo_out_4_V_1_sel_wr, "fifo_out_4_V_1_sel_wr");
    sc_trace(mVcdFile, fifo_out_4_V_1_sel, "fifo_out_4_V_1_sel");
    sc_trace(mVcdFile, fifo_out_4_V_1_load_A, "fifo_out_4_V_1_load_A");
    sc_trace(mVcdFile, fifo_out_4_V_1_load_B, "fifo_out_4_V_1_load_B");
    sc_trace(mVcdFile, fifo_out_4_V_1_state, "fifo_out_4_V_1_state");
    sc_trace(mVcdFile, fifo_out_4_V_1_state_cmp_full, "fifo_out_4_V_1_state_cmp_full");
    sc_trace(mVcdFile, fifo_out_5_V_1_data_out, "fifo_out_5_V_1_data_out");
    sc_trace(mVcdFile, fifo_out_5_V_1_vld_in, "fifo_out_5_V_1_vld_in");
    sc_trace(mVcdFile, fifo_out_5_V_1_vld_out, "fifo_out_5_V_1_vld_out");
    sc_trace(mVcdFile, fifo_out_5_V_1_ack_in, "fifo_out_5_V_1_ack_in");
    sc_trace(mVcdFile, fifo_out_5_V_1_ack_out, "fifo_out_5_V_1_ack_out");
    sc_trace(mVcdFile, fifo_out_5_V_1_payload_A, "fifo_out_5_V_1_payload_A");
    sc_trace(mVcdFile, fifo_out_5_V_1_payload_B, "fifo_out_5_V_1_payload_B");
    sc_trace(mVcdFile, fifo_out_5_V_1_sel_rd, "fifo_out_5_V_1_sel_rd");
    sc_trace(mVcdFile, fifo_out_5_V_1_sel_wr, "fifo_out_5_V_1_sel_wr");
    sc_trace(mVcdFile, fifo_out_5_V_1_sel, "fifo_out_5_V_1_sel");
    sc_trace(mVcdFile, fifo_out_5_V_1_load_A, "fifo_out_5_V_1_load_A");
    sc_trace(mVcdFile, fifo_out_5_V_1_load_B, "fifo_out_5_V_1_load_B");
    sc_trace(mVcdFile, fifo_out_5_V_1_state, "fifo_out_5_V_1_state");
    sc_trace(mVcdFile, fifo_out_5_V_1_state_cmp_full, "fifo_out_5_V_1_state_cmp_full");
    sc_trace(mVcdFile, first, "first");
    sc_trace(mVcdFile, local_words_address0, "local_words_address0");
    sc_trace(mVcdFile, local_words_ce0, "local_words_ce0");
    sc_trace(mVcdFile, local_words_we0, "local_words_we0");
    sc_trace(mVcdFile, local_words_q0, "local_words_q0");
    sc_trace(mVcdFile, tail_address0, "tail_address0");
    sc_trace(mVcdFile, tail_ce0, "tail_ce0");
    sc_trace(mVcdFile, tail_we0, "tail_we0");
    sc_trace(mVcdFile, tail_d0, "tail_d0");
    sc_trace(mVcdFile, tail_q0, "tail_q0");
    sc_trace(mVcdFile, gmem_read_blk_n_AR, "gmem_read_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, gmem_read_blk_n_R, "gmem_read_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_s_reg_930, "tmp_s_reg_930");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter7_reg, "tmp_s_reg_930_pp0_iter7_reg");
    sc_trace(mVcdFile, gmem_read_blk_n_AW, "gmem_read_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, gmem_read_blk_n_W, "gmem_read_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, gmem_read_blk_n_B, "gmem_read_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, tmp_8_reg_920, "tmp_8_reg_920");
    sc_trace(mVcdFile, fifo_out_0_V_TDATA_blk_n, "fifo_out_0_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, stride_reg_366, "stride_reg_366");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, fifo_out_1_V_TDATA_blk_n, "fifo_out_1_V_TDATA_blk_n");
    sc_trace(mVcdFile, fifo_out_2_V_TDATA_blk_n, "fifo_out_2_V_TDATA_blk_n");
    sc_trace(mVcdFile, fifo_out_3_V_TDATA_blk_n, "fifo_out_3_V_TDATA_blk_n");
    sc_trace(mVcdFile, fifo_out_4_V_TDATA_blk_n, "fifo_out_4_V_TDATA_blk_n");
    sc_trace(mVcdFile, fifo_out_5_V_TDATA_blk_n, "fifo_out_5_V_TDATA_blk_n");
    sc_trace(mVcdFile, gmem_read_AWVALID, "gmem_read_AWVALID");
    sc_trace(mVcdFile, gmem_read_AWREADY, "gmem_read_AWREADY");
    sc_trace(mVcdFile, gmem_read_AWADDR, "gmem_read_AWADDR");
    sc_trace(mVcdFile, gmem_read_WVALID, "gmem_read_WVALID");
    sc_trace(mVcdFile, gmem_read_WREADY, "gmem_read_WREADY");
    sc_trace(mVcdFile, gmem_read_WDATA, "gmem_read_WDATA");
    sc_trace(mVcdFile, gmem_read_ARVALID, "gmem_read_ARVALID");
    sc_trace(mVcdFile, gmem_read_ARREADY, "gmem_read_ARREADY");
    sc_trace(mVcdFile, gmem_read_ARADDR, "gmem_read_ARADDR");
    sc_trace(mVcdFile, gmem_read_RVALID, "gmem_read_RVALID");
    sc_trace(mVcdFile, gmem_read_RREADY, "gmem_read_RREADY");
    sc_trace(mVcdFile, gmem_read_RDATA, "gmem_read_RDATA");
    sc_trace(mVcdFile, gmem_read_RLAST, "gmem_read_RLAST");
    sc_trace(mVcdFile, gmem_read_RID, "gmem_read_RID");
    sc_trace(mVcdFile, gmem_read_RUSER, "gmem_read_RUSER");
    sc_trace(mVcdFile, gmem_read_RRESP, "gmem_read_RRESP");
    sc_trace(mVcdFile, gmem_read_BVALID, "gmem_read_BVALID");
    sc_trace(mVcdFile, gmem_read_BREADY, "gmem_read_BREADY");
    sc_trace(mVcdFile, gmem_read_BRESP, "gmem_read_BRESP");
    sc_trace(mVcdFile, gmem_read_BID, "gmem_read_BID");
    sc_trace(mVcdFile, gmem_read_BUSER, "gmem_read_BUSER");
    sc_trace(mVcdFile, val_assign_reg_378, "val_assign_reg_378");
    sc_trace(mVcdFile, h_reg_389, "h_reg_389");
    sc_trace(mVcdFile, h_reg_389_pp0_iter1_reg, "h_reg_389_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter0, "ap_block_state14_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter1, "ap_block_state15_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_read_ARREADY, "ap_sig_ioackin_gmem_read_ARREADY");
    sc_trace(mVcdFile, ap_block_state15_io, "ap_block_state15_io");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter2, "ap_block_state16_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter3, "ap_block_state17_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter4, "ap_block_state18_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter5, "ap_block_state19_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter6, "ap_block_state20_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter7, "ap_block_state21_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter8, "ap_block_state22_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter9, "ap_block_state23_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, h_reg_389_pp0_iter2_reg, "h_reg_389_pp0_iter2_reg");
    sc_trace(mVcdFile, h_reg_389_pp0_iter3_reg, "h_reg_389_pp0_iter3_reg");
    sc_trace(mVcdFile, h_reg_389_pp0_iter4_reg, "h_reg_389_pp0_iter4_reg");
    sc_trace(mVcdFile, h_reg_389_pp0_iter5_reg, "h_reg_389_pp0_iter5_reg");
    sc_trace(mVcdFile, h_reg_389_pp0_iter6_reg, "h_reg_389_pp0_iter6_reg");
    sc_trace(mVcdFile, h_reg_389_pp0_iter7_reg, "h_reg_389_pp0_iter7_reg");
    sc_trace(mVcdFile, h_reg_389_pp0_iter8_reg, "h_reg_389_pp0_iter8_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_401, "indvar_flatten_reg_401");
    sc_trace(mVcdFile, h2_reg_412, "h2_reg_412");
    sc_trace(mVcdFile, t_V_reg_423, "t_V_reg_423");
    sc_trace(mVcdFile, tmp_16_cast8_fu_480_p1, "tmp_16_cast8_fu_480_p1");
    sc_trace(mVcdFile, tmp_16_cast8_reg_826, "tmp_16_cast8_reg_826");
    sc_trace(mVcdFile, first_load_load_fu_484_p1, "first_load_load_fu_484_p1");
    sc_trace(mVcdFile, first_load_reg_833, "first_load_reg_833");
    sc_trace(mVcdFile, i_1_fu_494_p2, "i_1_fu_494_p2");
    sc_trace(mVcdFile, i_1_reg_840, "i_1_reg_840");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_2_fu_500_p1, "tmp_2_fu_500_p1");
    sc_trace(mVcdFile, tmp_2_reg_845, "tmp_2_reg_845");
    sc_trace(mVcdFile, tmp_1_fu_488_p2, "tmp_1_fu_488_p2");
    sc_trace(mVcdFile, stride_1_fu_517_p2, "stride_1_fu_517_p2");
    sc_trace(mVcdFile, stride_1_reg_861, "stride_1_reg_861");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, idx_fu_523_p5, "idx_fu_523_p5");
    sc_trace(mVcdFile, idx_reg_866, "idx_reg_866");
    sc_trace(mVcdFile, exitcond1_fu_511_p2, "exitcond1_fu_511_p2");
    sc_trace(mVcdFile, idx_cast_fu_535_p1, "idx_cast_fu_535_p1");
    sc_trace(mVcdFile, idx_cast_reg_871, "idx_cast_reg_871");
    sc_trace(mVcdFile, input_V2_sum_fu_549_p2, "input_V2_sum_fu_549_p2");
    sc_trace(mVcdFile, input_V2_sum_reg_876, "input_V2_sum_reg_876");
    sc_trace(mVcdFile, stream_head_V_reg_887, "stream_head_V_reg_887");
    sc_trace(mVcdFile, tail_addr_1_reg_894, "tail_addr_1_reg_894");
    sc_trace(mVcdFile, idx_cast3_fu_570_p1, "idx_cast3_fu_570_p1");
    sc_trace(mVcdFile, idx_cast3_reg_904, "idx_cast3_reg_904");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, words_reg_914, "words_reg_914");
    sc_trace(mVcdFile, tmp_8_fu_577_p2, "tmp_8_fu_577_p2");
    sc_trace(mVcdFile, bytes_read_fu_604_p2, "bytes_read_fu_604_p2");
    sc_trace(mVcdFile, bytes_read_reg_924, "bytes_read_reg_924");
    sc_trace(mVcdFile, tmp_s_fu_614_p2, "tmp_s_fu_614_p2");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter1_reg, "tmp_s_reg_930_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter2_reg, "tmp_s_reg_930_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter3_reg, "tmp_s_reg_930_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter4_reg, "tmp_s_reg_930_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter5_reg, "tmp_s_reg_930_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter6_reg, "tmp_s_reg_930_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_s_reg_930_pp0_iter8_reg, "tmp_s_reg_930_pp0_iter8_reg");
    sc_trace(mVcdFile, h_1_fu_619_p2, "h_1_fu_619_p2");
    sc_trace(mVcdFile, h_1_reg_934, "h_1_reg_934");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, input_V2_sum4_fu_638_p2, "input_V2_sum4_fu_638_p2");
    sc_trace(mVcdFile, input_V2_sum4_reg_939, "input_V2_sum4_reg_939");
    sc_trace(mVcdFile, stream_tail_1_cast_fu_653_p1, "stream_tail_1_cast_fu_653_p1");
    sc_trace(mVcdFile, stream_tail_1_cast_reg_944, "stream_tail_1_cast_reg_944");
    sc_trace(mVcdFile, gmem_read_addr_1_rea_reg_955, "gmem_read_addr_1_rea_reg_955");
    sc_trace(mVcdFile, bound_fu_820_p2, "bound_fu_820_p2");
    sc_trace(mVcdFile, bound_reg_960, "bound_reg_960");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, exitcond_flatten_fu_687_p2, "exitcond_flatten_fu_687_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_965, "exitcond_flatten_reg_965");
    sc_trace(mVcdFile, ap_block_state25_pp1_stage0_iter0, "ap_block_state25_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state26_pp1_stage0_iter1, "ap_block_state26_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_predicate_op195_write_state26, "ap_predicate_op195_write_state26");
    sc_trace(mVcdFile, ap_block_state26_io, "ap_block_state26_io");
    sc_trace(mVcdFile, ap_block_state27_pp1_stage0_iter2, "ap_block_state27_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_predicate_op206_write_state27, "ap_predicate_op206_write_state27");
    sc_trace(mVcdFile, ap_block_state27_io, "ap_block_state27_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_692_p2, "indvar_flatten_next_fu_692_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, t_V_mid2_fu_698_p3, "t_V_mid2_fu_698_p3");
    sc_trace(mVcdFile, t_V_mid2_reg_974, "t_V_mid2_reg_974");
    sc_trace(mVcdFile, temp_V_mid2_v_fu_712_p3, "temp_V_mid2_v_fu_712_p3");
    sc_trace(mVcdFile, temp_V_mid2_v_reg_979, "temp_V_mid2_v_reg_979");
    sc_trace(mVcdFile, word_V_fu_725_p2, "word_V_fu_725_p2");
    sc_trace(mVcdFile, tmp_20_fu_758_p1, "tmp_20_fu_758_p1");
    sc_trace(mVcdFile, input_V2_sum3_fu_777_p2, "input_V2_sum3_fu_777_p2");
    sc_trace(mVcdFile, input_V2_sum3_reg_1004, "input_V2_sum3_reg_1004");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_read_AWREADY, "ap_sig_ioackin_gmem_read_AWREADY");
    sc_trace(mVcdFile, i_2_fu_803_p2, "i_2_fu_803_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state14, "ap_condition_pp0_exit_iter0_state14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state25, "ap_condition_pp1_exit_iter0_state25");
    sc_trace(mVcdFile, data_V_address0, "data_V_address0");
    sc_trace(mVcdFile, data_V_ce0, "data_V_ce0");
    sc_trace(mVcdFile, data_V_we0, "data_V_we0");
    sc_trace(mVcdFile, data_V_q0, "data_V_q0");
    sc_trace(mVcdFile, i_reg_342, "i_reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, first_flag_reg_353, "first_flag_reg_353");
    sc_trace(mVcdFile, ap_block_state35, "ap_block_state35");
    sc_trace(mVcdFile, tmp_4_fu_505_p2, "tmp_4_fu_505_p2");
    sc_trace(mVcdFile, ap_phi_mux_val_assign_phi_fu_382_p4, "ap_phi_mux_val_assign_phi_fu_382_p4");
    sc_trace(mVcdFile, ap_phi_mux_h_phi_fu_393_p4, "ap_phi_mux_h_phi_fu_393_p4");
    sc_trace(mVcdFile, ap_phi_mux_h2_phi_fu_416_p4, "ap_phi_mux_h2_phi_fu_416_p4");
    sc_trace(mVcdFile, i1_reg_434, "i1_reg_434");
    sc_trace(mVcdFile, exitcond_fu_797_p2, "exitcond_fu_797_p2");
    sc_trace(mVcdFile, ap_phi_mux_first_flag_1_phi_fu_449_p4, "ap_phi_mux_first_flag_1_phi_fu_449_p4");
    sc_trace(mVcdFile, first_flag_1_reg_445, "first_flag_1_reg_445");
    sc_trace(mVcdFile, first_new_1_reg_457, "first_new_1_reg_457");
    sc_trace(mVcdFile, tmp_3_fu_564_p1, "tmp_3_fu_564_p1");
    sc_trace(mVcdFile, tmp_12_fu_667_p1, "tmp_12_fu_667_p1");
    sc_trace(mVcdFile, temp_V_mid2_fu_720_p1, "temp_V_mid2_fu_720_p1");
    sc_trace(mVcdFile, tmp_5_fu_809_p1, "tmp_5_fu_809_p1");
    sc_trace(mVcdFile, input_V2_sum_cast_fu_554_p1, "input_V2_sum_cast_fu_554_p1");
    sc_trace(mVcdFile, input_V2_sum4_cast_fu_657_p1, "input_V2_sum4_cast_fu_657_p1");
    sc_trace(mVcdFile, input_V2_sum3_cast_fu_782_p1, "input_V2_sum3_cast_fu_782_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_read_ARREADY, "ap_reg_ioackin_gmem_read_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_read_AWREADY, "ap_reg_ioackin_gmem_read_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_read_WREADY, "ap_reg_ioackin_gmem_read_WREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_read_WREADY, "ap_sig_ioackin_gmem_read_WREADY");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_block_state37, "ap_block_state37");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_470_p4, "tmp_fu_470_p4");
    sc_trace(mVcdFile, tmp_9_fu_539_p2, "tmp_9_fu_539_p2");
    sc_trace(mVcdFile, tmp_cast_fu_545_p1, "tmp_cast_fu_545_p1");
    sc_trace(mVcdFile, tmp_6_fu_573_p1, "tmp_6_fu_573_p1");
    sc_trace(mVcdFile, tmp_10_fu_587_p1, "tmp_10_fu_587_p1");
    sc_trace(mVcdFile, tmp_7_fu_582_p2, "tmp_7_fu_582_p2");
    sc_trace(mVcdFile, p_s_fu_590_p2, "p_s_fu_590_p2");
    sc_trace(mVcdFile, p_pn_fu_596_p3, "p_pn_fu_596_p3");
    sc_trace(mVcdFile, h_cast_fu_610_p1, "h_cast_fu_610_p1");
    sc_trace(mVcdFile, tmp_16_cast_fu_625_p1, "tmp_16_cast_fu_625_p1");
    sc_trace(mVcdFile, tmp_13_fu_629_p2, "tmp_13_fu_629_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_634_p1, "tmp_15_cast_fu_634_p1");
    sc_trace(mVcdFile, tmp_14_fu_643_p1, "tmp_14_fu_643_p1");
    sc_trace(mVcdFile, stream_tail_fu_647_p2, "stream_tail_fu_647_p2");
    sc_trace(mVcdFile, tmp_24_cast_fu_678_p1, "tmp_24_cast_fu_678_p1");
    sc_trace(mVcdFile, tmp_15_fu_682_p2, "tmp_15_fu_682_p2");
    sc_trace(mVcdFile, h_s_fu_706_p2, "h_s_fu_706_p2");
    sc_trace(mVcdFile, op2_assign_fu_734_p5, "op2_assign_fu_734_p5");
    sc_trace(mVcdFile, op2_assign_fu_734_p6, "op2_assign_fu_734_p6");
    sc_trace(mVcdFile, tmp_19_fu_748_p1, "tmp_19_fu_748_p1");
    sc_trace(mVcdFile, r_V_fu_752_p2, "r_V_fu_752_p2");
    sc_trace(mVcdFile, tmp_16_fu_768_p2, "tmp_16_fu_768_p2");
    sc_trace(mVcdFile, tmp_19_cast_fu_773_p1, "tmp_19_cast_fu_773_p1");
    sc_trace(mVcdFile, bound_fu_820_p0, "bound_fu_820_p0");
    sc_trace(mVcdFile, bound_fu_820_p1, "bound_fu_820_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, bound_fu_820_p00, "bound_fu_820_p00");
    sc_trace(mVcdFile, bound_fu_820_p10, "bound_fu_820_p10");
    sc_trace(mVcdFile, ap_condition_1071, "ap_condition_1071");
#endif

    }
    mHdltvinHandle.open("circ_buff_read_many128.hdltvin.dat");
    mHdltvoutHandle.open("circ_buff_read_many128.hdltvout.dat");
}

circ_buff_read_many128::~circ_buff_read_many128() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete local_words_U;
    delete tail_U;
    delete circ_buff_read_many128_control_s_axi_U;
    delete circ_buff_read_many128_gmem_read_m_axi_U;
    delete data_V_U;
    delete circ_buff_read_many128_mux_42_8_1_1_U1;
    delete circ_buff_read_many128_mul_mul_8ns_16ns_24_1_1_U2;
}

void circ_buff_read_many128::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void circ_buff_read_many128::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void circ_buff_read_many128::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void circ_buff_read_many128::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void circ_buff_read_many128::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void circ_buff_read_many128::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void circ_buff_read_many128::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void circ_buff_read_many128::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv16_FFFF;
}

void circ_buff_read_many128::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv8_0;
}

void circ_buff_read_many128::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_20;
}

void circ_buff_read_many128::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv8_40;
}

void circ_buff_read_many128::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_lv8_60;
}

void circ_buff_read_many128::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state14.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_577_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state14.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state14.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_577_p2.read()))) {
            ap_enable_reg_pp0_iter9 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state25.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state25.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state25.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_read_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_read_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem_read_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_read_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_read_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem_read_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_read_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_read_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_read_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_read_AWREADY.read())) {
                ap_reg_ioackin_gmem_read_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_read_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_read_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_read_WREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_read_WREADY.read())) {
                ap_reg_ioackin_gmem_read_WREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_0_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_vld_out.read()))) {
            fifo_out_0_V_1_sel_rd =  (sc_logic) (~fifo_out_0_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_0_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_ack_in.read()))) {
            fifo_out_0_V_1_sel_wr =  (sc_logic) (~fifo_out_0_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_0_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(fifo_out_0_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(fifo_out_0_V_1_state.read(), ap_const_lv2_2)))) {
            fifo_out_0_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(fifo_out_0_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(fifo_out_0_V_1_state.read(), ap_const_lv2_1)))) {
            fifo_out_0_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(fifo_out_0_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(fifo_out_0_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(fifo_out_0_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_ack_out.read()))))) {
            fifo_out_0_V_1_state = ap_const_lv2_3;
        } else {
            fifo_out_0_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_1_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_vld_out.read()))) {
            fifo_out_1_V_1_sel_rd =  (sc_logic) (~fifo_out_1_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_1_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_ack_in.read()))) {
            fifo_out_1_V_1_sel_wr =  (sc_logic) (~fifo_out_1_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_1_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_1_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_1_V_1_state.read())))) {
            fifo_out_1_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_1_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_1_V_1_state.read())))) {
            fifo_out_1_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_1_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_1_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_1_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_ack_out.read()))))) {
            fifo_out_1_V_1_state = ap_const_lv2_3;
        } else {
            fifo_out_1_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_2_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_vld_out.read()))) {
            fifo_out_2_V_1_sel_rd =  (sc_logic) (~fifo_out_2_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_2_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_ack_in.read()))) {
            fifo_out_2_V_1_sel_wr =  (sc_logic) (~fifo_out_2_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_2_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_2_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_2_V_1_state.read())))) {
            fifo_out_2_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_2_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_2_V_1_state.read())))) {
            fifo_out_2_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_2_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_2_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_2_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_ack_out.read()))))) {
            fifo_out_2_V_1_state = ap_const_lv2_3;
        } else {
            fifo_out_2_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_3_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_vld_out.read()))) {
            fifo_out_3_V_1_sel_rd =  (sc_logic) (~fifo_out_3_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_3_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_ack_in.read()))) {
            fifo_out_3_V_1_sel_wr =  (sc_logic) (~fifo_out_3_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_3_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_3_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_3_V_1_state.read())))) {
            fifo_out_3_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_3_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_3_V_1_state.read())))) {
            fifo_out_3_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_3_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_3_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_3_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_ack_out.read()))))) {
            fifo_out_3_V_1_state = ap_const_lv2_3;
        } else {
            fifo_out_3_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_4_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_vld_out.read()))) {
            fifo_out_4_V_1_sel_rd =  (sc_logic) (~fifo_out_4_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_4_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_ack_in.read()))) {
            fifo_out_4_V_1_sel_wr =  (sc_logic) (~fifo_out_4_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_4_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_4_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_4_V_1_state.read())))) {
            fifo_out_4_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_4_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_4_V_1_state.read())))) {
            fifo_out_4_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_4_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_4_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_4_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_ack_out.read()))))) {
            fifo_out_4_V_1_state = ap_const_lv2_3;
        } else {
            fifo_out_4_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_5_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_vld_out.read()))) {
            fifo_out_5_V_1_sel_rd =  (sc_logic) (~fifo_out_5_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_5_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_ack_in.read()))) {
            fifo_out_5_V_1_sel_wr =  (sc_logic) (~fifo_out_5_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        fifo_out_5_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_5_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_5_V_1_state.read())))) {
            fifo_out_5_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_5_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_5_V_1_state.read())))) {
            fifo_out_5_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, fifo_out_5_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, fifo_out_5_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, fifo_out_5_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_ack_out.read()))))) {
            fifo_out_5_V_1_state = ap_const_lv2_3;
        } else {
            fifo_out_5_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_797_p2.read()))) {
        first_flag_1_reg_445 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_511_p2.read()))) {
        first_flag_1_reg_445 = first_flag_reg_353.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_833.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_488_p2.read()))) {
        first_flag_reg_353 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, first_load_load_fu_484_p1.read()))) {
        first_flag_reg_353 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_797_p2.read()))) {
        first_new_1_reg_457 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_511_p2.read()))) {
        first_new_1_reg_457 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_965.read()))) {
        h2_reg_412 = temp_V_mid2_v_reg_979.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        h2_reg_412 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        h_reg_389 = h_1_reg_934.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_577_p2.read()))) {
        h_reg_389 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_488_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_505_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_833.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_505_p2.read()))))) {
        i1_reg_434 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_797_p2.read()))) {
        i1_reg_434 = i_2_fu_803_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_484_p1.read()))) {
        i_reg_342 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_342 = i_1_reg_840.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_687_p2.read()))) {
        indvar_flatten_reg_401 = indvar_flatten_next_fu_692_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        indvar_flatten_reg_401 = ap_const_lv24_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_488_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_505_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_505_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_833.read()))))) {
        stride_reg_366 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_920.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_BVALID.read())))) {
        stride_reg_366 = stride_1_reg_861.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_687_p2.read()))) {
        t_V_reg_423 = word_V_fu_725_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        t_V_reg_423 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        val_assign_reg_378 = stream_tail_1_cast_reg_944.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_577_p2.read()))) {
        val_assign_reg_378 = tail_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        bound_reg_960 = bound_fu_820_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_577_p2.read()))) {
        bytes_read_reg_924 = bytes_read_fu_604_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_965 = exitcond_flatten_fu_687_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_load_A.read())) {
        fifo_out_0_V_1_payload_A = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_load_B.read())) {
        fifo_out_0_V_1_payload_B = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_load_A.read())) {
        fifo_out_1_V_1_payload_A = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_load_B.read())) {
        fifo_out_1_V_1_payload_B = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_load_A.read())) {
        fifo_out_2_V_1_payload_A = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_load_B.read())) {
        fifo_out_2_V_1_payload_B = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_load_A.read())) {
        fifo_out_3_V_1_payload_A = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_load_B.read())) {
        fifo_out_3_V_1_payload_B = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_load_A.read())) {
        fifo_out_4_V_1_payload_A = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_load_B.read())) {
        fifo_out_4_V_1_payload_B = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_load_A.read())) {
        fifo_out_5_V_1_payload_A = tmp_20_fu_758_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_load_B.read())) {
        fifo_out_5_V_1_payload_B = tmp_20_fu_758_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_first_flag_1_phi_fu_449_p4.read()))) {
        first = first_new_1_reg_457.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        first_load_reg_833 = first.read();
        tmp_16_cast8_reg_826 = tmp_16_cast8_fu_480_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        gmem_read_addr_1_rea_reg_955 = gmem_read_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        h_1_reg_934 = h_1_fu_619_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        h_reg_389_pp0_iter1_reg = h_reg_389.read();
        tmp_s_reg_930 = tmp_s_fu_614_p2.read();
        tmp_s_reg_930_pp0_iter1_reg = tmp_s_reg_930.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        h_reg_389_pp0_iter2_reg = h_reg_389_pp0_iter1_reg.read();
        h_reg_389_pp0_iter3_reg = h_reg_389_pp0_iter2_reg.read();
        h_reg_389_pp0_iter4_reg = h_reg_389_pp0_iter3_reg.read();
        h_reg_389_pp0_iter5_reg = h_reg_389_pp0_iter4_reg.read();
        h_reg_389_pp0_iter6_reg = h_reg_389_pp0_iter5_reg.read();
        h_reg_389_pp0_iter7_reg = h_reg_389_pp0_iter6_reg.read();
        h_reg_389_pp0_iter8_reg = h_reg_389_pp0_iter7_reg.read();
        tmp_s_reg_930_pp0_iter2_reg = tmp_s_reg_930_pp0_iter1_reg.read();
        tmp_s_reg_930_pp0_iter3_reg = tmp_s_reg_930_pp0_iter2_reg.read();
        tmp_s_reg_930_pp0_iter4_reg = tmp_s_reg_930_pp0_iter3_reg.read();
        tmp_s_reg_930_pp0_iter5_reg = tmp_s_reg_930_pp0_iter4_reg.read();
        tmp_s_reg_930_pp0_iter6_reg = tmp_s_reg_930_pp0_iter5_reg.read();
        tmp_s_reg_930_pp0_iter7_reg = tmp_s_reg_930_pp0_iter6_reg.read();
        tmp_s_reg_930_pp0_iter8_reg = tmp_s_reg_930_pp0_iter7_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_833.read()))) {
        i_1_reg_840 = i_1_fu_494_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        idx_cast3_reg_904 = idx_cast3_fu_570_p1.read();
        tmp_8_reg_920 = tmp_8_fu_577_p2.read();
        words_reg_914 = local_words_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_511_p2.read()))) {
        idx_cast_reg_871 = idx_cast_fu_535_p1.read();
        idx_reg_866 = idx_fu_523_p5.read();
        input_V2_sum_reg_876 = input_V2_sum_fu_549_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        input_V2_sum3_reg_1004 = input_V2_sum3_fu_777_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_614_p2.read()))) {
        input_V2_sum4_reg_939 = input_V2_sum4_fu_638_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(gmem_read_RVALID.read(), ap_const_logic_1))) {
        stream_head_V_reg_887 = gmem_read_RDATA.read();
        tail_addr_1_reg_894 =  (sc_lv<3>) (tmp_3_fu_564_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_614_p2.read()))) {
        stream_tail_1_cast_reg_944 = stream_tail_1_cast_fu_653_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        stride_1_reg_861 = stride_1_fu_517_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_687_p2.read()))) {
        t_V_mid2_reg_974 = t_V_mid2_fu_698_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_687_p2.read()))) {
        temp_V_mid2_v_reg_979 = temp_V_mid2_v_fu_712_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_833.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_488_p2.read()))) {
        tmp_2_reg_845 = tmp_2_fu_500_p1.read();
    }
}

void circ_buff_read_many128::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[13];
}

void circ_buff_read_many128::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[15];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[14];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[16];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[17];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[18];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[23];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[24];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[25];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void circ_buff_read_many128::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void circ_buff_read_many128::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_RVALID.read()));
}

void circ_buff_read_many128::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state15_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_RVALID.read())));
}

void circ_buff_read_many128::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state15_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_RVALID.read())));
}

void circ_buff_read_many128::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state26_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state27_io.read())));
}

void circ_buff_read_many128::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state26_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state27_io.read())));
}

void circ_buff_read_many128::thread_ap_block_state14_pp0_stage0_iter0() {
    ap_block_state14_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state15_io() {
    ap_block_state15_io = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_read_ARREADY.read()));
}

void circ_buff_read_many128::thread_ap_block_state15_pp0_stage0_iter1() {
    ap_block_state15_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state16_pp0_stage0_iter2() {
    ap_block_state16_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state17_pp0_stage0_iter3() {
    ap_block_state17_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state18_pp0_stage0_iter4() {
    ap_block_state18_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state19_pp0_stage0_iter5() {
    ap_block_state19_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state20_pp0_stage0_iter6() {
    ap_block_state20_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state21_pp0_stage0_iter7() {
    ap_block_state21_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state22_pp0_stage0_iter8() {
    ap_block_state22_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_RVALID.read()));
}

void circ_buff_read_many128::thread_ap_block_state23_pp0_stage0_iter9() {
    ap_block_state23_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state25_pp1_stage0_iter0() {
    ap_block_state25_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state26_io() {
    ap_block_state26_io = ((esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op195_write_state26.read())));
}

void circ_buff_read_many128::thread_ap_block_state26_pp1_stage0_iter1() {
    ap_block_state26_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state27_io() {
    ap_block_state27_io = ((esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_in.read())) || (esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op206_write_state27.read())));
}

void circ_buff_read_many128::thread_ap_block_state27_pp1_stage0_iter2() {
    ap_block_state27_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_read_many128::thread_ap_block_state35() {
    ap_block_state35 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_920.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_BVALID.read()));
}

void circ_buff_read_many128::thread_ap_block_state37() {
    ap_block_state37 = (esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_in.read()));
}

void circ_buff_read_many128::thread_ap_condition_1071() {
    ap_condition_1071 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void circ_buff_read_many128::thread_ap_condition_pp0_exit_iter0_state14() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_614_p2.read())) {
        ap_condition_pp0_exit_iter0_state14 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state14 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_ap_condition_pp1_exit_iter0_state25() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_687_p2.read())) {
        ap_condition_pp1_exit_iter0_state25 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state25 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_state.read()[0]))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void circ_buff_read_many128::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void circ_buff_read_many128::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_ap_phi_mux_first_flag_1_phi_fu_449_p4() {
    ap_phi_mux_first_flag_1_phi_fu_449_p4 = first_flag_1_reg_445.read();
}

void circ_buff_read_many128::thread_ap_phi_mux_h2_phi_fu_416_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_965.read()))) {
        ap_phi_mux_h2_phi_fu_416_p4 = temp_V_mid2_v_reg_979.read();
    } else {
        ap_phi_mux_h2_phi_fu_416_p4 = h2_reg_412.read();
    }
}

void circ_buff_read_many128::thread_ap_phi_mux_h_phi_fu_393_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()))) {
        ap_phi_mux_h_phi_fu_393_p4 = h_1_reg_934.read();
    } else {
        ap_phi_mux_h_phi_fu_393_p4 = h_reg_389.read();
    }
}

void circ_buff_read_many128::thread_ap_phi_mux_val_assign_phi_fu_382_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()))) {
        ap_phi_mux_val_assign_phi_fu_382_p4 = stream_tail_1_cast_reg_944.read();
    } else {
        ap_phi_mux_val_assign_phi_fu_382_p4 = val_assign_reg_378.read();
    }
}

void circ_buff_read_many128::thread_ap_predicate_op195_write_state26() {
    ap_predicate_op195_write_state26 = ((esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_7) || 
  esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_6)) || esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_5));
}

void circ_buff_read_many128::thread_ap_predicate_op206_write_state27() {
    ap_predicate_op206_write_state27 = ((esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_7) || 
  esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_6)) || esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_5));
}

void circ_buff_read_many128::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_state.read()[0]))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void circ_buff_read_many128::thread_ap_sig_ioackin_gmem_read_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_ARREADY.read())) {
        ap_sig_ioackin_gmem_read_ARREADY = gmem_read_ARREADY.read();
    } else {
        ap_sig_ioackin_gmem_read_ARREADY = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_ap_sig_ioackin_gmem_read_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_AWREADY.read())) {
        ap_sig_ioackin_gmem_read_AWREADY = gmem_read_AWREADY.read();
    } else {
        ap_sig_ioackin_gmem_read_AWREADY = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_ap_sig_ioackin_gmem_read_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_WREADY.read())) {
        ap_sig_ioackin_gmem_read_WREADY = gmem_read_WREADY.read();
    } else {
        ap_sig_ioackin_gmem_read_WREADY = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_bound_fu_820_p0() {
    bound_fu_820_p0 =  (sc_lv<8>) (bound_fu_820_p00.read());
}

void circ_buff_read_many128::thread_bound_fu_820_p00() {
    bound_fu_820_p00 = esl_zext<24,8>(words_reg_914.read());
}

void circ_buff_read_many128::thread_bound_fu_820_p1() {
    bound_fu_820_p1 =  (sc_lv<16>) (bound_fu_820_p10.read());
}

void circ_buff_read_many128::thread_bound_fu_820_p10() {
    bound_fu_820_p10 = esl_zext<24,16>(bytes_read_reg_924.read());
}

void circ_buff_read_many128::thread_bytes_read_fu_604_p2() {
    bytes_read_fu_604_p2 = (!p_pn_fu_596_p3.read().is_01() || !tail_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_pn_fu_596_p3.read()) - sc_biguint<16>(tail_q0.read()));
}

void circ_buff_read_many128::thread_data_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        data_V_address0 =  (sc_lv<9>) (temp_V_mid2_fu_720_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        data_V_address0 =  (sc_lv<9>) (tmp_12_fu_667_p1.read());
    } else {
        data_V_address0 = "XXXXXXXXX";
    }
}

void circ_buff_read_many128::thread_data_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())))) {
        data_V_ce0 = ap_const_logic_1;
    } else {
        data_V_ce0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_data_V_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter8_reg.read()))) {
        data_V_we0 = ap_const_logic_1;
    } else {
        data_V_we0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_exitcond1_fu_511_p2() {
    exitcond1_fu_511_p2 = (!stride_reg_366.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(stride_reg_366.read() == ap_const_lv3_6);
}

void circ_buff_read_many128::thread_exitcond_flatten_fu_687_p2() {
    exitcond_flatten_fu_687_p2 = (!indvar_flatten_reg_401.read().is_01() || !bound_reg_960.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_401.read() == bound_reg_960.read());
}

void circ_buff_read_many128::thread_exitcond_fu_797_p2() {
    exitcond_fu_797_p2 = (!i1_reg_434.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_434.read() == ap_const_lv3_6);
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_ack_in() {
    fifo_out_0_V_1_ack_in = fifo_out_0_V_1_state.read()[1];
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_ack_out() {
    fifo_out_0_V_1_ack_out = fifo_out_0_V_TREADY.read();
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_0_V_1_sel.read())) {
        fifo_out_0_V_1_data_out = fifo_out_0_V_1_payload_B.read();
    } else {
        fifo_out_0_V_1_data_out = fifo_out_0_V_1_payload_A.read();
    }
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_load_A() {
    fifo_out_0_V_1_load_A = (fifo_out_0_V_1_state_cmp_full.read() & ~fifo_out_0_V_1_sel_wr.read());
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_load_B() {
    fifo_out_0_V_1_load_B = (fifo_out_0_V_1_sel_wr.read() & fifo_out_0_V_1_state_cmp_full.read());
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_sel() {
    fifo_out_0_V_1_sel = fifo_out_0_V_1_sel_rd.read();
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_state_cmp_full() {
    fifo_out_0_V_1_state_cmp_full =  (sc_logic) ((!fifo_out_0_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(fifo_out_0_V_1_state.read() != ap_const_lv2_1))[0];
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_out_0_V_1_vld_in = ap_const_logic_1;
    } else {
        fifo_out_0_V_1_vld_in = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_fifo_out_0_V_1_vld_out() {
    fifo_out_0_V_1_vld_out = fifo_out_0_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_0_V_TDATA() {
    fifo_out_0_V_TDATA = fifo_out_0_V_1_data_out.read();
}

void circ_buff_read_many128::thread_fifo_out_0_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read())))) {
        fifo_out_0_V_TDATA_blk_n = fifo_out_0_V_1_state.read()[1];
    } else {
        fifo_out_0_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_fifo_out_0_V_TVALID() {
    fifo_out_0_V_TVALID = fifo_out_0_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_ack_in() {
    fifo_out_1_V_1_ack_in = fifo_out_1_V_1_state.read()[1];
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_ack_out() {
    fifo_out_1_V_1_ack_out = fifo_out_1_V_TREADY.read();
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_1_V_1_sel.read())) {
        fifo_out_1_V_1_data_out = fifo_out_1_V_1_payload_B.read();
    } else {
        fifo_out_1_V_1_data_out = fifo_out_1_V_1_payload_A.read();
    }
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_load_A() {
    fifo_out_1_V_1_load_A = (fifo_out_1_V_1_state_cmp_full.read() & ~fifo_out_1_V_1_sel_wr.read());
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_load_B() {
    fifo_out_1_V_1_load_B = (fifo_out_1_V_1_sel_wr.read() & fifo_out_1_V_1_state_cmp_full.read());
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_sel() {
    fifo_out_1_V_1_sel = fifo_out_1_V_1_sel_rd.read();
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_state_cmp_full() {
    fifo_out_1_V_1_state_cmp_full =  (sc_logic) ((!fifo_out_1_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(fifo_out_1_V_1_state.read() != ap_const_lv2_1))[0];
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_out_1_V_1_vld_in = ap_const_logic_1;
    } else {
        fifo_out_1_V_1_vld_in = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_fifo_out_1_V_1_vld_out() {
    fifo_out_1_V_1_vld_out = fifo_out_1_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_1_V_TDATA() {
    fifo_out_1_V_TDATA = fifo_out_1_V_1_data_out.read();
}

void circ_buff_read_many128::thread_fifo_out_1_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_1)))) {
        fifo_out_1_V_TDATA_blk_n = fifo_out_1_V_1_state.read()[1];
    } else {
        fifo_out_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_fifo_out_1_V_TVALID() {
    fifo_out_1_V_TVALID = fifo_out_1_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_ack_in() {
    fifo_out_2_V_1_ack_in = fifo_out_2_V_1_state.read()[1];
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_ack_out() {
    fifo_out_2_V_1_ack_out = fifo_out_2_V_TREADY.read();
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_2_V_1_sel.read())) {
        fifo_out_2_V_1_data_out = fifo_out_2_V_1_payload_B.read();
    } else {
        fifo_out_2_V_1_data_out = fifo_out_2_V_1_payload_A.read();
    }
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_load_A() {
    fifo_out_2_V_1_load_A = (fifo_out_2_V_1_state_cmp_full.read() & ~fifo_out_2_V_1_sel_wr.read());
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_load_B() {
    fifo_out_2_V_1_load_B = (fifo_out_2_V_1_sel_wr.read() & fifo_out_2_V_1_state_cmp_full.read());
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_sel() {
    fifo_out_2_V_1_sel = fifo_out_2_V_1_sel_rd.read();
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_state_cmp_full() {
    fifo_out_2_V_1_state_cmp_full =  (sc_logic) ((!fifo_out_2_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(fifo_out_2_V_1_state.read() != ap_const_lv2_1))[0];
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_2) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_out_2_V_1_vld_in = ap_const_logic_1;
    } else {
        fifo_out_2_V_1_vld_in = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_fifo_out_2_V_1_vld_out() {
    fifo_out_2_V_1_vld_out = fifo_out_2_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_2_V_TDATA() {
    fifo_out_2_V_TDATA = fifo_out_2_V_1_data_out.read();
}

void circ_buff_read_many128::thread_fifo_out_2_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_2)))) {
        fifo_out_2_V_TDATA_blk_n = fifo_out_2_V_1_state.read()[1];
    } else {
        fifo_out_2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_fifo_out_2_V_TVALID() {
    fifo_out_2_V_TVALID = fifo_out_2_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_ack_in() {
    fifo_out_3_V_1_ack_in = fifo_out_3_V_1_state.read()[1];
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_ack_out() {
    fifo_out_3_V_1_ack_out = fifo_out_3_V_TREADY.read();
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_3_V_1_sel.read())) {
        fifo_out_3_V_1_data_out = fifo_out_3_V_1_payload_B.read();
    } else {
        fifo_out_3_V_1_data_out = fifo_out_3_V_1_payload_A.read();
    }
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_load_A() {
    fifo_out_3_V_1_load_A = (fifo_out_3_V_1_state_cmp_full.read() & ~fifo_out_3_V_1_sel_wr.read());
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_load_B() {
    fifo_out_3_V_1_load_B = (fifo_out_3_V_1_sel_wr.read() & fifo_out_3_V_1_state_cmp_full.read());
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_sel() {
    fifo_out_3_V_1_sel = fifo_out_3_V_1_sel_rd.read();
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_state_cmp_full() {
    fifo_out_3_V_1_state_cmp_full =  (sc_logic) ((!fifo_out_3_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(fifo_out_3_V_1_state.read() != ap_const_lv2_1))[0];
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_3) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_out_3_V_1_vld_in = ap_const_logic_1;
    } else {
        fifo_out_3_V_1_vld_in = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_fifo_out_3_V_1_vld_out() {
    fifo_out_3_V_1_vld_out = fifo_out_3_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_3_V_TDATA() {
    fifo_out_3_V_TDATA = fifo_out_3_V_1_data_out.read();
}

void circ_buff_read_many128::thread_fifo_out_3_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_3)))) {
        fifo_out_3_V_TDATA_blk_n = fifo_out_3_V_1_state.read()[1];
    } else {
        fifo_out_3_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_fifo_out_3_V_TVALID() {
    fifo_out_3_V_TVALID = fifo_out_3_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_ack_in() {
    fifo_out_4_V_1_ack_in = fifo_out_4_V_1_state.read()[1];
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_ack_out() {
    fifo_out_4_V_1_ack_out = fifo_out_4_V_TREADY.read();
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_4_V_1_sel.read())) {
        fifo_out_4_V_1_data_out = fifo_out_4_V_1_payload_B.read();
    } else {
        fifo_out_4_V_1_data_out = fifo_out_4_V_1_payload_A.read();
    }
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_load_A() {
    fifo_out_4_V_1_load_A = (fifo_out_4_V_1_state_cmp_full.read() & ~fifo_out_4_V_1_sel_wr.read());
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_load_B() {
    fifo_out_4_V_1_load_B = (fifo_out_4_V_1_sel_wr.read() & fifo_out_4_V_1_state_cmp_full.read());
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_sel() {
    fifo_out_4_V_1_sel = fifo_out_4_V_1_sel_rd.read();
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_state_cmp_full() {
    fifo_out_4_V_1_state_cmp_full =  (sc_logic) ((!fifo_out_4_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(fifo_out_4_V_1_state.read() != ap_const_lv2_1))[0];
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_4) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_out_4_V_1_vld_in = ap_const_logic_1;
    } else {
        fifo_out_4_V_1_vld_in = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_fifo_out_4_V_1_vld_out() {
    fifo_out_4_V_1_vld_out = fifo_out_4_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_4_V_TDATA() {
    fifo_out_4_V_TDATA = fifo_out_4_V_1_data_out.read();
}

void circ_buff_read_many128::thread_fifo_out_4_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_4)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_4)))) {
        fifo_out_4_V_TDATA_blk_n = fifo_out_4_V_1_state.read()[1];
    } else {
        fifo_out_4_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_fifo_out_4_V_TVALID() {
    fifo_out_4_V_TVALID = fifo_out_4_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_ack_in() {
    fifo_out_5_V_1_ack_in = fifo_out_5_V_1_state.read()[1];
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_ack_out() {
    fifo_out_5_V_1_ack_out = fifo_out_5_V_TREADY.read();
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, fifo_out_5_V_1_sel.read())) {
        fifo_out_5_V_1_data_out = fifo_out_5_V_1_payload_B.read();
    } else {
        fifo_out_5_V_1_data_out = fifo_out_5_V_1_payload_A.read();
    }
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_load_A() {
    fifo_out_5_V_1_load_A = (fifo_out_5_V_1_state_cmp_full.read() & ~fifo_out_5_V_1_sel_wr.read());
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_load_B() {
    fifo_out_5_V_1_load_B = (fifo_out_5_V_1_sel_wr.read() & fifo_out_5_V_1_state_cmp_full.read());
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_sel() {
    fifo_out_5_V_1_sel = fifo_out_5_V_1_sel_rd.read();
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_state_cmp_full() {
    fifo_out_5_V_1_state_cmp_full =  (sc_logic) ((!fifo_out_5_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(fifo_out_5_V_1_state.read() != ap_const_lv2_1))[0];
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op195_write_state26.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_out_5_V_1_vld_in = ap_const_logic_1;
    } else {
        fifo_out_5_V_1_vld_in = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_fifo_out_5_V_1_vld_out() {
    fifo_out_5_V_1_vld_out = fifo_out_5_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_fifo_out_5_V_TDATA() {
    fifo_out_5_V_TDATA = fifo_out_5_V_1_data_out.read();
}

void circ_buff_read_many128::thread_fifo_out_5_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          ((esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_7) || 
            esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_6)) || 
           esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_5))) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          ((esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_7) || 
            esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_6)) || 
           esl_seteq<1,3,3>(stride_reg_366.read(), ap_const_lv3_5))))) {
        fifo_out_5_V_TDATA_blk_n = fifo_out_5_V_1_state.read()[1];
    } else {
        fifo_out_5_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_fifo_out_5_V_TVALID() {
    fifo_out_5_V_TVALID = fifo_out_5_V_1_state.read()[0];
}

void circ_buff_read_many128::thread_first_load_load_fu_484_p1() {
    first_load_load_fu_484_p1 = first.read();
}

void circ_buff_read_many128::thread_gmem_read_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_condition_1071.read(), ap_const_boolean_1)) {
            gmem_read_ARADDR =  (sc_lv<32>) (input_V2_sum4_cast_fu_657_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            gmem_read_ARADDR =  (sc_lv<32>) (input_V2_sum_cast_fu_554_p1.read());
        } else {
            gmem_read_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        gmem_read_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void circ_buff_read_many128::thread_gmem_read_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        gmem_read_ARVALID = ap_const_logic_1;
    } else {
        gmem_read_ARVALID = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_gmem_read_AWADDR() {
    gmem_read_AWADDR =  (sc_lv<32>) (input_V2_sum3_cast_fu_782_p1.read());
}

void circ_buff_read_many128::thread_gmem_read_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_AWREADY.read()))) {
        gmem_read_AWVALID = ap_const_logic_1;
    } else {
        gmem_read_AWVALID = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_gmem_read_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_920.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_920.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_BVALID.read())))) {
        gmem_read_BREADY = ap_const_logic_1;
    } else {
        gmem_read_BREADY = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_gmem_read_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(gmem_read_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        gmem_read_RREADY = ap_const_logic_1;
    } else {
        gmem_read_RREADY = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_gmem_read_WDATA() {
    gmem_read_WDATA = esl_zext<128,16>(val_assign_reg_378.read());
}

void circ_buff_read_many128::thread_gmem_read_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_read_WREADY.read()))) {
        gmem_read_WVALID = ap_const_logic_1;
    } else {
        gmem_read_WVALID = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_gmem_read_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930.read())))) {
        gmem_read_blk_n_AR = m_axi_gmem_read_ARREADY.read();
    } else {
        gmem_read_blk_n_AR = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_gmem_read_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        gmem_read_blk_n_AW = m_axi_gmem_read_AWREADY.read();
    } else {
        gmem_read_blk_n_AW = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_gmem_read_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_920.read()))) {
        gmem_read_blk_n_B = m_axi_gmem_read_BVALID.read();
    } else {
        gmem_read_blk_n_B = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_gmem_read_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_930_pp0_iter7_reg.read())))) {
        gmem_read_blk_n_R = m_axi_gmem_read_RVALID.read();
    } else {
        gmem_read_blk_n_R = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_gmem_read_blk_n_W() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        gmem_read_blk_n_W = m_axi_gmem_read_WREADY.read();
    } else {
        gmem_read_blk_n_W = ap_const_logic_1;
    }
}

void circ_buff_read_many128::thread_h_1_fu_619_p2() {
    h_1_fu_619_p2 = (!ap_phi_mux_h_phi_fu_393_p4.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(ap_phi_mux_h_phi_fu_393_p4.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void circ_buff_read_many128::thread_h_cast_fu_610_p1() {
    h_cast_fu_610_p1 = esl_zext<16,15>(ap_phi_mux_h_phi_fu_393_p4.read());
}

void circ_buff_read_many128::thread_h_s_fu_706_p2() {
    h_s_fu_706_p2 = (!ap_const_lv15_1.is_01() || !ap_phi_mux_h2_phi_fu_416_p4.read().is_01())? sc_lv<15>(): (sc_biguint<15>(ap_const_lv15_1) + sc_biguint<15>(ap_phi_mux_h2_phi_fu_416_p4.read()));
}

void circ_buff_read_many128::thread_i_1_fu_494_p2() {
    i_1_fu_494_p2 = (!i_reg_342.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_342.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void circ_buff_read_many128::thread_i_2_fu_803_p2() {
    i_2_fu_803_p2 = (!i1_reg_434.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_reg_434.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void circ_buff_read_many128::thread_idx_cast3_fu_570_p1() {
    idx_cast3_fu_570_p1 = esl_zext<17,12>(idx_reg_866.read());
}

void circ_buff_read_many128::thread_idx_cast_fu_535_p1() {
    idx_cast_fu_535_p1 = esl_zext<13,12>(idx_fu_523_p5.read());
}

void circ_buff_read_many128::thread_idx_fu_523_p5() {
    idx_fu_523_p5 = esl_concat<11,1>(esl_concat<8,3>(esl_concat<3,5>(stride_reg_366.read(), ap_const_lv5_0), stride_reg_366.read()), ap_const_lv1_0);
}

void circ_buff_read_many128::thread_indvar_flatten_next_fu_692_p2() {
    indvar_flatten_next_fu_692_p2 = (!indvar_flatten_reg_401.read().is_01() || !ap_const_lv24_1.is_01())? sc_lv<24>(): (sc_biguint<24>(indvar_flatten_reg_401.read()) + sc_biguint<24>(ap_const_lv24_1));
}

void circ_buff_read_many128::thread_input_V2_sum3_cast_fu_782_p1() {
    input_V2_sum3_cast_fu_782_p1 = esl_zext<64,29>(input_V2_sum3_reg_1004.read());
}

void circ_buff_read_many128::thread_input_V2_sum3_fu_777_p2() {
    input_V2_sum3_fu_777_p2 = (!tmp_19_cast_fu_773_p1.read().is_01() || !tmp_16_cast8_reg_826.read().is_01())? sc_lv<29>(): (sc_biguint<29>(tmp_19_cast_fu_773_p1.read()) + sc_biguint<29>(tmp_16_cast8_reg_826.read()));
}

void circ_buff_read_many128::thread_input_V2_sum4_cast_fu_657_p1() {
    input_V2_sum4_cast_fu_657_p1 = esl_zext<64,29>(input_V2_sum4_reg_939.read());
}

void circ_buff_read_many128::thread_input_V2_sum4_fu_638_p2() {
    input_V2_sum4_fu_638_p2 = (!tmp_16_cast8_reg_826.read().is_01() || !tmp_15_cast_fu_634_p1.read().is_01())? sc_lv<29>(): (sc_biguint<29>(tmp_16_cast8_reg_826.read()) + sc_biguint<29>(tmp_15_cast_fu_634_p1.read()));
}

void circ_buff_read_many128::thread_input_V2_sum_cast_fu_554_p1() {
    input_V2_sum_cast_fu_554_p1 = esl_zext<64,29>(input_V2_sum_reg_876.read());
}

void circ_buff_read_many128::thread_input_V2_sum_fu_549_p2() {
    input_V2_sum_fu_549_p2 = (!tmp_cast_fu_545_p1.read().is_01() || !tmp_16_cast8_reg_826.read().is_01())? sc_lv<29>(): (sc_biguint<29>(tmp_cast_fu_545_p1.read()) + sc_biguint<29>(tmp_16_cast8_reg_826.read()));
}

void circ_buff_read_many128::thread_local_words_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        local_words_address0 =  (sc_lv<3>) (tmp_3_fu_564_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        local_words_address0 =  (sc_lv<3>) (tmp_2_reg_845.read());
    } else {
        local_words_address0 =  (sc_lv<3>) ("XXX");
    }
}

void circ_buff_read_many128::thread_local_words_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(gmem_read_RVALID.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        local_words_ce0 = ap_const_logic_1;
    } else {
        local_words_ce0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_local_words_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        local_words_we0 = ap_const_logic_1;
    } else {
        local_words_we0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_op2_assign_fu_734_p5() {
    op2_assign_fu_734_p5 = t_V_mid2_reg_974.read().range(2-1, 0);
}

void circ_buff_read_many128::thread_p_pn_fu_596_p3() {
    p_pn_fu_596_p3 = (!tmp_7_fu_582_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_7_fu_582_p2.read()[0].to_bool())? tmp_10_fu_587_p1.read(): p_s_fu_590_p2.read());
}

void circ_buff_read_many128::thread_p_s_fu_590_p2() {
    p_s_fu_590_p2 = (!ap_const_lv16_200.is_01() || !tmp_10_fu_587_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_200) + sc_biguint<16>(tmp_10_fu_587_p1.read()));
}

void circ_buff_read_many128::thread_r_V_fu_752_p2() {
    r_V_fu_752_p2 = (!tmp_19_fu_748_p1.read().is_01())? sc_lv<128>(): data_V_q0.read() >> (unsigned short)tmp_19_fu_748_p1.read().to_uint();
}

void circ_buff_read_many128::thread_stream_tail_1_cast_fu_653_p1() {
    stream_tail_1_cast_fu_653_p1 = esl_zext<16,9>(stream_tail_fu_647_p2.read());
}

void circ_buff_read_many128::thread_stream_tail_fu_647_p2() {
    stream_tail_fu_647_p2 = (!ap_const_lv9_1.is_01() || !tmp_14_fu_643_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(tmp_14_fu_643_p1.read()));
}

void circ_buff_read_many128::thread_stride_1_fu_517_p2() {
    stride_1_fu_517_p2 = (!stride_reg_366.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(stride_reg_366.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void circ_buff_read_many128::thread_t_V_mid2_fu_698_p3() {
    t_V_mid2_fu_698_p3 = (!tmp_15_fu_682_p2.read()[0].is_01())? sc_lv<4>(): ((tmp_15_fu_682_p2.read()[0].to_bool())? t_V_reg_423.read(): ap_const_lv4_0);
}

void circ_buff_read_many128::thread_tail_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tail_address0 =  (sc_lv<3>) (tmp_5_fu_809_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tail_address0 = tail_addr_1_reg_894.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tail_address0 =  (sc_lv<3>) (tmp_3_fu_564_p1.read());
    } else {
        tail_address0 =  (sc_lv<3>) ("XXX");
    }
}

void circ_buff_read_many128::thread_tail_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(gmem_read_RVALID.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        tail_ce0 = ap_const_logic_1;
    } else {
        tail_ce0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_tail_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tail_d0 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tail_d0 = val_assign_reg_378.read();
    } else {
        tail_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void circ_buff_read_many128::thread_tail_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_797_p2.read())))) {
        tail_we0 = ap_const_logic_1;
    } else {
        tail_we0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_temp_V_mid2_fu_720_p1() {
    temp_V_mid2_fu_720_p1 = esl_zext<64,15>(temp_V_mid2_v_fu_712_p3.read());
}

void circ_buff_read_many128::thread_temp_V_mid2_v_fu_712_p3() {
    temp_V_mid2_v_fu_712_p3 = (!tmp_15_fu_682_p2.read()[0].is_01())? sc_lv<15>(): ((tmp_15_fu_682_p2.read()[0].to_bool())? ap_phi_mux_h2_phi_fu_416_p4.read(): h_s_fu_706_p2.read());
}

void circ_buff_read_many128::thread_tmp_10_fu_587_p1() {
    tmp_10_fu_587_p1 = stream_head_V_reg_887.read().range(16-1, 0);
}

void circ_buff_read_many128::thread_tmp_12_fu_667_p1() {
    tmp_12_fu_667_p1 = esl_zext<64,15>(h_reg_389_pp0_iter8_reg.read());
}

void circ_buff_read_many128::thread_tmp_13_fu_629_p2() {
    tmp_13_fu_629_p2 = (!tmp_16_cast_fu_625_p1.read().is_01() || !idx_cast3_reg_904.read().is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_16_cast_fu_625_p1.read()) + sc_biguint<17>(idx_cast3_reg_904.read()));
}

void circ_buff_read_many128::thread_tmp_14_fu_643_p1() {
    tmp_14_fu_643_p1 = ap_phi_mux_val_assign_phi_fu_382_p4.read().range(9-1, 0);
}

void circ_buff_read_many128::thread_tmp_15_cast_fu_634_p1() {
    tmp_15_cast_fu_634_p1 = esl_zext<29,17>(tmp_13_fu_629_p2.read());
}

void circ_buff_read_many128::thread_tmp_15_fu_682_p2() {
    tmp_15_fu_682_p2 = (!tmp_24_cast_fu_678_p1.read().is_01() || !words_reg_914.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_24_cast_fu_678_p1.read()) < sc_biguint<8>(words_reg_914.read()));
}

void circ_buff_read_many128::thread_tmp_16_cast8_fu_480_p1() {
    tmp_16_cast8_fu_480_p1 = esl_zext<29,28>(tmp_fu_470_p4.read());
}

void circ_buff_read_many128::thread_tmp_16_cast_fu_625_p1() {
    tmp_16_cast_fu_625_p1 = esl_zext<17,16>(ap_phi_mux_val_assign_phi_fu_382_p4.read());
}

void circ_buff_read_many128::thread_tmp_16_fu_768_p2() {
    tmp_16_fu_768_p2 = (!idx_cast_reg_871.read().is_01() || !ap_const_lv13_200.is_01())? sc_lv<13>(): (sc_biguint<13>(idx_cast_reg_871.read()) + sc_biguint<13>(ap_const_lv13_200));
}

void circ_buff_read_many128::thread_tmp_19_cast_fu_773_p1() {
    tmp_19_cast_fu_773_p1 = esl_zext<29,13>(tmp_16_fu_768_p2.read());
}

void circ_buff_read_many128::thread_tmp_19_fu_748_p1() {
    tmp_19_fu_748_p1 = esl_zext<128,8>(op2_assign_fu_734_p6.read());
}

void circ_buff_read_many128::thread_tmp_1_fu_488_p2() {
    tmp_1_fu_488_p2 = (!i_reg_342.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_342.read() == ap_const_lv3_6);
}

void circ_buff_read_many128::thread_tmp_20_fu_758_p1() {
    tmp_20_fu_758_p1 = r_V_fu_752_p2.read().range(32-1, 0);
}

void circ_buff_read_many128::thread_tmp_24_cast_fu_678_p1() {
    tmp_24_cast_fu_678_p1 = esl_zext<8,4>(t_V_reg_423.read());
}

void circ_buff_read_many128::thread_tmp_2_fu_500_p1() {
    tmp_2_fu_500_p1 = esl_zext<64,3>(i_reg_342.read());
}

void circ_buff_read_many128::thread_tmp_3_fu_564_p1() {
    tmp_3_fu_564_p1 = esl_zext<64,3>(stride_reg_366.read());
}

void circ_buff_read_many128::thread_tmp_4_fu_505_p2() {
    tmp_4_fu_505_p2 = (!reset.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(reset.read() == ap_const_lv8_1);
}

void circ_buff_read_many128::thread_tmp_5_fu_809_p1() {
    tmp_5_fu_809_p1 = esl_zext<64,3>(i1_reg_434.read());
}

void circ_buff_read_many128::thread_tmp_6_fu_573_p1() {
    tmp_6_fu_573_p1 = esl_zext<128,16>(tail_q0.read());
}

void circ_buff_read_many128::thread_tmp_7_fu_582_p2() {
    tmp_7_fu_582_p2 = (!stream_head_V_reg_887.read().is_01() || !tmp_6_fu_573_p1.read().is_01())? sc_lv<1>(): (sc_biguint<128>(stream_head_V_reg_887.read()) > sc_biguint<128>(tmp_6_fu_573_p1.read()));
}

void circ_buff_read_many128::thread_tmp_8_fu_577_p2() {
    tmp_8_fu_577_p2 = (!tmp_6_fu_573_p1.read().is_01() || !stream_head_V_reg_887.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_573_p1.read() == stream_head_V_reg_887.read());
}

void circ_buff_read_many128::thread_tmp_9_fu_539_p2() {
    tmp_9_fu_539_p2 = (!idx_cast_fu_535_p1.read().is_01() || !ap_const_lv13_201.is_01())? sc_lv<13>(): (sc_biguint<13>(idx_cast_fu_535_p1.read()) + sc_biguint<13>(ap_const_lv13_201));
}

void circ_buff_read_many128::thread_tmp_cast_fu_545_p1() {
    tmp_cast_fu_545_p1 = esl_zext<29,13>(tmp_9_fu_539_p2.read());
}

void circ_buff_read_many128::thread_tmp_fu_470_p4() {
    tmp_fu_470_p4 = input_V.read().range(31, 4);
}

void circ_buff_read_many128::thread_tmp_s_fu_614_p2() {
    tmp_s_fu_614_p2 = (!h_cast_fu_610_p1.read().is_01() || !bytes_read_reg_924.read().is_01())? sc_lv<1>(): (sc_bigint<16>(h_cast_fu_610_p1.read()) < sc_bigint<16>(bytes_read_reg_924.read()));
}

void circ_buff_read_many128::thread_useable_words_address0() {
    useable_words_address0 =  (sc_lv<3>) (tmp_2_fu_500_p1.read());
}

void circ_buff_read_many128::thread_useable_words_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        useable_words_ce0 = ap_const_logic_1;
    } else {
        useable_words_ce0 = ap_const_logic_0;
    }
}

void circ_buff_read_many128::thread_word_V_fu_725_p2() {
    word_V_fu_725_p2 = (!t_V_mid2_fu_698_p3.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(t_V_mid2_fu_698_p3.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void circ_buff_read_many128::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_488_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_505_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_833.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_505_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_488_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_505_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_505_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_833.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_511_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_read_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(gmem_read_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_577_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 8192 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_614_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_614_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 32768 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_687_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_687_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_read_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_read_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_920.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_read_BVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_797_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_0_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_1_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_2_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_3_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_4_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_out_5_V_1_state.read()[0]))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<26>) ("XXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void circ_buff_read_many128::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_read_AWVALID\" :  \"" << m_axi_gmem_read_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_AWREADY\" :  \"" << m_axi_gmem_read_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWADDR\" :  \"" << m_axi_gmem_read_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWID\" :  \"" << m_axi_gmem_read_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWLEN\" :  \"" << m_axi_gmem_read_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWSIZE\" :  \"" << m_axi_gmem_read_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWBURST\" :  \"" << m_axi_gmem_read_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWLOCK\" :  \"" << m_axi_gmem_read_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWCACHE\" :  \"" << m_axi_gmem_read_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWPROT\" :  \"" << m_axi_gmem_read_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWQOS\" :  \"" << m_axi_gmem_read_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWREGION\" :  \"" << m_axi_gmem_read_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_AWUSER\" :  \"" << m_axi_gmem_read_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_WVALID\" :  \"" << m_axi_gmem_read_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_WREADY\" :  \"" << m_axi_gmem_read_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_WDATA\" :  \"" << m_axi_gmem_read_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_WSTRB\" :  \"" << m_axi_gmem_read_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_WLAST\" :  \"" << m_axi_gmem_read_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_WID\" :  \"" << m_axi_gmem_read_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_WUSER\" :  \"" << m_axi_gmem_read_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARVALID\" :  \"" << m_axi_gmem_read_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_ARREADY\" :  \"" << m_axi_gmem_read_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARADDR\" :  \"" << m_axi_gmem_read_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARID\" :  \"" << m_axi_gmem_read_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARLEN\" :  \"" << m_axi_gmem_read_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARSIZE\" :  \"" << m_axi_gmem_read_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARBURST\" :  \"" << m_axi_gmem_read_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARLOCK\" :  \"" << m_axi_gmem_read_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARCACHE\" :  \"" << m_axi_gmem_read_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARPROT\" :  \"" << m_axi_gmem_read_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARQOS\" :  \"" << m_axi_gmem_read_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARREGION\" :  \"" << m_axi_gmem_read_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_ARUSER\" :  \"" << m_axi_gmem_read_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_RVALID\" :  \"" << m_axi_gmem_read_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_RREADY\" :  \"" << m_axi_gmem_read_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_RDATA\" :  \"" << m_axi_gmem_read_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_RLAST\" :  \"" << m_axi_gmem_read_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_RID\" :  \"" << m_axi_gmem_read_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_RUSER\" :  \"" << m_axi_gmem_read_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_RRESP\" :  \"" << m_axi_gmem_read_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_BVALID\" :  \"" << m_axi_gmem_read_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_read_BREADY\" :  \"" << m_axi_gmem_read_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_BRESP\" :  \"" << m_axi_gmem_read_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_BID\" :  \"" << m_axi_gmem_read_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_read_BUSER\" :  \"" << m_axi_gmem_read_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_0_V_TDATA\" :  \"" << fifo_out_0_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_0_V_TVALID\" :  \"" << fifo_out_0_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_out_0_V_TREADY\" :  \"" << fifo_out_0_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_1_V_TDATA\" :  \"" << fifo_out_1_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_1_V_TVALID\" :  \"" << fifo_out_1_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_out_1_V_TREADY\" :  \"" << fifo_out_1_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_2_V_TDATA\" :  \"" << fifo_out_2_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_2_V_TVALID\" :  \"" << fifo_out_2_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_out_2_V_TREADY\" :  \"" << fifo_out_2_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_3_V_TDATA\" :  \"" << fifo_out_3_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_3_V_TVALID\" :  \"" << fifo_out_3_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_out_3_V_TREADY\" :  \"" << fifo_out_3_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_4_V_TDATA\" :  \"" << fifo_out_4_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_4_V_TVALID\" :  \"" << fifo_out_4_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_out_4_V_TREADY\" :  \"" << fifo_out_4_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_5_V_TDATA\" :  \"" << fifo_out_5_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_out_5_V_TVALID\" :  \"" << fifo_out_5_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_out_5_V_TREADY\" :  \"" << fifo_out_5_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

