

================================================================
== Vivado HLS Report for 'circ_buff_write_many128'
================================================================
* Date:           Tue Jul 14 19:03:13 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        dirc
* Solution:       write6
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|     3.500|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |                 |   Latency   | Iteration|  Initiation Interval  |    Trip   |          |
        |    Loop Name    | min |  max  |  Latency |  achieved |   target  |   Count   | Pipelined|
        +-----------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |- Loop 1         |   12|     12|         2|          -|          -|          6|    no    |
        |- Loop 2         |    6|      6|         1|          -|          -|          6|    no    |
        |- Loop 3         |    ?|      ?|         ?|          -|          -|          6|    no    |
        | + fifo_read     |    ?|      ?|         ?|          -|          -|          ?|    no    |
        |  ++ reassemble  |    ?|      ?|         1|          1|          1|          ?|    yes   |
        | + gmem_write    |    0|  32773|         8|          1|          1| 0 ~ 32767 |    yes   |
        +-----------------+-----+-------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 2
  Pipeline-0 : II = 1, D = 1, States = { 15 }
  Pipeline-1 : II = 1, D = 8, States = { 17 18 19 20 21 22 23 24 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!first_load & !tmp_1)
	4  / (tmp_1 & !tmp_4) | (first_load & !tmp_4)
	33  / (tmp_1 & tmp_4) | (first_load & tmp_4)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond1)
	34  / (exitcond1)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	32  / (or_cond)
	14  / (!or_cond)
14 --> 
	15  / (tmp_11 & empty_n)
	17  / (!empty_n) | (!tmp_11)
15 --> 
	16  / (!tmp_13)
	15  / (tmp_13)
16 --> 
	14  / true
17 --> 
	25  / (!tmp_15)
	18  / (tmp_15)
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	17  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	4  / true
33 --> 
	33  / (!exitcond)
	34  / (exitcond)
34 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%output_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %output_V)"   --->   Operation 35 'read' 'output_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%tmp = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %output_V_read, i32 4, i32 31)"   --->   Operation 36 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_28_cast6 = zext i28 %tmp to i29"   --->   Operation 37 'zext' 'tmp_28_cast6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i128* %gmem_out), !map !110"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_in_5_V), !map !116"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_in_4_V), !map !122"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_in_3_V), !map !128"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_in_2_V), !map !134"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_in_1_V), !map !140"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_in_0_V), !map !146"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %reset), !map !152"   --->   Operation 45 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %debug_register), !map !156"   --->   Operation 46 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([6 x i8]* %useable_words), !map !160"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([24 x i8]* @circ_buff_write_many) nounwind"   --->   Operation 48 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%data_V = alloca [512 x i128], align 8" [hls_src/circ_buff_write_many_128.cpp:60]   --->   Operation 49 'alloca' 'data_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i128* %gmem_out, [6 x i8]* @p_str11, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [9 x i8]* @p_str213, [6 x i8]* @p_str314, [1 x i8]* @p_str112, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:32]   --->   Operation 50 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %debug_register, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:34]   --->   Operation 51 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([6 x i8]* %useable_words, [1 x i8]* @p_str, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)" [hls_src/circ_buff_write_many_128.cpp:35]   --->   Operation 52 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([6 x i8]* %useable_words, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:35]   --->   Operation 53 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %reset, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:36]   --->   Operation 54 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %output_V, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:37]   --->   Operation 55 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:38]   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_in_0_V, [5 x i8]* @p_str617, i32 1, i32 1, [5 x i8]* @p_str718, i32 0, i32 0, [8 x i8]* @p_str819, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112)"   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_in_1_V, [5 x i8]* @p_str617, i32 1, i32 1, [5 x i8]* @p_str718, i32 0, i32 0, [8 x i8]* @p_str819, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112)"   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_in_2_V, [5 x i8]* @p_str617, i32 1, i32 1, [5 x i8]* @p_str718, i32 0, i32 0, [8 x i8]* @p_str819, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112)"   --->   Operation 59 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_in_3_V, [5 x i8]* @p_str617, i32 1, i32 1, [5 x i8]* @p_str718, i32 0, i32 0, [8 x i8]* @p_str819, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112)"   --->   Operation 60 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_in_4_V, [5 x i8]* @p_str617, i32 1, i32 1, [5 x i8]* @p_str718, i32 0, i32 0, [8 x i8]* @p_str819, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112)"   --->   Operation 61 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_in_5_V, [5 x i8]* @p_str617, i32 1, i32 1, [5 x i8]* @p_str718, i32 0, i32 0, [8 x i8]* @p_str819, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112)"   --->   Operation 62 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%first_load = load i1* @first, align 1"   --->   Operation 63 'load' 'first_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.65ns)   --->   "br i1 %first_load, label %._crit_edge, label %.preheader149.preheader" [hls_src/circ_buff_write_many_128.cpp:77]   --->   Operation 64 'br' <Predicate = true> <Delay = 0.65>
ST_1 : Operation 65 [1/1] (0.65ns)   --->   "br label %.preheader149" [hls_src/circ_buff_write_many_128.cpp:79]   --->   Operation 65 'br' <Predicate = (!first_load)> <Delay = 0.65>

State 2 <SV = 1> <Delay = 2.22>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%i = phi i3 [ %i_1, %1 ], [ 0, %.preheader149.preheader ]"   --->   Operation 66 'phi' 'i' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.58ns)   --->   "%tmp_1 = icmp eq i3 %i, -2" [hls_src/circ_buff_write_many_128.cpp:79]   --->   Operation 67 'icmp' 'tmp_1' <Predicate = (!first_load)> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 68 'speclooptripcount' 'empty_5' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.67ns)   --->   "%i_1 = add i3 %i, 1" [hls_src/circ_buff_write_many_128.cpp:79]   --->   Operation 69 'add' 'i_1' <Predicate = (!first_load)> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %._crit_edge.loopexit, label %1" [hls_src/circ_buff_write_many_128.cpp:79]   --->   Operation 70 'br' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_2 = zext i3 %i to i64" [hls_src/circ_buff_write_many_128.cpp:81]   --->   Operation 71 'zext' 'tmp_2' <Predicate = (!first_load & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%useable_words_addr = getelementptr [6 x i8]* %useable_words, i64 0, i64 %tmp_2" [hls_src/circ_buff_write_many_128.cpp:81]   --->   Operation 72 'getelementptr' 'useable_words_addr' <Predicate = (!first_load & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 73 [2/2] (0.67ns)   --->   "%useable_words_load = load volatile i8* %useable_words_addr, align 1" [hls_src/circ_buff_write_many_128.cpp:81]   --->   Operation 73 'load' 'useable_words_load' <Predicate = (!first_load & !tmp_1)> <Delay = 0.67> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 6> <RAM>
ST_2 : Operation 74 [1/1] (0.65ns)   --->   "br label %._crit_edge"   --->   Operation 74 'br' <Predicate = (!first_load & tmp_1)> <Delay = 0.65>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%first_flag = phi i1 [ false, %0 ], [ true, %._crit_edge.loopexit ]"   --->   Operation 75 'phi' 'first_flag' <Predicate = (tmp_1) | (first_load)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (1.00ns)   --->   "%reset_read = call i8 @_ssdm_op_Read.s_axilite.volatile.i8P(i8* %reset)" [hls_src/circ_buff_write_many_128.cpp:86]   --->   Operation 76 'read' 'reset_read' <Predicate = (tmp_1) | (first_load)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 77 [1/1] (0.84ns)   --->   "%tmp_4 = icmp eq i8 %reset_read, 1" [hls_src/circ_buff_write_many_128.cpp:86]   --->   Operation 77 'icmp' 'tmp_4' <Predicate = (tmp_1) | (first_load)> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %.preheader148.preheader, label %.preheader.preheader" [hls_src/circ_buff_write_many_128.cpp:86]   --->   Operation 78 'br' <Predicate = (tmp_1) | (first_load)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.65ns)   --->   "br label %.preheader" [hls_src/circ_buff_write_many_128.cpp:97]   --->   Operation 79 'br' <Predicate = (tmp_1 & !tmp_4) | (first_load & !tmp_4)> <Delay = 0.65>
ST_2 : Operation 80 [1/1] (0.65ns)   --->   "br label %.preheader148" [hls_src/circ_buff_write_many_128.cpp:88]   --->   Operation 80 'br' <Predicate = (tmp_1 & tmp_4) | (first_load & tmp_4)> <Delay = 0.65>

State 3 <SV = 2> <Delay = 1.35>
ST_3 : Operation 81 [1/2] (0.67ns)   --->   "%useable_words_load = load volatile i8* %useable_words_addr, align 1" [hls_src/circ_buff_write_many_128.cpp:81]   --->   Operation 81 'load' 'useable_words_load' <Predicate = true> <Delay = 0.67> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 6> <RAM>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%local_words_addr = getelementptr inbounds [6 x i8]* @local_words, i64 0, i64 %tmp_2" [hls_src/circ_buff_write_many_128.cpp:81]   --->   Operation 82 'getelementptr' 'local_words_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.67ns)   --->   "store i8 %useable_words_load, i8* %local_words_addr, align 1" [hls_src/circ_buff_write_many_128.cpp:81]   --->   Operation 83 'store' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "br label %.preheader149" [hls_src/circ_buff_write_many_128.cpp:79]   --->   Operation 84 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.78>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%stride = phi i3 [ %stride_1, %.loopexit146 ], [ 0, %.preheader.preheader ]"   --->   Operation 85 'phi' 'stride' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.58ns)   --->   "%exitcond1 = icmp eq i3 %stride, -2" [hls_src/circ_buff_write_many_128.cpp:97]   --->   Operation 86 'icmp' 'exitcond1' <Predicate = true> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 87 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.67ns)   --->   "%stride_1 = add i3 %stride, 1" [hls_src/circ_buff_write_many_128.cpp:97]   --->   Operation 88 'add' 'stride_1' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.loopexit147.loopexit, label %3" [hls_src/circ_buff_write_many_128.cpp:97]   --->   Operation 89 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%idx = call i12 @_ssdm_op_BitConcatenate.i12.i3.i5.i3.i1(i3 %stride, i5 0, i3 %stride, i1 false)" [hls_src/circ_buff_write_many_128.cpp:100]   --->   Operation 90 'bitconcatenate' 'idx' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%idx_cast = zext i12 %idx to i13" [hls_src/circ_buff_write_many_128.cpp:100]   --->   Operation 91 'zext' 'idx_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.80ns)   --->   "%tmp_s = add i13 512, %idx_cast" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 92 'add' 'tmp_s' <Predicate = (!exitcond1)> <Delay = 0.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_3_cast = zext i13 %tmp_s to i29" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 93 'zext' 'tmp_3_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.97ns)   --->   "%output_V2_sum = add i29 %tmp_28_cast6, %tmp_3_cast" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 94 'add' 'output_V2_sum' <Predicate = (!exitcond1)> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 95 [1/1] (0.65ns)   --->   "br label %.loopexit147"   --->   Operation 95 'br' <Predicate = (exitcond1)> <Delay = 0.65>

State 5 <SV = 3> <Delay = 3.50>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%output_V2_sum_cast = zext i29 %output_V2_sum to i64" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 96 'zext' 'output_V2_sum_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%gmem_out_addr = getelementptr i128* %gmem_out, i64 %output_V2_sum_cast" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 97 'getelementptr' 'gmem_out_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 98 [7/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 98 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 4> <Delay = 3.50>
ST_6 : Operation 99 [6/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 99 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 5> <Delay = 3.50>
ST_7 : Operation 100 [5/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 100 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 6> <Delay = 3.50>
ST_8 : Operation 101 [4/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 101 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 7> <Delay = 3.50>
ST_9 : Operation 102 [3/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 102 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 8> <Delay = 3.50>
ST_10 : Operation 103 [2/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 103 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 9> <Delay = 3.50>
ST_11 : Operation 104 [1/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 104 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 10> <Delay = 3.50>
ST_12 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_9 = zext i3 %stride to i64" [hls_src/circ_buff_write_many_128.cpp:102]   --->   Operation 105 'zext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 106 [1/1] (0.00ns)   --->   "%head_addr_1 = getelementptr inbounds [6 x i16]* @head, i64 0, i64 %tmp_9" [hls_src/circ_buff_write_many_128.cpp:102]   --->   Operation 106 'getelementptr' 'head_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 107 [2/2] (0.67ns)   --->   "%stream_head = load i16* %head_addr_1, align 2" [hls_src/circ_buff_write_many_128.cpp:102]   --->   Operation 107 'load' 'stream_head' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_12 : Operation 108 [1/1] (3.50ns)   --->   "%temp_tail_V = call i128 @_ssdm_op_Read.m_axi.volatile.i128P(i128* %gmem_out_addr)" [hls_src/circ_buff_write_many_128.cpp:104]   --->   Operation 108 'read' 'temp_tail_V' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 109 [1/1] (0.00ns)   --->   "%stream_tail = trunc i128 %temp_tail_V to i16" [hls_src/circ_buff_write_many_128.cpp:106]   --->   Operation 109 'trunc' 'stream_tail' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 110 [1/1] (0.00ns)   --->   "%local_words_addr_1 = getelementptr inbounds [6 x i8]* @local_words, i64 0, i64 %tmp_9" [hls_src/circ_buff_write_many_128.cpp:108]   --->   Operation 110 'getelementptr' 'local_words_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 111 [2/2] (0.67ns)   --->   "%words = load i8* %local_words_addr_1, align 1" [hls_src/circ_buff_write_many_128.cpp:108]   --->   Operation 111 'load' 'words' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>

State 13 <SV = 11> <Delay = 3.47>
ST_13 : Operation 112 [1/1] (0.00ns)   --->   "%idx_cast5 = zext i12 %idx to i17" [hls_src/circ_buff_write_many_128.cpp:100]   --->   Operation 112 'zext' 'idx_cast5' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 113 [1/2] (0.67ns)   --->   "%stream_head = load i16* %head_addr_1, align 2" [hls_src/circ_buff_write_many_128.cpp:102]   --->   Operation 113 'load' 'stream_head' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_13 : Operation 114 [1/2] (0.67ns)   --->   "%words = load i8* %local_words_addr_1, align 1" [hls_src/circ_buff_write_many_128.cpp:108]   --->   Operation 114 'load' 'words' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_13 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i16 %stream_head to i17" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 115 'zext' 'tmp_6_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_14 = trunc i16 %stream_head to i9" [hls_src/circ_buff_write_many_128.cpp:102]   --->   Operation 116 'trunc' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 117 [1/1] (0.85ns)   --->   "%tmp_8 = add i17 1, %tmp_6_cast" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 117 'add' 'tmp_8' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 118 [1/1] (0.77ns)   --->   "%tmp_8_cast4 = add i9 1, %tmp_14" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 118 'add' 'tmp_8_cast4' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_8_cast = zext i17 %tmp_8 to i18" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 119 'zext' 'tmp_8_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_10_cast3 = zext i16 %stream_tail to i17" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 120 'zext' 'tmp_10_cast3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_10_cast = zext i16 %stream_tail to i18" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 121 'zext' 'tmp_10_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 122 [1/1] (1.09ns)   --->   "%tmp_6 = icmp eq i18 %tmp_8_cast, %tmp_10_cast" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 122 'icmp' 'tmp_6' <Predicate = true> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_12_cast = zext i9 %tmp_8_cast4 to i17" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 123 'zext' 'tmp_12_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/1] (1.10ns)   --->   "%tmp_7 = icmp eq i17 %tmp_12_cast, %tmp_10_cast3" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 124 'icmp' 'tmp_7' <Predicate = true> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 125 [1/1] (0.28ns)   --->   "%or_cond = or i1 %tmp_6, %tmp_7" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 125 'or' 'or_cond' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 126 [1/1] (0.00ns)   --->   "br i1 %or_cond, label %.loopexit146, label %4" [hls_src/circ_buff_write_many_128.cpp:113]   --->   Operation 126 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 127 [1/1] (1.09ns)   --->   "%tmp_3 = icmp ult i17 %tmp_8, %tmp_10_cast3" [hls_src/circ_buff_write_many_128.cpp:128]   --->   Operation 127 'icmp' 'tmp_3' <Predicate = (!or_cond)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node bytes_to_write)   --->   "%p_neg = xor i16 %stream_head, -1" [hls_src/circ_buff_write_many_128.cpp:130]   --->   Operation 128 'xor' 'p_neg' <Predicate = (!or_cond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 129 [1/1] (0.85ns)   --->   "%tmp_10 = sub i16 511, %stream_head" [hls_src/circ_buff_write_many_128.cpp:136]   --->   Operation 129 'sub' 'tmp_10' <Predicate = (!or_cond)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node bytes_to_write)   --->   "%p_neg150_pn = select i1 %tmp_3, i16 %p_neg, i16 %tmp_10" [hls_src/circ_buff_write_many_128.cpp:128]   --->   Operation 130 'select' 'p_neg150_pn' <Predicate = (!or_cond)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 131 [1/1] (0.85ns) (out node of the LUT)   --->   "%bytes_to_write = add i16 %p_neg150_pn, %stream_tail" [hls_src/circ_buff_write_many_128.cpp:130]   --->   Operation 131 'add' 'bytes_to_write' <Predicate = (!or_cond)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 132 [1/1] (0.65ns)   --->   "br label %5" [hls_src/circ_buff_write_many_128.cpp:140]   --->   Operation 132 'br' <Predicate = (!or_cond)> <Delay = 0.65>

State 14 <SV = 12> <Delay = 1.75>
ST_14 : Operation 133 [1/1] (0.00ns)   --->   "%h = phi i15 [ 0, %4 ], [ %h_1, %12 ]"   --->   Operation 133 'phi' 'h' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 134 [1/1] (0.00ns)   --->   "%bytes_to_write_2 = zext i15 %h to i16" [hls_src/circ_buff_write_many_128.cpp:140]   --->   Operation 134 'zext' 'bytes_to_write_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 135 [1/1] (1.10ns)   --->   "%tmp_11 = icmp slt i16 %bytes_to_write_2, %bytes_to_write" [hls_src/circ_buff_write_many_128.cpp:140]   --->   Operation 135 'icmp' 'tmp_11' <Predicate = true> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 136 [1/1] (0.84ns)   --->   "%h_1 = add i15 %h, 1" [hls_src/circ_buff_write_many_128.cpp:140]   --->   Operation 136 'add' 'h_1' <Predicate = true> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 137 [1/1] (0.65ns)   --->   "br i1 %tmp_11, label %6, label %.loopexit" [hls_src/circ_buff_write_many_128.cpp:140]   --->   Operation 137 'br' <Predicate = true> <Delay = 0.65>
ST_14 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str920) nounwind" [hls_src/circ_buff_write_many_128.cpp:141]   --->   Operation 138 'specloopname' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str920)" [hls_src/circ_buff_write_many_128.cpp:141]   --->   Operation 139 'specregionbegin' 'tmp_12' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 140 [1/1] (0.72ns)   --->   "switch i3 %stride, label %branch5 [
    i3 0, label %branch0
    i3 1, label %branch1
    i3 2, label %branch2
    i3 3, label %branch3
    i3 -4, label %branch4
  ]" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 140 'switch' <Predicate = (tmp_11)> <Delay = 0.72>
ST_14 : Operation 141 [1/1] (0.00ns)   --->   "%fifo_in_4_V_read = call { i1, i32 } @_ssdm_op_NbRead.axis.volatile.i32P(i32* %fifo_in_4_V)" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 141 'nbread' 'fifo_in_4_V_read' <Predicate = (tmp_11 & stride == 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 142 [1/1] (0.00ns)   --->   "%p_vld4 = extractvalue { i1, i32 } %fifo_in_4_V_read, 0" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 142 'extractvalue' 'p_vld4' <Predicate = (tmp_11 & stride == 4)> <Delay = 0.00>
ST_14 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_29 = extractvalue { i1, i32 } %fifo_in_4_V_read, 1" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 143 'extractvalue' 'tmp_29' <Predicate = (tmp_11 & stride == 4)> <Delay = 0.00>
ST_14 : Operation 144 [1/1] (0.73ns)   --->   "br label %7" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 144 'br' <Predicate = (tmp_11 & stride == 4)> <Delay = 0.73>
ST_14 : Operation 145 [1/1] (0.00ns)   --->   "%fifo_in_3_V_read = call { i1, i32 } @_ssdm_op_NbRead.axis.volatile.i32P(i32* %fifo_in_3_V)" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 145 'nbread' 'fifo_in_3_V_read' <Predicate = (tmp_11 & stride == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 146 [1/1] (0.00ns)   --->   "%p_vld3 = extractvalue { i1, i32 } %fifo_in_3_V_read, 0" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 146 'extractvalue' 'p_vld3' <Predicate = (tmp_11 & stride == 3)> <Delay = 0.00>
ST_14 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_28 = extractvalue { i1, i32 } %fifo_in_3_V_read, 1" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 147 'extractvalue' 'tmp_28' <Predicate = (tmp_11 & stride == 3)> <Delay = 0.00>
ST_14 : Operation 148 [1/1] (0.73ns)   --->   "br label %7" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 148 'br' <Predicate = (tmp_11 & stride == 3)> <Delay = 0.73>
ST_14 : Operation 149 [1/1] (0.00ns)   --->   "%fifo_in_2_V_read = call { i1, i32 } @_ssdm_op_NbRead.axis.volatile.i32P(i32* %fifo_in_2_V)" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 149 'nbread' 'fifo_in_2_V_read' <Predicate = (tmp_11 & stride == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 150 [1/1] (0.00ns)   --->   "%p_vld2 = extractvalue { i1, i32 } %fifo_in_2_V_read, 0" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 150 'extractvalue' 'p_vld2' <Predicate = (tmp_11 & stride == 2)> <Delay = 0.00>
ST_14 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_27 = extractvalue { i1, i32 } %fifo_in_2_V_read, 1" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 151 'extractvalue' 'tmp_27' <Predicate = (tmp_11 & stride == 2)> <Delay = 0.00>
ST_14 : Operation 152 [1/1] (0.73ns)   --->   "br label %7" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 152 'br' <Predicate = (tmp_11 & stride == 2)> <Delay = 0.73>
ST_14 : Operation 153 [1/1] (0.00ns)   --->   "%fifo_in_1_V_read = call { i1, i32 } @_ssdm_op_NbRead.axis.volatile.i32P(i32* %fifo_in_1_V)" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 153 'nbread' 'fifo_in_1_V_read' <Predicate = (tmp_11 & stride == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 154 [1/1] (0.00ns)   --->   "%p_vld8 = extractvalue { i1, i32 } %fifo_in_1_V_read, 0" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 154 'extractvalue' 'p_vld8' <Predicate = (tmp_11 & stride == 1)> <Delay = 0.00>
ST_14 : Operation 155 [1/1] (0.00ns)   --->   "%tmp_24 = extractvalue { i1, i32 } %fifo_in_1_V_read, 1" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 155 'extractvalue' 'tmp_24' <Predicate = (tmp_11 & stride == 1)> <Delay = 0.00>
ST_14 : Operation 156 [1/1] (0.73ns)   --->   "br label %7" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 156 'br' <Predicate = (tmp_11 & stride == 1)> <Delay = 0.73>
ST_14 : Operation 157 [1/1] (0.00ns)   --->   "%fifo_in_0_V_read = call { i1, i32 } @_ssdm_op_NbRead.axis.volatile.i32P(i32* %fifo_in_0_V)" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 157 'nbread' 'fifo_in_0_V_read' <Predicate = (tmp_11 & stride == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 158 [1/1] (0.00ns)   --->   "%p_vld = extractvalue { i1, i32 } %fifo_in_0_V_read, 0" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 158 'extractvalue' 'p_vld' <Predicate = (tmp_11 & stride == 0)> <Delay = 0.00>
ST_14 : Operation 159 [1/1] (0.00ns)   --->   "%tmp_22 = extractvalue { i1, i32 } %fifo_in_0_V_read, 1" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 159 'extractvalue' 'tmp_22' <Predicate = (tmp_11 & stride == 0)> <Delay = 0.00>
ST_14 : Operation 160 [1/1] (0.73ns)   --->   "br label %7" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 160 'br' <Predicate = (tmp_11 & stride == 0)> <Delay = 0.73>
ST_14 : Operation 161 [1/1] (0.00ns)   --->   "%fifo_in_5_V_read = call { i1, i32 } @_ssdm_op_NbRead.axis.volatile.i32P(i32* %fifo_in_5_V)" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 161 'nbread' 'fifo_in_5_V_read' <Predicate = (tmp_11 & stride != 0 & stride != 1 & stride != 2 & stride != 3 & stride != 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 162 [1/1] (0.00ns)   --->   "%p_vld1 = extractvalue { i1, i32 } %fifo_in_5_V_read, 0" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 162 'extractvalue' 'p_vld1' <Predicate = (tmp_11 & stride != 0 & stride != 1 & stride != 2 & stride != 3 & stride != 4)> <Delay = 0.00>
ST_14 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_17 = extractvalue { i1, i32 } %fifo_in_5_V_read, 1" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 163 'extractvalue' 'tmp_17' <Predicate = (tmp_11 & stride != 0 & stride != 1 & stride != 2 & stride != 3 & stride != 4)> <Delay = 0.00>
ST_14 : Operation 164 [1/1] (0.73ns)   --->   "br label %7" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 164 'br' <Predicate = (tmp_11 & stride != 0 & stride != 1 & stride != 2 & stride != 3 & stride != 4)> <Delay = 0.73>
ST_14 : Operation 165 [1/1] (0.00ns)   --->   "%low = phi i32 [ %tmp_17, %branch5 ], [ %tmp_29, %branch4 ], [ %tmp_28, %branch3 ], [ %tmp_27, %branch2 ], [ %tmp_24, %branch1 ], [ %tmp_22, %branch0 ]"   --->   Operation 165 'phi' 'low' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 166 [1/1] (0.00ns)   --->   "%empty_n = phi i1 [ %p_vld1, %branch5 ], [ %p_vld4, %branch4 ], [ %p_vld3, %branch3 ], [ %p_vld2, %branch2 ], [ %p_vld8, %branch1 ], [ %p_vld, %branch0 ]" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 166 'phi' 'empty_n' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 167 [1/1] (0.65ns)   --->   "br i1 %empty_n, label %8, label %.loopexit" [hls_src/circ_buff_write_many_128.cpp:144]   --->   Operation 167 'br' <Predicate = (tmp_11)> <Delay = 0.65>
ST_14 : Operation 168 [1/1] (0.00ns)   --->   "%part_V = zext i32 %low to i128" [hls_src/circ_buff_write_many_128.cpp:145]   --->   Operation 168 'zext' 'part_V' <Predicate = (tmp_11 & empty_n)> <Delay = 0.00>
ST_14 : Operation 169 [1/1] (0.65ns)   --->   "br label %9" [hls_src/circ_buff_write_many_128.cpp:147]   --->   Operation 169 'br' <Predicate = (tmp_11 & empty_n)> <Delay = 0.65>
ST_14 : Operation 170 [1/1] (0.00ns)   --->   "%bytes_to_write_1 = phi i16 [ %bytes_to_write_2, %7 ], [ %bytes_to_write, %5 ]"   --->   Operation 170 'phi' 'bytes_to_write_1' <Predicate = (!empty_n) | (!tmp_11)> <Delay = 0.00>
ST_14 : Operation 171 [1/1] (0.65ns)   --->   "br label %13" [hls_src/circ_buff_write_many_128.cpp:163]   --->   Operation 171 'br' <Predicate = (!empty_n) | (!tmp_11)> <Delay = 0.65>

State 15 <SV = 13> <Delay = 2.11>
ST_15 : Operation 172 [1/1] (0.00ns)   --->   "%p_s = phi i128 [ %part_V, %8 ], [ %part_V_1, %11 ]"   --->   Operation 172 'phi' 'p_s' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 173 [1/1] (0.00ns)   --->   "%t_V = phi i4 [ 1, %8 ], [ %word_V, %11 ]"   --->   Operation 173 'phi' 't_V' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_21_cast = zext i4 %t_V to i8" [hls_src/circ_buff_write_many_128.cpp:147]   --->   Operation 174 'zext' 'tmp_21_cast' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 175 [1/1] (0.84ns)   --->   "%tmp_13 = icmp ult i8 %tmp_21_cast, %words" [hls_src/circ_buff_write_many_128.cpp:147]   --->   Operation 175 'icmp' 'tmp_13' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 176 [1/1] (0.00ns)   --->   "br i1 %tmp_13, label %10, label %12" [hls_src/circ_buff_write_many_128.cpp:147]   --->   Operation 176 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 177 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1021) nounwind" [hls_src/circ_buff_write_many_128.cpp:148]   --->   Operation 177 'specloopname' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_16 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1021)" [hls_src/circ_buff_write_many_128.cpp:148]   --->   Operation 178 'specregionbegin' 'tmp_16' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 179 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:149]   --->   Operation 179 'specpipeline' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 180 [1/1] (0.72ns)   --->   "switch i3 %stride, label %branch11 [
    i3 0, label %branch6
    i3 1, label %branch7
    i3 2, label %branch8
    i3 3, label %branch9
    i3 -4, label %branch10
  ]" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 180 'switch' <Predicate = (tmp_13)> <Delay = 0.72>
ST_15 : Operation 181 [1/1] (0.00ns)   --->   "%tmp_36 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %fifo_in_4_V)" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 181 'read' 'tmp_36' <Predicate = (stride == 4 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 182 [1/1] (0.73ns)   --->   "br label %11" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 182 'br' <Predicate = (stride == 4 & tmp_13)> <Delay = 0.73>
ST_15 : Operation 183 [1/1] (0.00ns)   --->   "%tmp_35 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %fifo_in_3_V)" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 183 'read' 'tmp_35' <Predicate = (stride == 3 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 184 [1/1] (0.73ns)   --->   "br label %11" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 184 'br' <Predicate = (stride == 3 & tmp_13)> <Delay = 0.73>
ST_15 : Operation 185 [1/1] (0.00ns)   --->   "%tmp_34 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %fifo_in_2_V)" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 185 'read' 'tmp_34' <Predicate = (stride == 2 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 186 [1/1] (0.73ns)   --->   "br label %11" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 186 'br' <Predicate = (stride == 2 & tmp_13)> <Delay = 0.73>
ST_15 : Operation 187 [1/1] (0.00ns)   --->   "%tmp_33 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %fifo_in_1_V)" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 187 'read' 'tmp_33' <Predicate = (stride == 1 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 188 [1/1] (0.73ns)   --->   "br label %11" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 188 'br' <Predicate = (stride == 1 & tmp_13)> <Delay = 0.73>
ST_15 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_32 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %fifo_in_0_V)" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 189 'read' 'tmp_32' <Predicate = (stride == 0 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 190 [1/1] (0.73ns)   --->   "br label %11" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 190 'br' <Predicate = (stride == 0 & tmp_13)> <Delay = 0.73>
ST_15 : Operation 191 [1/1] (0.00ns)   --->   "%tmp_31 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %fifo_in_5_V)" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 191 'read' 'tmp_31' <Predicate = (stride != 0 & stride != 1 & stride != 2 & stride != 3 & stride != 4 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 192 [1/1] (0.73ns)   --->   "br label %11" [hls_src/circ_buff_write_many_128.cpp:150]   --->   Operation 192 'br' <Predicate = (stride != 0 & stride != 1 & stride != 2 & stride != 3 & stride != 4 & tmp_13)> <Delay = 0.73>
ST_15 : Operation 193 [1/1] (0.00ns)   --->   "%hi = phi i32 [ %tmp_31, %branch11 ], [ %tmp_36, %branch10 ], [ %tmp_35, %branch9 ], [ %tmp_34, %branch8 ], [ %tmp_33, %branch7 ], [ %tmp_32, %branch6 ]"   --->   Operation 193 'phi' 'hi' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%hi_p_V = zext i32 %hi to i128" [hls_src/circ_buff_write_many_128.cpp:151]   --->   Operation 194 'zext' 'hi_p_V' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%tmp_37 = trunc i4 %t_V to i2" [hls_src/circ_buff_write_many_128.cpp:152]   --->   Operation 195 'trunc' 'tmp_37' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%op2_assign = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 0, i8 32, i8 64, i8 96, i2 %tmp_37)" [hls_src/circ_buff_write_many_128.cpp:152]   --->   Operation 196 'mux' 'op2_assign' <Predicate = (tmp_13)> <Delay = 0.00> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%tmp_25 = zext i8 %op2_assign to i128" [hls_src/circ_buff_write_many_128.cpp:152]   --->   Operation 197 'zext' 'tmp_25' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%r_V = shl i128 %hi_p_V, %tmp_25" [hls_src/circ_buff_write_many_128.cpp:152]   --->   Operation 198 'shl' 'r_V' <Predicate = (tmp_13)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 199 [1/1] (1.38ns) (out node of the LUT)   --->   "%part_V_1 = or i128 %r_V, %p_s" [hls_src/circ_buff_write_many_128.cpp:153]   --->   Operation 199 'or' 'part_V_1' <Predicate = (tmp_13)> <Delay = 1.38> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 200 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1021, i32 %tmp_16)" [hls_src/circ_buff_write_many_128.cpp:154]   --->   Operation 200 'specregionend' 'empty_8' <Predicate = (tmp_13)> <Delay = 0.00>
ST_15 : Operation 201 [1/1] (0.79ns)   --->   "%word_V = add i4 1, %t_V" [hls_src/circ_buff_write_many_128.cpp:147]   --->   Operation 201 'add' 'word_V' <Predicate = (tmp_13)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 202 [1/1] (0.00ns)   --->   "br label %9" [hls_src/circ_buff_write_many_128.cpp:147]   --->   Operation 202 'br' <Predicate = (tmp_13)> <Delay = 0.00>

State 16 <SV = 14> <Delay = 1.23>
ST_16 : Operation 203 [1/1] (0.00ns)   --->   "%tmp_18 = zext i15 %h to i64" [hls_src/circ_buff_write_many_128.cpp:160]   --->   Operation 203 'zext' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 204 [1/1] (0.00ns)   --->   "%data_V_addr = getelementptr [512 x i128]* %data_V, i64 0, i64 %tmp_18" [hls_src/circ_buff_write_many_128.cpp:160]   --->   Operation 204 'getelementptr' 'data_V_addr' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 205 [1/1] (1.23ns)   --->   "store i128 %p_s, i128* %data_V_addr, align 16" [hls_src/circ_buff_write_many_128.cpp:160]   --->   Operation 205 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_16 : Operation 206 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str920, i32 %tmp_12)" [hls_src/circ_buff_write_many_128.cpp:161]   --->   Operation 206 'specregionend' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 207 [1/1] (0.00ns)   --->   "br label %5" [hls_src/circ_buff_write_many_128.cpp:140]   --->   Operation 207 'br' <Predicate = true> <Delay = 0.00>

State 17 <SV = 13> <Delay = 1.82>
ST_17 : Operation 208 [1/1] (0.00ns)   --->   "%val_assign_1 = phi i16 [ %stream_head, %.loopexit ], [ %stream_head_2_cast, %14 ]"   --->   Operation 208 'phi' 'val_assign_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 209 [1/1] (0.00ns)   --->   "%h2 = phi i15 [ 0, %.loopexit ], [ %h_2, %14 ]"   --->   Operation 209 'phi' 'h2' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 210 [1/1] (0.00ns)   --->   "%h2_cast = zext i15 %h2 to i16" [hls_src/circ_buff_write_many_128.cpp:163]   --->   Operation 210 'zext' 'h2_cast' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 211 [1/1] (1.10ns)   --->   "%tmp_15 = icmp slt i16 %h2_cast, %bytes_to_write_1" [hls_src/circ_buff_write_many_128.cpp:163]   --->   Operation 211 'icmp' 'tmp_15' <Predicate = true> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 212 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 32767, i64 0)"   --->   Operation 212 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 213 [1/1] (0.84ns)   --->   "%h_2 = add i15 %h2, 1" [hls_src/circ_buff_write_many_128.cpp:163]   --->   Operation 213 'add' 'h_2' <Predicate = true> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 214 [1/1] (0.00ns)   --->   "br i1 %tmp_15, label %14, label %15" [hls_src/circ_buff_write_many_128.cpp:163]   --->   Operation 214 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 215 [1/1] (0.00ns)   --->   "%tmp_28_cast = zext i16 %val_assign_1 to i17" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 215 'zext' 'tmp_28_cast' <Predicate = (tmp_15)> <Delay = 0.00>
ST_17 : Operation 216 [1/1] (0.85ns)   --->   "%tmp_20 = add i17 %tmp_28_cast, %idx_cast5" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 216 'add' 'tmp_20' <Predicate = (tmp_15)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_22_cast = zext i17 %tmp_20 to i29" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 217 'zext' 'tmp_22_cast' <Predicate = (tmp_15)> <Delay = 0.00>
ST_17 : Operation 218 [1/1] (0.00ns)   --->   "%tmp_21 = zext i15 %h2 to i64" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 218 'zext' 'tmp_21' <Predicate = (tmp_15)> <Delay = 0.00>
ST_17 : Operation 219 [1/1] (0.00ns)   --->   "%data_V_addr_1 = getelementptr [512 x i128]* %data_V, i64 0, i64 %tmp_21" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 219 'getelementptr' 'data_V_addr_1' <Predicate = (tmp_15)> <Delay = 0.00>
ST_17 : Operation 220 [2/2] (1.23ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 16" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 220 'load' 'data_V_load' <Predicate = (tmp_15)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_17 : Operation 221 [1/1] (0.97ns)   --->   "%output_V2_sum4 = add i29 %tmp_28_cast6, %tmp_22_cast" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 221 'add' 'output_V2_sum4' <Predicate = (tmp_15)> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 222 [1/1] (0.00ns)   --->   "%tmp_30 = trunc i16 %val_assign_1 to i9" [hls_src/circ_buff_write_many_128.cpp:169]   --->   Operation 222 'trunc' 'tmp_30' <Predicate = (tmp_15)> <Delay = 0.00>
ST_17 : Operation 223 [1/1] (0.77ns)   --->   "%stream_head_1 = add i9 1, %tmp_30" [hls_src/circ_buff_write_many_128.cpp:169]   --->   Operation 223 'add' 'stream_head_1' <Predicate = (tmp_15)> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 224 [1/1] (0.00ns)   --->   "%stream_head_2_cast = zext i9 %stream_head_1 to i16" [hls_src/circ_buff_write_many_128.cpp:170]   --->   Operation 224 'zext' 'stream_head_2_cast' <Predicate = (tmp_15)> <Delay = 0.00>

State 18 <SV = 14> <Delay = 3.50>
ST_18 : Operation 225 [1/2] (1.23ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 16" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 225 'load' 'data_V_load' <Predicate = (tmp_15)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_18 : Operation 226 [1/1] (0.00ns)   --->   "%output_V2_sum4_cast = zext i29 %output_V2_sum4 to i64" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 226 'zext' 'output_V2_sum4_cast' <Predicate = (tmp_15)> <Delay = 0.00>
ST_18 : Operation 227 [1/1] (0.00ns)   --->   "%gmem_out_addr_1 = getelementptr i128* %gmem_out, i64 %output_V2_sum4_cast" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 227 'getelementptr' 'gmem_out_addr_1' <Predicate = (tmp_15)> <Delay = 0.00>
ST_18 : Operation 228 [1/1] (3.50ns)   --->   "%gmem_out_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i128P(i128* %gmem_out_addr_1, i32 1)" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 228 'writereq' 'gmem_out_addr_1_req' <Predicate = (tmp_15)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 15> <Delay = 3.50>
ST_19 : Operation 229 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i128P(i128* %gmem_out_addr_1, i128 %data_V_load, i16 -1)" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 229 'write' <Predicate = (tmp_15)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 16> <Delay = 3.50>
ST_20 : Operation 230 [5/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 230 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_15)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 17> <Delay = 3.50>
ST_21 : Operation 231 [4/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 231 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_15)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 18> <Delay = 3.50>
ST_22 : Operation 232 [3/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 232 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_15)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 19> <Delay = 3.50>
ST_23 : Operation 233 [2/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 233 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_15)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 20> <Delay = 3.50>
ST_24 : Operation 234 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1122) nounwind" [hls_src/circ_buff_write_many_128.cpp:164]   --->   Operation 234 'specloopname' <Predicate = (tmp_15)> <Delay = 0.00>
ST_24 : Operation 235 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1122)" [hls_src/circ_buff_write_many_128.cpp:164]   --->   Operation 235 'specregionbegin' 'tmp_19' <Predicate = (tmp_15)> <Delay = 0.00>
ST_24 : Operation 236 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str112) nounwind" [hls_src/circ_buff_write_many_128.cpp:165]   --->   Operation 236 'specpipeline' <Predicate = (tmp_15)> <Delay = 0.00>
ST_24 : Operation 237 [1/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [hls_src/circ_buff_write_many_128.cpp:167]   --->   Operation 237 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_15)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 238 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1122, i32 %tmp_19)" [hls_src/circ_buff_write_many_128.cpp:171]   --->   Operation 238 'specregionend' 'empty_11' <Predicate = (tmp_15)> <Delay = 0.00>
ST_24 : Operation 239 [1/1] (0.00ns)   --->   "br label %13" [hls_src/circ_buff_write_many_128.cpp:163]   --->   Operation 239 'br' <Predicate = (tmp_15)> <Delay = 0.00>

State 25 <SV = 14> <Delay = 1.78>
ST_25 : Operation 240 [1/1] (0.80ns)   --->   "%tmp_23 = add i13 %idx_cast, 513" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 240 'add' 'tmp_23' <Predicate = true> <Delay = 0.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 241 [1/1] (0.00ns)   --->   "%tmp_27_cast = zext i13 %tmp_23 to i29" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 241 'zext' 'tmp_27_cast' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 242 [1/1] (0.97ns)   --->   "%output_V2_sum3 = add i29 %tmp_27_cast, %tmp_28_cast6" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 242 'add' 'output_V2_sum3' <Predicate = true> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 243 [1/1] (0.67ns)   --->   "store i16 %val_assign_1, i16* %head_addr_1, align 2" [hls_src/circ_buff_write_many_128.cpp:177]   --->   Operation 243 'store' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>

State 26 <SV = 15> <Delay = 3.50>
ST_26 : Operation 244 [1/1] (0.00ns)   --->   "%output_V2_sum3_cast = zext i29 %output_V2_sum3 to i64" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 244 'zext' 'output_V2_sum3_cast' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 245 [1/1] (0.00ns)   --->   "%gmem_out_addr_2 = getelementptr i128* %gmem_out, i64 %output_V2_sum3_cast" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 245 'getelementptr' 'gmem_out_addr_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 246 [1/1] (3.50ns)   --->   "%gmem_out_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i128P(i128* %gmem_out_addr_2, i32 1)" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 246 'writereq' 'gmem_out_addr_2_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 16> <Delay = 3.50>
ST_27 : Operation 247 [1/1] (0.00ns)   --->   "%p_1 = zext i16 %val_assign_1 to i128" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 247 'zext' 'p_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 248 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i128P(i128* %gmem_out_addr_2, i128 %p_1, i16 -1)" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 248 'write' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 17> <Delay = 3.50>
ST_28 : Operation 249 [5/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 249 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 18> <Delay = 3.50>
ST_29 : Operation 250 [4/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 250 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 19> <Delay = 3.50>
ST_30 : Operation 251 [3/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 251 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 20> <Delay = 3.50>
ST_31 : Operation 252 [2/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 252 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 21> <Delay = 3.50>
ST_32 : Operation 253 [1/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [hls_src/circ_buff_write_many_128.cpp:176]   --->   Operation 253 'writeresp' 'gmem_out_addr_2_resp' <Predicate = (!or_cond)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 254 [1/1] (0.00ns)   --->   "br label %.loopexit146"   --->   Operation 254 'br' <Predicate = (!or_cond)> <Delay = 0.00>
ST_32 : Operation 255 [1/1] (0.00ns)   --->   "br label %.preheader" [hls_src/circ_buff_write_many_128.cpp:97]   --->   Operation 255 'br' <Predicate = true> <Delay = 0.00>

State 33 <SV = 2> <Delay = 0.77>
ST_33 : Operation 256 [1/1] (0.00ns)   --->   "%i1 = phi i3 [ %i_2, %2 ], [ 0, %.preheader148.preheader ]"   --->   Operation 256 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 257 [1/1] (0.58ns)   --->   "%exitcond = icmp eq i3 %i1, -2" [hls_src/circ_buff_write_many_128.cpp:88]   --->   Operation 257 'icmp' 'exitcond' <Predicate = true> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 258 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 258 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 259 [1/1] (0.67ns)   --->   "%i_2 = add i3 %i1, 1" [hls_src/circ_buff_write_many_128.cpp:88]   --->   Operation 259 'add' 'i_2' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 260 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.loopexit147.loopexit19, label %2" [hls_src/circ_buff_write_many_128.cpp:88]   --->   Operation 260 'br' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 261 [1/1] (0.00ns)   --->   "%tmp_5 = zext i3 %i1 to i64" [hls_src/circ_buff_write_many_128.cpp:90]   --->   Operation 261 'zext' 'tmp_5' <Predicate = (!exitcond)> <Delay = 0.00>
ST_33 : Operation 262 [1/1] (0.00ns)   --->   "%head_addr = getelementptr inbounds [6 x i16]* @head, i64 0, i64 %tmp_5" [hls_src/circ_buff_write_many_128.cpp:90]   --->   Operation 262 'getelementptr' 'head_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_33 : Operation 263 [1/1] (0.67ns)   --->   "store i16 0, i16* %head_addr, align 2" [hls_src/circ_buff_write_many_128.cpp:90]   --->   Operation 263 'store' <Predicate = (!exitcond)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_33 : Operation 264 [1/1] (0.00ns)   --->   "br label %.preheader148" [hls_src/circ_buff_write_many_128.cpp:88]   --->   Operation 264 'br' <Predicate = (!exitcond)> <Delay = 0.00>
ST_33 : Operation 265 [1/1] (0.65ns)   --->   "br label %.loopexit147"   --->   Operation 265 'br' <Predicate = (exitcond)> <Delay = 0.65>

State 34 <SV = 3> <Delay = 0.00>
ST_34 : Operation 266 [1/1] (0.00ns)   --->   "%first_flag_1 = phi i1 [ %first_flag, %.loopexit147.loopexit ], [ true, %.loopexit147.loopexit19 ]"   --->   Operation 266 'phi' 'first_flag_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 267 [1/1] (0.00ns)   --->   "%first_new_1 = phi i1 [ true, %.loopexit147.loopexit ], [ false, %.loopexit147.loopexit19 ]"   --->   Operation 267 'phi' 'first_new_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 268 [1/1] (0.00ns)   --->   "br i1 %first_flag_1, label %mergeST, label %.loopexit147.new"   --->   Operation 268 'br' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 269 [1/1] (0.00ns)   --->   "store i1 %first_new_1, i1* @first, align 1" [hls_src/circ_buff_write_many_128.cpp:83]   --->   Operation 269 'store' <Predicate = (first_flag_1)> <Delay = 0.00>
ST_34 : Operation 270 [1/1] (0.00ns)   --->   "br label %.loopexit147.new"   --->   Operation 270 'br' <Predicate = (first_flag_1)> <Delay = 0.00>
ST_34 : Operation 271 [1/1] (0.00ns)   --->   "ret void" [hls_src/circ_buff_write_many_128.cpp:181]   --->   Operation 271 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'output_V' [15]  (1 ns)

 <State 2>: 2.22ns
The critical path consists of the following:
	s_axi read on port 'reset' (hls_src/circ_buff_write_many_128.cpp:86) [64]  (1 ns)
	'icmp' operation ('tmp_4', hls_src/circ_buff_write_many_128.cpp:86) [65]  (0.849 ns)
	blocking operation 0.374 ns on control path)

 <State 3>: 1.35ns
The critical path consists of the following:
	'load' operation ('useable_words_load', hls_src/circ_buff_write_many_128.cpp:81) on array 'useable_words' [56]  (0.677 ns)
	'store' operation (hls_src/circ_buff_write_many_128.cpp:81) of variable 'useable_words_load', hls_src/circ_buff_write_many_128.cpp:81 on array 'local_words' [58]  (0.677 ns)

 <State 4>: 1.78ns
The critical path consists of the following:
	'phi' operation ('stride') with incoming values : ('stride', hls_src/circ_buff_write_many_128.cpp:97) [70]  (0 ns)
	'add' operation ('tmp_s', hls_src/circ_buff_write_many_128.cpp:104) [82]  (0.809 ns)
	'add' operation ('output_V2_sum', hls_src/circ_buff_write_many_128.cpp:104) [84]  (0.975 ns)

 <State 5>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_out_addr', hls_src/circ_buff_write_many_128.cpp:104) [86]  (0 ns)
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [87]  (3.5 ns)

 <State 6>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [87]  (3.5 ns)

 <State 7>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [87]  (3.5 ns)

 <State 8>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [87]  (3.5 ns)

 <State 9>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [87]  (3.5 ns)

 <State 10>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [87]  (3.5 ns)

 <State 11>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [87]  (3.5 ns)

 <State 12>: 3.5ns
The critical path consists of the following:
	bus read on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:104) [88]  (3.5 ns)

 <State 13>: 3.48ns
The critical path consists of the following:
	'load' operation ('stream_head', hls_src/circ_buff_write_many_128.cpp:102) on array 'head' [81]  (0.677 ns)
	'add' operation ('tmp_8', hls_src/circ_buff_write_many_128.cpp:113) [94]  (0.853 ns)
	'icmp' operation ('tmp_3', hls_src/circ_buff_write_many_128.cpp:128) [105]  (1.1 ns)
	'select' operation ('p_neg150_pn', hls_src/circ_buff_write_many_128.cpp:128) [108]  (0 ns)
	'add' operation ('bytes_to_write', hls_src/circ_buff_write_many_128.cpp:130) [109]  (0.853 ns)

 <State 14>: 1.76ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', hls_src/circ_buff_write_many_128.cpp:140) [112]  (0 ns)
	'icmp' operation ('tmp_11', hls_src/circ_buff_write_many_128.cpp:140) [114]  (1.1 ns)
	multiplexor before 'phi' operation ('bytes_to_write') with incoming values : ('bytes_to_write', hls_src/circ_buff_write_many_128.cpp:130) ('bytes_to_write', hls_src/circ_buff_write_many_128.cpp:140) [205]  (0.656 ns)
	'phi' operation ('bytes_to_write') with incoming values : ('bytes_to_write', hls_src/circ_buff_write_many_128.cpp:130) ('bytes_to_write', hls_src/circ_buff_write_many_128.cpp:140) [205]  (0 ns)

 <State 15>: 2.12ns
The critical path consists of the following:
	axis read on port 'fifo_in_4_V' (hls_src/circ_buff_write_many_128.cpp:150) [170]  (0 ns)
	multiplexor before 'phi' operation ('tmp') with incoming values : ('tmp', hls_src/circ_buff_write_many_128.cpp:150) [188]  (0.731 ns)
	'phi' operation ('tmp') with incoming values : ('tmp', hls_src/circ_buff_write_many_128.cpp:150) [188]  (0 ns)
	'shl' operation ('r.V', hls_src/circ_buff_write_many_128.cpp:152) [193]  (0 ns)
	'or' operation ('part.V', hls_src/circ_buff_write_many_128.cpp:153) [194]  (1.39 ns)

 <State 16>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('data_V_addr', hls_src/circ_buff_write_many_128.cpp:160) [200]  (0 ns)
	'store' operation (hls_src/circ_buff_write_many_128.cpp:160) of variable 'part.V' on array 'data.V', hls_src/circ_buff_write_many_128.cpp:60 [201]  (1.24 ns)

 <State 17>: 1.83ns
The critical path consists of the following:
	'phi' operation ('stream_head') with incoming values : ('stream_head', hls_src/circ_buff_write_many_128.cpp:102) ('stream_head_2_cast', hls_src/circ_buff_write_many_128.cpp:170) [208]  (0 ns)
	'add' operation ('tmp_20', hls_src/circ_buff_write_many_128.cpp:167) [220]  (0.853 ns)
	'add' operation ('output_V2_sum4', hls_src/circ_buff_write_many_128.cpp:167) [225]  (0.975 ns)

 <State 18>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_out_addr_1', hls_src/circ_buff_write_many_128.cpp:167) [227]  (0 ns)
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:167) [228]  (3.5 ns)

 <State 19>: 3.5ns
The critical path consists of the following:
	bus write on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:167) [229]  (3.5 ns)

 <State 20>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:167) [230]  (3.5 ns)

 <State 21>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:167) [230]  (3.5 ns)

 <State 22>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:167) [230]  (3.5 ns)

 <State 23>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:167) [230]  (3.5 ns)

 <State 24>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:167) [230]  (3.5 ns)

 <State 25>: 1.78ns
The critical path consists of the following:
	'add' operation ('tmp_23', hls_src/circ_buff_write_many_128.cpp:176) [237]  (0.809 ns)
	'add' operation ('output_V2_sum3', hls_src/circ_buff_write_many_128.cpp:176) [240]  (0.975 ns)

 <State 26>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_out_addr_2', hls_src/circ_buff_write_many_128.cpp:176) [242]  (0 ns)
	bus request on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:176) [243]  (3.5 ns)

 <State 27>: 3.5ns
The critical path consists of the following:
	bus write on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:176) [244]  (3.5 ns)

 <State 28>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:176) [245]  (3.5 ns)

 <State 29>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:176) [245]  (3.5 ns)

 <State 30>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:176) [245]  (3.5 ns)

 <State 31>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:176) [245]  (3.5 ns)

 <State 32>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (hls_src/circ_buff_write_many_128.cpp:176) [245]  (3.5 ns)

 <State 33>: 0.77ns
The critical path consists of the following:
	'icmp' operation ('exitcond', hls_src/circ_buff_write_many_128.cpp:88) [256]  (0.584 ns)
	blocking operation 0.187 ns on control path)

 <State 34>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
