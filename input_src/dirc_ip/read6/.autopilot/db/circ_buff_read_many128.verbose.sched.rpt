

================================================================
== Vivado HLS Report for 'circ_buff_read_many128'
================================================================
* Date:           Tue Jul 14 19:06:01 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        dirc
* Solution:       read6
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|     3.500|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+----------+-----+----------+---------+
    |     Latency    |    Interval    | Pipeline|
    | min |    max   | min |    max   |   Type  |
    +-----+----------+-----+----------+---------+
    |    9|  50330307|    9|  50330307|   none  |
    +-----+----------+-----+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+-----+----------+--------------+-----------+-----------+-------------+----------+
        |                         |     Latency    |   Iteration  |  Initiation Interval  |     Trip    |          |
        |        Loop Name        | min |    max   |    Latency   |  achieved |   target  |    Count    | Pipelined|
        +-------------------------+-----+----------+--------------+-----------+-----------+-------------+----------+
        |- Loop 1                 |   12|        12|             2|          -|          -|            6|    no    |
        |- Loop 2                 |    6|         6|             1|          -|          -|            6|    no    |
        |- Loop 3                 |   66|  50330292| 11 ~ 8388382 |          -|          -|            6|    no    |
        | + gmem_read             |    0|     32775|            10|          1|          1|  0 ~ 32767  |    yes   |
        | + fifo_write_decompose  |    0|   8355586|             3|          1|          1| 0 ~ 8355585 |    yes   |
        +-------------------------+-----+----------+--------------+-----------+-----------+-------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 37
* Pipeline : 2
  Pipeline-0 : II = 1, D = 10, States = { 14 15 16 17 18 19 20 21 22 23 }
  Pipeline-1 : II = 1, D = 3, States = { 25 26 27 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!first_load & !tmp_1)
	4  / (tmp_1 & !tmp_4) | (first_load & !tmp_4)
	36  / (tmp_1 & tmp_4) | (first_load & tmp_4)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond1)
	37  / (exitcond1)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	35  / (tmp_8)
	14  / (!tmp_8)
14 --> 
	24  / (!tmp_s)
	15  / (tmp_s)
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	14  / true
24 --> 
	25  / true
25 --> 
	28  / (exitcond_flatten)
	26  / (!exitcond_flatten)
26 --> 
	27  / true
27 --> 
	25  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	4  / true
36 --> 
	36  / (!exitcond)
	37  / (exitcond)
37 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 38 [1/1] (1.00ns)   --->   "%input_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %input_V)"   --->   Operation 38 'read' 'input_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %input_V_read, i32 4, i32 31)"   --->   Operation 39 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_16_cast8 = zext i28 %tmp to i29"   --->   Operation 40 'zext' 'tmp_16_cast8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i128* %gmem_read), !map !110"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_out_5_V), !map !116"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_out_4_V), !map !122"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_out_3_V), !map !128"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_out_2_V), !map !134"   --->   Operation 45 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_out_1_V), !map !140"   --->   Operation 46 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %fifo_out_0_V), !map !146"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %reset), !map !152"   --->   Operation 48 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %debug_register), !map !156"   --->   Operation 49 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([6 x i8]* %useable_words), !map !160"   --->   Operation 50 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([23 x i8]* @circ_buff_read_many1) nounwind"   --->   Operation 51 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%data_V = alloca [512 x i128], align 8" [hls_src/circ_buff_read_many_128.cpp:61]   --->   Operation 52 'alloca' 'data_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i128* %gmem_read, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [10 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:32]   --->   Operation 53 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %debug_register, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:34]   --->   Operation 54 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([6 x i8]* %useable_words, [1 x i8]* @p_str9, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str9, i32 -1, [1 x i8]* @p_str9, [1 x i8]* @p_str9, [1 x i8]* @p_str9, [1 x i8]* @p_str9, [1 x i8]* @p_str9)" [hls_src/circ_buff_read_many_128.cpp:35]   --->   Operation 55 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([6 x i8]* %useable_words, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:35]   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %reset, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:36]   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %input_V, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:37]   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:38]   --->   Operation 59 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_out_0_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [9 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 60 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_out_1_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [9 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 61 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_out_2_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [9 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 62 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_out_3_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [9 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_out_4_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [9 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 64 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %fifo_out_5_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [9 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 65 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%first_load = load i1* @first, align 1"   --->   Operation 66 'load' 'first_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.65ns)   --->   "br i1 %first_load, label %._crit_edge, label %.preheader253.preheader" [hls_src/circ_buff_read_many_128.cpp:70]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.65>
ST_1 : Operation 68 [1/1] (0.65ns)   --->   "br label %.preheader253" [hls_src/circ_buff_read_many_128.cpp:72]   --->   Operation 68 'br' <Predicate = (!first_load)> <Delay = 0.65>

State 2 <SV = 1> <Delay = 2.42>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%i = phi i3 [ %i_1, %1 ], [ 0, %.preheader253.preheader ]"   --->   Operation 69 'phi' 'i' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.58ns)   --->   "%tmp_1 = icmp eq i3 %i, -2" [hls_src/circ_buff_read_many_128.cpp:72]   --->   Operation 70 'icmp' 'tmp_1' <Predicate = (!first_load)> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 71 'speclooptripcount' 'empty_5' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.67ns)   --->   "%i_1 = add i3 %i, 1" [hls_src/circ_buff_read_many_128.cpp:72]   --->   Operation 72 'add' 'i_1' <Predicate = (!first_load)> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %._crit_edge.loopexit, label %1" [hls_src/circ_buff_read_many_128.cpp:72]   --->   Operation 73 'br' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_2 = zext i3 %i to i64" [hls_src/circ_buff_read_many_128.cpp:74]   --->   Operation 74 'zext' 'tmp_2' <Predicate = (!first_load & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%useable_words_addr = getelementptr [6 x i8]* %useable_words, i64 0, i64 %tmp_2" [hls_src/circ_buff_read_many_128.cpp:74]   --->   Operation 75 'getelementptr' 'useable_words_addr' <Predicate = (!first_load & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 76 [2/2] (0.67ns)   --->   "%useable_words_load = load volatile i8* %useable_words_addr, align 1" [hls_src/circ_buff_read_many_128.cpp:74]   --->   Operation 76 'load' 'useable_words_load' <Predicate = (!first_load & !tmp_1)> <Delay = 0.67> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 6> <RAM>
ST_2 : Operation 77 [1/1] (0.65ns)   --->   "br label %._crit_edge"   --->   Operation 77 'br' <Predicate = (!first_load & tmp_1)> <Delay = 0.65>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%first_flag = phi i1 [ false, %0 ], [ true, %._crit_edge.loopexit ]"   --->   Operation 78 'phi' 'first_flag' <Predicate = (tmp_1) | (first_load)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (1.00ns)   --->   "%reset_read = call i8 @_ssdm_op_Read.s_axilite.volatile.i8P(i8* %reset)" [hls_src/circ_buff_read_many_128.cpp:79]   --->   Operation 79 'read' 'reset_read' <Predicate = (tmp_1) | (first_load)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 80 [1/1] (0.84ns)   --->   "%tmp_4 = icmp eq i8 %reset_read, 1" [hls_src/circ_buff_read_many_128.cpp:79]   --->   Operation 80 'icmp' 'tmp_4' <Predicate = (tmp_1) | (first_load)> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %.preheader252.preheader, label %.preheader250.preheader" [hls_src/circ_buff_read_many_128.cpp:79]   --->   Operation 81 'br' <Predicate = (tmp_1) | (first_load)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.65ns)   --->   "br label %.preheader250" [hls_src/circ_buff_read_many_128.cpp:90]   --->   Operation 82 'br' <Predicate = (tmp_1 & !tmp_4) | (first_load & !tmp_4)> <Delay = 0.65>
ST_2 : Operation 83 [1/1] (0.65ns)   --->   "br label %.preheader252" [hls_src/circ_buff_read_many_128.cpp:81]   --->   Operation 83 'br' <Predicate = (tmp_1 & tmp_4) | (first_load & tmp_4)> <Delay = 0.65>

State 3 <SV = 2> <Delay = 1.35>
ST_3 : Operation 84 [1/2] (0.67ns)   --->   "%useable_words_load = load volatile i8* %useable_words_addr, align 1" [hls_src/circ_buff_read_many_128.cpp:74]   --->   Operation 84 'load' 'useable_words_load' <Predicate = true> <Delay = 0.67> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 6> <RAM>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%local_words_addr = getelementptr inbounds [6 x i8]* @local_words, i64 0, i64 %tmp_2" [hls_src/circ_buff_read_many_128.cpp:74]   --->   Operation 85 'getelementptr' 'local_words_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.67ns)   --->   "store i8 %useable_words_load, i8* %local_words_addr, align 1" [hls_src/circ_buff_read_many_128.cpp:74]   --->   Operation 86 'store' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "br label %.preheader253" [hls_src/circ_buff_read_many_128.cpp:72]   --->   Operation 87 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.78>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%stride = phi i3 [ %stride_1, %.loopexit ], [ 0, %.preheader250.preheader ]"   --->   Operation 88 'phi' 'stride' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.58ns)   --->   "%exitcond1 = icmp eq i3 %stride, -2" [hls_src/circ_buff_read_many_128.cpp:90]   --->   Operation 89 'icmp' 'exitcond1' <Predicate = true> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 90 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.67ns)   --->   "%stride_1 = add i3 %stride, 1" [hls_src/circ_buff_read_many_128.cpp:90]   --->   Operation 91 'add' 'stride_1' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.loopexit251.loopexit, label %3" [hls_src/circ_buff_read_many_128.cpp:90]   --->   Operation 92 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%idx = call i12 @_ssdm_op_BitConcatenate.i12.i3.i5.i3.i1(i3 %stride, i5 0, i3 %stride, i1 false)" [hls_src/circ_buff_read_many_128.cpp:96]   --->   Operation 93 'bitconcatenate' 'idx' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%idx_cast = zext i12 %idx to i13" [hls_src/circ_buff_read_many_128.cpp:96]   --->   Operation 94 'zext' 'idx_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (0.80ns)   --->   "%tmp_9 = add i13 %idx_cast, 513" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 95 'add' 'tmp_9' <Predicate = (!exitcond1)> <Delay = 0.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_cast = zext i13 %tmp_9 to i29" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 96 'zext' 'tmp_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.97ns)   --->   "%input_V2_sum = add i29 %tmp_cast, %tmp_16_cast8" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 97 'add' 'input_V2_sum' <Predicate = (!exitcond1)> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (0.65ns)   --->   "br label %.loopexit251"   --->   Operation 98 'br' <Predicate = (exitcond1)> <Delay = 0.65>

State 5 <SV = 3> <Delay = 3.50>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%input_V2_sum_cast = zext i29 %input_V2_sum to i64" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 99 'zext' 'input_V2_sum_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%gmem_read_addr = getelementptr i128* %gmem_read, i64 %input_V2_sum_cast" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 100 'getelementptr' 'gmem_read_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [7/7] (3.50ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 101 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 4> <Delay = 3.50>
ST_6 : Operation 102 [6/7] (3.50ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 102 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 5> <Delay = 3.50>
ST_7 : Operation 103 [5/7] (3.50ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 103 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 6> <Delay = 3.50>
ST_8 : Operation 104 [4/7] (3.50ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 104 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 7> <Delay = 3.50>
ST_9 : Operation 105 [3/7] (3.50ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 105 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 8> <Delay = 3.50>
ST_10 : Operation 106 [2/7] (3.50ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 106 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 9> <Delay = 3.50>
ST_11 : Operation 107 [1/7] (3.50ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 107 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 10> <Delay = 3.50>
ST_12 : Operation 108 [1/1] (3.50ns)   --->   "%stream_head_V = call i128 @_ssdm_op_Read.m_axi.volatile.i128P(i128* %gmem_read_addr)" [hls_src/circ_buff_read_many_128.cpp:97]   --->   Operation 108 'read' 'stream_head_V' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_3 = zext i3 %stride to i64" [hls_src/circ_buff_read_many_128.cpp:98]   --->   Operation 109 'zext' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 110 [1/1] (0.00ns)   --->   "%tail_addr_1 = getelementptr inbounds [6 x i16]* @tail, i64 0, i64 %tmp_3" [hls_src/circ_buff_read_many_128.cpp:98]   --->   Operation 110 'getelementptr' 'tail_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 111 [2/2] (0.67ns)   --->   "%stream_tail_1 = load i16* %tail_addr_1, align 2" [hls_src/circ_buff_read_many_128.cpp:98]   --->   Operation 111 'load' 'stream_tail_1' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%local_words_addr_1 = getelementptr inbounds [6 x i8]* @local_words, i64 0, i64 %tmp_3" [hls_src/circ_buff_read_many_128.cpp:99]   --->   Operation 112 'getelementptr' 'local_words_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 113 [2/2] (0.67ns)   --->   "%words = load i8* %local_words_addr_1, align 1" [hls_src/circ_buff_read_many_128.cpp:99]   --->   Operation 113 'load' 'words' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>

State 13 <SV = 11> <Delay = 2.83>
ST_13 : Operation 114 [1/1] (0.00ns)   --->   "%idx_cast3 = zext i12 %idx to i17" [hls_src/circ_buff_read_many_128.cpp:96]   --->   Operation 114 'zext' 'idx_cast3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 115 [1/2] (0.67ns)   --->   "%stream_tail_1 = load i16* %tail_addr_1, align 2" [hls_src/circ_buff_read_many_128.cpp:98]   --->   Operation 115 'load' 'stream_tail_1' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_13 : Operation 116 [1/2] (0.67ns)   --->   "%words = load i8* %local_words_addr_1, align 1" [hls_src/circ_buff_read_many_128.cpp:99]   --->   Operation 116 'load' 'words' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_13 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_6 = zext i16 %stream_tail_1 to i128" [hls_src/circ_buff_read_many_128.cpp:101]   --->   Operation 117 'zext' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 118 [1/1] (1.30ns)   --->   "%tmp_8 = icmp eq i128 %tmp_6, %stream_head_V" [hls_src/circ_buff_read_many_128.cpp:101]   --->   Operation 118 'icmp' 'tmp_8' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 119 [1/1] (0.00ns)   --->   "br i1 %tmp_8, label %.loopexit, label %4" [hls_src/circ_buff_read_many_128.cpp:101]   --->   Operation 119 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 120 [1/1] (1.30ns)   --->   "%tmp_7 = icmp ugt i128 %stream_head_V, %tmp_6" [hls_src/circ_buff_read_many_128.cpp:114]   --->   Operation 120 'icmp' 'tmp_7' <Predicate = (!tmp_8)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i128 %stream_head_V to i16" [hls_src/circ_buff_read_many_128.cpp:116]   --->   Operation 121 'trunc' 'tmp_10' <Predicate = (!tmp_8)> <Delay = 0.00>
ST_13 : Operation 122 [1/1] (0.85ns)   --->   "%p_s = add i16 512, %tmp_10" [hls_src/circ_buff_read_many_128.cpp:123]   --->   Operation 122 'add' 'p_s' <Predicate = (!tmp_8)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node bytes_read)   --->   "%p_pn = select i1 %tmp_7, i16 %tmp_10, i16 %p_s" [hls_src/circ_buff_read_many_128.cpp:114]   --->   Operation 123 'select' 'p_pn' <Predicate = (!tmp_8)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 124 [1/1] (0.85ns) (out node of the LUT)   --->   "%bytes_read = sub i16 %p_pn, %stream_tail_1" [hls_src/circ_buff_read_many_128.cpp:116]   --->   Operation 124 'sub' 'bytes_read' <Predicate = (!tmp_8)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 125 [1/1] (0.65ns)   --->   "br label %5" [hls_src/circ_buff_read_many_128.cpp:127]   --->   Operation 125 'br' <Predicate = (!tmp_8)> <Delay = 0.65>

State 14 <SV = 12> <Delay = 1.82>
ST_14 : Operation 126 [1/1] (0.00ns)   --->   "%val_assign = phi i16 [ %stream_tail_1, %4 ], [ %stream_tail_1_cast, %6 ]"   --->   Operation 126 'phi' 'val_assign' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 127 [1/1] (0.00ns)   --->   "%h = phi i15 [ 0, %4 ], [ %h_1, %6 ]"   --->   Operation 127 'phi' 'h' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 128 [1/1] (0.00ns)   --->   "%h_cast = zext i15 %h to i16" [hls_src/circ_buff_read_many_128.cpp:127]   --->   Operation 128 'zext' 'h_cast' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 129 [1/1] (1.10ns)   --->   "%tmp_s = icmp slt i16 %h_cast, %bytes_read" [hls_src/circ_buff_read_many_128.cpp:127]   --->   Operation 129 'icmp' 'tmp_s' <Predicate = true> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 130 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 32767, i64 0)"   --->   Operation 130 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 131 [1/1] (0.84ns)   --->   "%h_1 = add i15 %h, 1" [hls_src/circ_buff_read_many_128.cpp:127]   --->   Operation 131 'add' 'h_1' <Predicate = true> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 132 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %6, label %.preheader.preheader" [hls_src/circ_buff_read_many_128.cpp:127]   --->   Operation 132 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_16_cast = zext i16 %val_assign to i17" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 133 'zext' 'tmp_16_cast' <Predicate = (tmp_s)> <Delay = 0.00>
ST_14 : Operation 134 [1/1] (0.85ns)   --->   "%tmp_13 = add i17 %tmp_16_cast, %idx_cast3" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 134 'add' 'tmp_13' <Predicate = (tmp_s)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_15_cast = zext i17 %tmp_13 to i29" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 135 'zext' 'tmp_15_cast' <Predicate = (tmp_s)> <Delay = 0.00>
ST_14 : Operation 136 [1/1] (0.97ns)   --->   "%input_V2_sum4 = add i29 %tmp_16_cast8, %tmp_15_cast" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 136 'add' 'input_V2_sum4' <Predicate = (tmp_s)> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_14 = trunc i16 %val_assign to i9" [hls_src/circ_buff_read_many_128.cpp:133]   --->   Operation 137 'trunc' 'tmp_14' <Predicate = (tmp_s)> <Delay = 0.00>
ST_14 : Operation 138 [1/1] (0.77ns)   --->   "%stream_tail = add i9 1, %tmp_14" [hls_src/circ_buff_read_many_128.cpp:133]   --->   Operation 138 'add' 'stream_tail' <Predicate = (tmp_s)> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 139 [1/1] (0.00ns)   --->   "%stream_tail_1_cast = zext i9 %stream_tail to i16" [hls_src/circ_buff_read_many_128.cpp:134]   --->   Operation 139 'zext' 'stream_tail_1_cast' <Predicate = (tmp_s)> <Delay = 0.00>

State 15 <SV = 13> <Delay = 3.50>
ST_15 : Operation 140 [1/1] (0.00ns)   --->   "%input_V2_sum4_cast = zext i29 %input_V2_sum4 to i64" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 140 'zext' 'input_V2_sum4_cast' <Predicate = (tmp_s)> <Delay = 0.00>
ST_15 : Operation 141 [1/1] (0.00ns)   --->   "%gmem_read_addr_1 = getelementptr i128* %gmem_read, i64 %input_V2_sum4_cast" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 141 'getelementptr' 'gmem_read_addr_1' <Predicate = (tmp_s)> <Delay = 0.00>
ST_15 : Operation 142 [7/7] (3.50ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 142 'readreq' 'gmem_read_load_req' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 14> <Delay = 3.50>
ST_16 : Operation 143 [6/7] (3.50ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 143 'readreq' 'gmem_read_load_req' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 15> <Delay = 3.50>
ST_17 : Operation 144 [5/7] (3.50ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 144 'readreq' 'gmem_read_load_req' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 16> <Delay = 3.50>
ST_18 : Operation 145 [4/7] (3.50ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 145 'readreq' 'gmem_read_load_req' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 17> <Delay = 3.50>
ST_19 : Operation 146 [3/7] (3.50ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 146 'readreq' 'gmem_read_load_req' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 18> <Delay = 3.50>
ST_20 : Operation 147 [2/7] (3.50ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 147 'readreq' 'gmem_read_load_req' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 19> <Delay = 3.50>
ST_21 : Operation 148 [1/7] (3.50ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 148 'readreq' 'gmem_read_load_req' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 20> <Delay = 3.50>
ST_22 : Operation 149 [1/1] (3.50ns)   --->   "%gmem_read_addr_1_rea = call i128 @_ssdm_op_Read.m_axi.volatile.i128P(i128* %gmem_read_addr_1)" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 149 'read' 'gmem_read_addr_1_rea' <Predicate = (tmp_s)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 21> <Delay = 1.23>
ST_23 : Operation 150 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str2) nounwind" [hls_src/circ_buff_read_many_128.cpp:128]   --->   Operation 150 'specloopname' <Predicate = (tmp_s)> <Delay = 0.00>
ST_23 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str2)" [hls_src/circ_buff_read_many_128.cpp:128]   --->   Operation 151 'specregionbegin' 'tmp_11' <Predicate = (tmp_s)> <Delay = 0.00>
ST_23 : Operation 152 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:129]   --->   Operation 152 'specpipeline' <Predicate = (tmp_s)> <Delay = 0.00>
ST_23 : Operation 153 [1/1] (0.00ns)   --->   "%tmp_12 = zext i15 %h to i64" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 153 'zext' 'tmp_12' <Predicate = (tmp_s)> <Delay = 0.00>
ST_23 : Operation 154 [1/1] (0.00ns)   --->   "%data_V_addr = getelementptr [512 x i128]* %data_V, i64 0, i64 %tmp_12" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 154 'getelementptr' 'data_V_addr' <Predicate = (tmp_s)> <Delay = 0.00>
ST_23 : Operation 155 [1/1] (1.23ns)   --->   "store i128 %gmem_read_addr_1_rea, i128* %data_V_addr, align 16" [hls_src/circ_buff_read_many_128.cpp:131]   --->   Operation 155 'store' <Predicate = (tmp_s)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_23 : Operation 156 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str2, i32 %tmp_11)" [hls_src/circ_buff_read_many_128.cpp:135]   --->   Operation 156 'specregionend' 'empty_9' <Predicate = (tmp_s)> <Delay = 0.00>
ST_23 : Operation 157 [1/1] (0.00ns)   --->   "br label %5" [hls_src/circ_buff_read_many_128.cpp:127]   --->   Operation 157 'br' <Predicate = (tmp_s)> <Delay = 0.00>

State 24 <SV = 13> <Delay = 2.53>
ST_24 : Operation 158 [1/1] (0.00ns)   --->   "%cast = zext i16 %bytes_read to i24" [hls_src/circ_buff_read_many_128.cpp:116]   --->   Operation 158 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 159 [1/1] (0.00ns)   --->   "%cast2 = zext i8 %words to i24" [hls_src/circ_buff_read_many_128.cpp:99]   --->   Operation 159 'zext' 'cast2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 160 [1/1] (2.53ns) (root node of the DSP)   --->   "%bound = mul i24 %cast2, %cast" [hls_src/circ_buff_read_many_128.cpp:99]   --->   Operation 160 'mul' 'bound' <Predicate = true> <Delay = 2.53> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 161 [1/1] (0.65ns)   --->   "br label %7" [hls_src/circ_buff_read_many_128.cpp:137]   --->   Operation 161 'br' <Predicate = true> <Delay = 0.65>

State 25 <SV = 14> <Delay = 2.38>
ST_25 : Operation 162 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i24 [ 0, %.preheader.preheader ], [ %indvar_flatten_next, %8 ]"   --->   Operation 162 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 163 [1/1] (0.00ns)   --->   "%h2 = phi i15 [ 0, %.preheader.preheader ], [ %temp_V_mid2_v, %8 ]" [hls_src/circ_buff_read_many_128.cpp:139]   --->   Operation 163 'phi' 'h2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 164 [1/1] (0.00ns)   --->   "%t_V = phi i4 [ 0, %.preheader.preheader ], [ %word_V, %8 ]"   --->   Operation 164 'phi' 't_V' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_24_cast = zext i4 %t_V to i8" [hls_src/circ_buff_read_many_128.cpp:140]   --->   Operation 165 'zext' 'tmp_24_cast' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 166 [1/1] (0.84ns)   --->   "%tmp_15 = icmp ult i8 %tmp_24_cast, %words" [hls_src/circ_buff_read_many_128.cpp:140]   --->   Operation 166 'icmp' 'tmp_15' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 167 [1/1] (1.04ns)   --->   "%exitcond_flatten = icmp eq i24 %indvar_flatten, %bound" [hls_src/circ_buff_read_many_128.cpp:99]   --->   Operation 167 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 1.04> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 168 [1/1] (0.93ns)   --->   "%indvar_flatten_next = add i24 %indvar_flatten, 1"   --->   Operation 168 'add' 'indvar_flatten_next' <Predicate = true> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 169 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %9, label %.preheader" [hls_src/circ_buff_read_many_128.cpp:99]   --->   Operation 169 'br' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 170 [1/1] (0.39ns)   --->   "%t_V_mid2 = select i1 %tmp_15, i4 %t_V, i4 0" [hls_src/circ_buff_read_many_128.cpp:140]   --->   Operation 170 'select' 't_V_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 171 [1/1] (0.84ns)   --->   "%h_s = add i15 1, %h2" [hls_src/circ_buff_read_many_128.cpp:137]   --->   Operation 171 'add' 'h_s' <Predicate = (!exitcond_flatten)> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 172 [1/1] (0.29ns)   --->   "%temp_V_mid2_v = select i1 %tmp_15, i15 %h2, i15 %h_s" [hls_src/circ_buff_read_many_128.cpp:139]   --->   Operation 172 'select' 'temp_V_mid2_v' <Predicate = (!exitcond_flatten)> <Delay = 0.29> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 173 [1/1] (0.00ns)   --->   "%temp_V_mid2 = zext i15 %temp_V_mid2_v to i64" [hls_src/circ_buff_read_many_128.cpp:139]   --->   Operation 173 'zext' 'temp_V_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 174 [1/1] (0.00ns)   --->   "%data_V_addr_1 = getelementptr [512 x i128]* %data_V, i64 0, i64 %temp_V_mid2" [hls_src/circ_buff_read_many_128.cpp:139]   --->   Operation 174 'getelementptr' 'data_V_addr_1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 175 [2/2] (1.23ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 8" [hls_src/circ_buff_read_many_128.cpp:139]   --->   Operation 175 'load' 'data_V_load' <Predicate = (!exitcond_flatten)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_25 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_17 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str10)" [hls_src/circ_buff_read_many_128.cpp:141]   --->   Operation 176 'specregionbegin' 'tmp_17' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 177 [1/1] (0.72ns)   --->   "switch i3 %stride, label %branch5 [
    i3 0, label %branch0
    i3 1, label %branch1
    i3 2, label %branch2
    i3 3, label %branch3
    i3 -4, label %branch4
  ]" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 177 'switch' <Predicate = (!exitcond_flatten)> <Delay = 0.72>
ST_25 : Operation 178 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str10, i32 %tmp_17)" [hls_src/circ_buff_read_many_128.cpp:145]   --->   Operation 178 'specregionend' 'empty_10' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 179 [1/1] (0.79ns)   --->   "%word_V = add i4 %t_V_mid2, 1" [hls_src/circ_buff_read_many_128.cpp:140]   --->   Operation 179 'add' 'word_V' <Predicate = (!exitcond_flatten)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 180 [1/1] (0.00ns)   --->   "br label %7" [hls_src/circ_buff_read_many_128.cpp:140]   --->   Operation 180 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>

State 26 <SV = 15> <Delay = 2.75>
ST_26 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @fifo_write_decompose)"   --->   Operation 181 'specloopname' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_26 : Operation 182 [1/2] (1.23ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 8" [hls_src/circ_buff_read_many_128.cpp:139]   --->   Operation 182 'load' 'data_V_load' <Predicate = (!exitcond_flatten)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_26 : Operation 183 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str10) nounwind" [hls_src/circ_buff_read_many_128.cpp:141]   --->   Operation 183 'specloopname' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_26 : Operation 184 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [hls_src/circ_buff_read_many_128.cpp:142]   --->   Operation 184 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_26 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_18 = trunc i4 %t_V_mid2 to i2" [hls_src/circ_buff_read_many_128.cpp:143]   --->   Operation 185 'trunc' 'tmp_18' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_26 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%op2_assign = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 0, i8 32, i8 64, i8 96, i2 %tmp_18)" [hls_src/circ_buff_read_many_128.cpp:143]   --->   Operation 186 'mux' 'op2_assign' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_19 = zext i8 %op2_assign to i128" [hls_src/circ_buff_read_many_128.cpp:143]   --->   Operation 187 'zext' 'tmp_19' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_26 : Operation 188 [1/1] (1.51ns) (out node of the LUT)   --->   "%r_V = lshr i128 %data_V_load, %tmp_19" [hls_src/circ_buff_read_many_128.cpp:143]   --->   Operation 188 'lshr' 'r_V' <Predicate = (!exitcond_flatten)> <Delay = 1.51> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_20 = trunc i128 %r_V to i32" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 189 'trunc' 'tmp_20' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_26 : Operation 190 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_4_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 190 'write' <Predicate = (stride == 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 191 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_3_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 191 'write' <Predicate = (stride == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 192 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_2_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 192 'write' <Predicate = (stride == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 193 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_1_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 193 'write' <Predicate = (stride == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 194 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_0_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 194 'write' <Predicate = (stride == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 195 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_5_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 195 'write' <Predicate = (stride == 7) | (stride == 6) | (stride == 5)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 27 <SV = 16> <Delay = 0.00>
ST_27 : Operation 196 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_4_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 196 'write' <Predicate = (stride == 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 197 [1/1] (0.00ns)   --->   "br label %8" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 197 'br' <Predicate = (stride == 4)> <Delay = 0.00>
ST_27 : Operation 198 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_3_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 198 'write' <Predicate = (stride == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 199 [1/1] (0.00ns)   --->   "br label %8" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 199 'br' <Predicate = (stride == 3)> <Delay = 0.00>
ST_27 : Operation 200 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_2_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 200 'write' <Predicate = (stride == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 201 [1/1] (0.00ns)   --->   "br label %8" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 201 'br' <Predicate = (stride == 2)> <Delay = 0.00>
ST_27 : Operation 202 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_1_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 202 'write' <Predicate = (stride == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 203 [1/1] (0.00ns)   --->   "br label %8" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 203 'br' <Predicate = (stride == 1)> <Delay = 0.00>
ST_27 : Operation 204 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_0_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 204 'write' <Predicate = (stride == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 205 [1/1] (0.00ns)   --->   "br label %8" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 205 'br' <Predicate = (stride == 0)> <Delay = 0.00>
ST_27 : Operation 206 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P(i32* %fifo_out_5_V, i32 %tmp_20)" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 206 'write' <Predicate = (stride == 7) | (stride == 6) | (stride == 5)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 207 [1/1] (0.00ns)   --->   "br label %8" [hls_src/circ_buff_read_many_128.cpp:144]   --->   Operation 207 'br' <Predicate = (stride == 7) | (stride == 6) | (stride == 5)> <Delay = 0.00>

State 28 <SV = 15> <Delay = 1.78>
ST_28 : Operation 208 [1/1] (0.80ns)   --->   "%tmp_16 = add i13 %idx_cast, 512" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 208 'add' 'tmp_16' <Predicate = true> <Delay = 0.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 209 [1/1] (0.00ns)   --->   "%tmp_19_cast = zext i13 %tmp_16 to i29" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 209 'zext' 'tmp_19_cast' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 210 [1/1] (0.97ns)   --->   "%input_V2_sum3 = add i29 %tmp_19_cast, %tmp_16_cast8" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 210 'add' 'input_V2_sum3' <Predicate = true> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 211 [1/1] (0.67ns)   --->   "store i16 %val_assign, i16* %tail_addr_1, align 2" [hls_src/circ_buff_read_many_128.cpp:152]   --->   Operation 211 'store' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>

State 29 <SV = 16> <Delay = 3.50>
ST_29 : Operation 212 [1/1] (0.00ns)   --->   "%input_V2_sum3_cast = zext i29 %input_V2_sum3 to i64" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 212 'zext' 'input_V2_sum3_cast' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 213 [1/1] (0.00ns)   --->   "%gmem_read_addr_2 = getelementptr i128* %gmem_read, i64 %input_V2_sum3_cast" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 213 'getelementptr' 'gmem_read_addr_2' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 214 [1/1] (3.50ns)   --->   "%gmem_read_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i128P(i128* %gmem_read_addr_2, i32 1)" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 214 'writereq' 'gmem_read_addr_2_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 17> <Delay = 3.50>
ST_30 : Operation 215 [1/1] (0.00ns)   --->   "%p_1 = zext i16 %val_assign to i128" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 215 'zext' 'p_1' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 216 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i128P(i128* %gmem_read_addr_2, i128 %p_1, i16 -1)" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 216 'write' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 18> <Delay = 3.50>
ST_31 : Operation 217 [5/5] (3.50ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 217 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 19> <Delay = 3.50>
ST_32 : Operation 218 [4/5] (3.50ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 218 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 20> <Delay = 3.50>
ST_33 : Operation 219 [3/5] (3.50ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 219 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 21> <Delay = 3.50>
ST_34 : Operation 220 [2/5] (3.50ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 220 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 22> <Delay = 3.50>
ST_35 : Operation 221 [1/5] (3.50ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [hls_src/circ_buff_read_many_128.cpp:151]   --->   Operation 221 'writeresp' 'gmem_read_addr_2_res' <Predicate = (!tmp_8)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 222 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 222 'br' <Predicate = (!tmp_8)> <Delay = 0.00>
ST_35 : Operation 223 [1/1] (0.00ns)   --->   "br label %.preheader250" [hls_src/circ_buff_read_many_128.cpp:90]   --->   Operation 223 'br' <Predicate = true> <Delay = 0.00>

State 36 <SV = 2> <Delay = 0.87>
ST_36 : Operation 224 [1/1] (0.00ns)   --->   "%i1 = phi i3 [ %i_2, %2 ], [ 0, %.preheader252.preheader ]"   --->   Operation 224 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 225 [1/1] (0.58ns)   --->   "%exitcond = icmp eq i3 %i1, -2" [hls_src/circ_buff_read_many_128.cpp:81]   --->   Operation 225 'icmp' 'exitcond' <Predicate = true> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 226 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 226 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 227 [1/1] (0.67ns)   --->   "%i_2 = add i3 %i1, 1" [hls_src/circ_buff_read_many_128.cpp:81]   --->   Operation 227 'add' 'i_2' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 228 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.loopexit251.loopexit16, label %2" [hls_src/circ_buff_read_many_128.cpp:81]   --->   Operation 228 'br' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 229 [1/1] (0.00ns)   --->   "%tmp_5 = zext i3 %i1 to i64" [hls_src/circ_buff_read_many_128.cpp:83]   --->   Operation 229 'zext' 'tmp_5' <Predicate = (!exitcond)> <Delay = 0.00>
ST_36 : Operation 230 [1/1] (0.00ns)   --->   "%tail_addr = getelementptr inbounds [6 x i16]* @tail, i64 0, i64 %tmp_5" [hls_src/circ_buff_read_many_128.cpp:83]   --->   Operation 230 'getelementptr' 'tail_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_36 : Operation 231 [1/1] (0.67ns)   --->   "store i16 0, i16* %tail_addr, align 2" [hls_src/circ_buff_read_many_128.cpp:83]   --->   Operation 231 'store' <Predicate = (!exitcond)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 6> <RAM>
ST_36 : Operation 232 [1/1] (0.00ns)   --->   "br label %.preheader252" [hls_src/circ_buff_read_many_128.cpp:81]   --->   Operation 232 'br' <Predicate = (!exitcond)> <Delay = 0.00>
ST_36 : Operation 233 [1/1] (0.65ns)   --->   "br label %.loopexit251"   --->   Operation 233 'br' <Predicate = (exitcond)> <Delay = 0.65>

State 37 <SV = 3> <Delay = 0.00>
ST_37 : Operation 234 [1/1] (0.00ns)   --->   "%first_flag_1 = phi i1 [ %first_flag, %.loopexit251.loopexit ], [ true, %.loopexit251.loopexit16 ]"   --->   Operation 234 'phi' 'first_flag_1' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 235 [1/1] (0.00ns)   --->   "%first_new_1 = phi i1 [ true, %.loopexit251.loopexit ], [ false, %.loopexit251.loopexit16 ]"   --->   Operation 235 'phi' 'first_new_1' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 236 [1/1] (0.00ns)   --->   "br i1 %first_flag_1, label %mergeST, label %.loopexit251.new"   --->   Operation 236 'br' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 237 [1/1] (0.00ns)   --->   "store i1 %first_new_1, i1* @first, align 1" [hls_src/circ_buff_read_many_128.cpp:76]   --->   Operation 237 'store' <Predicate = (first_flag_1)> <Delay = 0.00>
ST_37 : Operation 238 [1/1] (0.00ns)   --->   "br label %.loopexit251.new"   --->   Operation 238 'br' <Predicate = (first_flag_1)> <Delay = 0.00>
ST_37 : Operation 239 [1/1] (0.00ns)   --->   "ret void" [hls_src/circ_buff_read_many_128.cpp:156]   --->   Operation 239 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'input_V' [15]  (1 ns)

 <State 2>: 2.42ns
The critical path consists of the following:
	s_axi read on port 'reset' (hls_src/circ_buff_read_many_128.cpp:79) [64]  (1 ns)
	'icmp' operation ('tmp_4', hls_src/circ_buff_read_many_128.cpp:79) [65]  (0.849 ns)
	blocking operation 0.574 ns on control path)

 <State 3>: 1.35ns
The critical path consists of the following:
	'load' operation ('useable_words_load', hls_src/circ_buff_read_many_128.cpp:74) on array 'useable_words' [56]  (0.677 ns)
	'store' operation (hls_src/circ_buff_read_many_128.cpp:74) of variable 'useable_words_load', hls_src/circ_buff_read_many_128.cpp:74 on array 'local_words' [58]  (0.677 ns)

 <State 4>: 1.78ns
The critical path consists of the following:
	'phi' operation ('stride') with incoming values : ('stride', hls_src/circ_buff_read_many_128.cpp:90) [70]  (0 ns)
	'add' operation ('tmp_9', hls_src/circ_buff_read_many_128.cpp:97) [79]  (0.809 ns)
	'add' operation ('input_V2_sum', hls_src/circ_buff_read_many_128.cpp:97) [81]  (0.975 ns)

 <State 5>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_read_addr', hls_src/circ_buff_read_many_128.cpp:97) [83]  (0 ns)
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [84]  (3.5 ns)

 <State 6>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [84]  (3.5 ns)

 <State 7>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [84]  (3.5 ns)

 <State 8>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [84]  (3.5 ns)

 <State 9>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [84]  (3.5 ns)

 <State 10>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [84]  (3.5 ns)

 <State 11>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [84]  (3.5 ns)

 <State 12>: 3.5ns
The critical path consists of the following:
	bus read on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:97) [85]  (3.5 ns)

 <State 13>: 2.83ns
The critical path consists of the following:
	'load' operation ('op', hls_src/circ_buff_read_many_128.cpp:98) on array 'tail' [88]  (0.677 ns)
	'icmp' operation ('tmp_7', hls_src/circ_buff_read_many_128.cpp:114) [95]  (1.3 ns)
	'select' operation ('p_pn', hls_src/circ_buff_read_many_128.cpp:114) [98]  (0 ns)
	'sub' operation ('bytes_read', hls_src/circ_buff_read_many_128.cpp:116) [99]  (0.853 ns)

 <State 14>: 1.83ns
The critical path consists of the following:
	'phi' operation ('stream_tail') with incoming values : ('op', hls_src/circ_buff_read_many_128.cpp:98) ('stream_tail_1_cast', hls_src/circ_buff_read_many_128.cpp:134) [102]  (0 ns)
	'add' operation ('tmp_13', hls_src/circ_buff_read_many_128.cpp:131) [115]  (0.853 ns)
	'add' operation ('input_V2_sum4', hls_src/circ_buff_read_many_128.cpp:131) [117]  (0.975 ns)

 <State 15>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_read_addr_1', hls_src/circ_buff_read_many_128.cpp:131) [119]  (0 ns)
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [120]  (3.5 ns)

 <State 16>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [120]  (3.5 ns)

 <State 17>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [120]  (3.5 ns)

 <State 18>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [120]  (3.5 ns)

 <State 19>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [120]  (3.5 ns)

 <State 20>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [120]  (3.5 ns)

 <State 21>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [120]  (3.5 ns)

 <State 22>: 3.5ns
The critical path consists of the following:
	bus read on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:131) [121]  (3.5 ns)

 <State 23>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('data_V_addr', hls_src/circ_buff_read_many_128.cpp:131) [122]  (0 ns)
	'store' operation (hls_src/circ_buff_read_many_128.cpp:131) of variable 'gmem_read_addr_1_rea', hls_src/circ_buff_read_many_128.cpp:131 on array 'data.V', hls_src/circ_buff_read_many_128.cpp:61 [123]  (1.24 ns)

 <State 24>: 2.53ns
The critical path consists of the following:
	'mul' operation of DSP[132] ('bound', hls_src/circ_buff_read_many_128.cpp:99) [132]  (2.53 ns)

 <State 25>: 2.38ns
The critical path consists of the following:
	'phi' operation ('word.V') with incoming values : ('word.V', hls_src/circ_buff_read_many_128.cpp:140) [137]  (0 ns)
	'icmp' operation ('tmp_15', hls_src/circ_buff_read_many_128.cpp:140) [139]  (0.849 ns)
	'select' operation ('temp_V_mid2_v', hls_src/circ_buff_read_many_128.cpp:139) [147]  (0.294 ns)
	'getelementptr' operation ('data_V_addr_1', hls_src/circ_buff_read_many_128.cpp:139) [149]  (0 ns)
	'load' operation ('data_V_load', hls_src/circ_buff_read_many_128.cpp:139) on array 'data.V', hls_src/circ_buff_read_many_128.cpp:61 [150]  (1.24 ns)

 <State 26>: 2.75ns
The critical path consists of the following:
	'load' operation ('data_V_load', hls_src/circ_buff_read_many_128.cpp:139) on array 'data.V', hls_src/circ_buff_read_many_128.cpp:61 [150]  (1.24 ns)
	'lshr' operation ('r.V', hls_src/circ_buff_read_many_128.cpp:143) [157]  (1.52 ns)
	axis write on port 'fifo_out_4_V' (hls_src/circ_buff_read_many_128.cpp:144) [161]  (0 ns)

 <State 27>: 0ns
The critical path consists of the following:

 <State 28>: 1.78ns
The critical path consists of the following:
	'add' operation ('tmp_16', hls_src/circ_buff_read_many_128.cpp:151) [183]  (0.809 ns)
	'add' operation ('input_V2_sum3', hls_src/circ_buff_read_many_128.cpp:151) [186]  (0.975 ns)

 <State 29>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_read_addr_2', hls_src/circ_buff_read_many_128.cpp:151) [188]  (0 ns)
	bus request on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:151) [189]  (3.5 ns)

 <State 30>: 3.5ns
The critical path consists of the following:
	bus write on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:151) [190]  (3.5 ns)

 <State 31>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:151) [191]  (3.5 ns)

 <State 32>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:151) [191]  (3.5 ns)

 <State 33>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:151) [191]  (3.5 ns)

 <State 34>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:151) [191]  (3.5 ns)

 <State 35>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_read' (hls_src/circ_buff_read_many_128.cpp:151) [191]  (3.5 ns)

 <State 36>: 0.871ns
The critical path consists of the following:
	'icmp' operation ('exitcond', hls_src/circ_buff_read_many_128.cpp:81) [202]  (0.584 ns)
	blocking operation 0.287 ns on control path)

 <State 37>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
