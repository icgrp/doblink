// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rasterization2_m_rasterization2_even (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_2_V_TDATA,
        Input_2_V_TVALID,
        Input_2_V_TREADY,
        Output_3_V_TDATA,
        Output_3_V_TVALID,
        Output_3_V_TREADY,
        Output_4_V_TDATA,
        Output_4_V_TVALID,
        Output_4_V_TREADY
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_pp0_stage0 = 11'd32;
parameter    ap_ST_fsm_state33 = 11'd64;
parameter    ap_ST_fsm_state34 = 11'd128;
parameter    ap_ST_fsm_pp1_stage0 = 11'd256;
parameter    ap_ST_fsm_state39 = 11'd512;
parameter    ap_ST_fsm_state40 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_2_V_TDATA;
input   Input_2_V_TVALID;
output   Input_2_V_TREADY;
output  [31:0] Output_3_V_TDATA;
output   Output_3_V_TVALID;
input   Output_3_V_TREADY;
output  [31:0] Output_4_V_TDATA;
output   Output_4_V_TVALID;
input   Output_4_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_2_V_TREADY;
reg[31:0] Output_3_V_TDATA;
reg Output_3_V_TVALID;
reg[31:0] Output_4_V_TDATA;
reg Output_4_V_TVALID;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] in2_cnt;
reg   [31:0] out3_cnt;
reg   [31:0] out4_cnt;
reg   [8:0] fragment_x_V_1_address0;
reg    fragment_x_V_1_ce0;
reg    fragment_x_V_1_we0;
wire   [7:0] fragment_x_V_1_q0;
reg   [8:0] fragment_y_V_1_address0;
reg    fragment_y_V_1_ce0;
reg    fragment_y_V_1_we0;
wire   [7:0] fragment_y_V_1_q0;
reg   [8:0] fragment_z_V_1_address0;
reg    fragment_z_V_1_ce0;
reg    fragment_z_V_1_we0;
wire   [7:0] fragment_z_V_1_q0;
reg   [8:0] fragment_color_V_1_address0;
reg    fragment_color_V_1_ce0;
reg    fragment_color_V_1_we0;
wire   [5:0] fragment_color_V_1_q0;
reg    Input_2_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    Output_3_V_TDATA_blk_n;
reg   [0:0] icmp_ln516_reg_784;
wire    ap_CS_fsm_state33;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] tmp_reg_1089;
reg    Output_4_V_TDATA_blk_n;
reg   [15:0] k_reg_211;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state12_pp0_stage0_iter6;
wire    ap_block_state13_pp0_stage0_iter7;
wire    ap_block_state14_pp0_stage0_iter8;
wire    ap_block_state15_pp0_stage0_iter9;
wire    ap_block_state16_pp0_stage0_iter10;
wire    ap_block_state17_pp0_stage0_iter11;
wire    ap_block_state18_pp0_stage0_iter12;
wire    ap_block_state19_pp0_stage0_iter13;
wire    ap_block_state20_pp0_stage0_iter14;
wire    ap_block_state21_pp0_stage0_iter15;
wire    ap_block_state22_pp0_stage0_iter16;
wire    ap_block_state23_pp0_stage0_iter17;
wire    ap_block_state24_pp0_stage0_iter18;
wire    ap_block_state25_pp0_stage0_iter19;
wire    ap_block_state26_pp0_stage0_iter20;
wire    ap_block_state27_pp0_stage0_iter21;
wire    ap_block_state28_pp0_stage0_iter22;
wire    ap_block_state29_pp0_stage0_iter23;
wire    ap_block_state30_pp0_stage0_iter24;
wire    ap_block_state31_pp0_stage0_iter25;
wire    ap_block_state32_pp0_stage0_iter26;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] j_reg_223;
wire   [31:0] grp_fu_264_p2;
reg   [31:0] reg_283;
wire   [31:0] grp_fu_269_p2;
reg   [31:0] reg_287;
reg   [7:0] triangle_2d_same_x0_V_reg_769;
wire   [7:0] grp_fu_244_p4;
reg   [7:0] triangle_2d_same_y0_V_reg_774;
reg   [7:0] triangle_2d_same_x1_V_reg_779;
wire   [0:0] icmp_ln516_fu_323_p2;
wire   [7:0] triangle_2d_same_y1_V_fu_329_p1;
reg   [7:0] triangle_2d_same_y1_V_reg_788;
reg   [7:0] triangle_2d_same_x2_V_reg_793;
reg   [7:0] triangle_2d_same_y2_V_reg_798;
reg   [7:0] triangle_2d_same_z_V_reg_803;
wire   [15:0] max_index_V_fu_333_p1;
reg   [15:0] max_index_V_reg_808;
reg   [7:0] max_min_V_reg_813;
wire   [7:0] max_min_V_3_fu_337_p1;
reg   [7:0] max_min_V_3_reg_818;
reg   [31:0] out3_cnt_load_reg_823;
reg   [31:0] out4_cnt_load_reg_828;
wire   [15:0] max_min_V_4_cast_fu_351_p1;
reg   [15:0] max_min_V_4_cast_reg_854;
wire   [8:0] triangle_2d_same_y1_V_cast_fu_355_p1;
reg   [8:0] triangle_2d_same_y1_V_cast_reg_860;
wire   [8:0] triangle_2d_same_y0_V_cast_fu_358_p1;
reg   [8:0] triangle_2d_same_y0_V_cast_reg_865;
wire  signed [17:0] rhs_fu_367_p1;
reg  signed [17:0] rhs_reg_870;
wire   [8:0] triangle_2d_same_x1_V_cast_fu_371_p1;
reg   [8:0] triangle_2d_same_x1_V_cast_reg_875;
wire   [8:0] triangle_2d_same_x0_V_cast_fu_374_p1;
reg   [8:0] triangle_2d_same_x0_V_cast_reg_880;
wire  signed [17:0] rhs_9_fu_383_p1;
reg  signed [17:0] rhs_9_reg_885;
wire   [8:0] triangle_2d_same_y2_V_cast_fu_387_p1;
reg   [8:0] triangle_2d_same_y2_V_cast_reg_890;
wire  signed [17:0] rhs_11_fu_396_p1;
reg  signed [17:0] rhs_11_reg_895;
wire   [8:0] triangle_2d_same_x2_V_cast_fu_400_p1;
reg   [8:0] triangle_2d_same_x2_V_cast_reg_900;
wire  signed [17:0] rhs_12_fu_409_p1;
reg  signed [17:0] rhs_12_reg_905;
wire  signed [17:0] rhs_14_fu_419_p1;
reg  signed [17:0] rhs_14_reg_910;
wire  signed [17:0] rhs_15_fu_429_p1;
reg  signed [17:0] rhs_15_reg_915;
wire   [15:0] k_1_fu_448_p2;
reg   [15:0] k_1_reg_920;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln878_fu_454_p2;
reg   [0:0] icmp_ln878_reg_925;
wire   [7:0] grp_fu_459_p2;
reg   [7:0] rem_i_i_urem_reg_929;
wire   [7:0] grp_fu_464_p2;
reg   [7:0] div_i_i_udiv_reg_934;
wire   [7:0] x_V_fu_472_p2;
reg   [7:0] x_V_reg_939;
reg   [7:0] x_V_reg_939_pp0_iter21_reg;
reg   [7:0] x_V_reg_939_pp0_iter22_reg;
reg   [7:0] x_V_reg_939_pp0_iter23_reg;
reg   [7:0] x_V_reg_939_pp0_iter24_reg;
reg   [7:0] x_V_reg_939_pp0_iter25_reg;
wire   [7:0] y_V_fu_480_p2;
reg   [7:0] y_V_reg_945;
reg   [7:0] y_V_reg_945_pp0_iter21_reg;
reg   [7:0] y_V_reg_945_pp0_iter22_reg;
reg   [7:0] y_V_reg_945_pp0_iter23_reg;
reg   [7:0] y_V_reg_945_pp0_iter24_reg;
reg   [7:0] y_V_reg_945_pp0_iter25_reg;
wire   [8:0] ret_60_fu_505_p2;
reg  signed [8:0] ret_60_reg_957;
wire   [8:0] ret_66_fu_524_p2;
reg  signed [8:0] ret_66_reg_967;
wire   [8:0] ret_72_fu_543_p2;
reg  signed [8:0] ret_72_reg_977;
wire   [17:0] grp_fu_497_p2;
wire   [17:0] grp_fu_519_p2;
wire   [17:0] grp_fu_538_p2;
wire  signed [17:0] grp_fu_748_p3;
reg  signed [17:0] sub_ln317_reg_1012;
reg    ap_enable_reg_pp0_iter25;
wire  signed [17:0] grp_fu_755_p3;
reg  signed [17:0] sub_ln317_2_reg_1017;
wire  signed [17:0] grp_fu_762_p3;
reg  signed [17:0] ret_reg_1022;
wire   [0:0] icmp_ln878_2_fu_648_p2;
reg   [0:0] icmp_ln878_2_reg_1030;
wire   [15:0] add_ln568_fu_664_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state35_pp1_stage0_iter0;
wire    ap_block_state36_pp1_stage0_iter1;
wire    ap_block_state37_pp1_stage0_iter2;
reg    ap_block_state38_pp1_stage0_iter3;
reg    ap_block_state38_io;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln878_3_fu_670_p2;
wire   [63:0] zext_ln878_fu_676_p1;
reg   [63:0] zext_ln878_reg_1057;
reg   [7:0] fragment_y_V_1_load_reg_1084;
reg    ap_enable_reg_pp1_iter2;
wire   [0:0] tmp_fu_681_p3;
wire   [31:0] add_ln587_fu_692_p2;
reg   [31:0] add_ln587_reg_1093;
wire   [31:0] add_ln578_fu_706_p2;
reg   [31:0] add_ln578_reg_1098;
reg    ap_block_state4;
reg    ap_block_state4_io;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter26;
wire    ap_CS_fsm_state34;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state35;
reg    ap_enable_reg_pp1_iter1;
reg   [15:0] ap_phi_mux_k_phi_fu_215_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln534_fu_574_p1;
wire   [0:0] tmp_12_fu_566_p3;
wire   [31:0] add_ln506_fu_311_p2;
reg    ap_block_state1;
wire    ap_CS_fsm_state5;
reg   [15:0] i_V_fu_84;
wire   [15:0] i_V_2_fu_582_p2;
reg   [15:0] i_top_V_fu_88;
wire   [15:0] select_ln552_fu_607_p3;
reg   [15:0] i_bot_V_fu_92;
wire   [15:0] select_ln552_1_fu_615_p3;
reg   [31:0] empty_13_fu_96;
reg   [31:0] empty_14_fu_100;
wire   [31:0] zext_ln208_fu_638_p1;
reg    ap_block_state33;
wire   [31:0] zext_ln414_fu_732_p1;
reg    ap_block_pp1_stage0_01001;
reg    ap_block_state33_io;
wire   [31:0] zext_ln208_2_fu_643_p1;
reg   [31:0] grp_fu_264_p0;
reg   [31:0] grp_fu_269_p0;
wire   [1:0] flag_V_fu_307_p1;
wire   [8:0] ret_58_fu_361_p2;
wire   [8:0] ret_61_fu_377_p2;
wire   [8:0] ret_64_fu_390_p2;
wire   [8:0] ret_67_fu_403_p2;
wire   [8:0] ret_70_fu_413_p2;
wire   [8:0] ret_73_fu_423_p2;
wire   [7:0] grp_fu_459_p1;
wire   [7:0] grp_fu_464_p1;
wire   [7:0] trunc_ln213_fu_469_p1;
wire   [7:0] trunc_ln1346_fu_477_p1;
wire   [8:0] zext_ln1347_fu_485_p1;
wire  signed [8:0] ret_57_fu_488_p2;
wire  signed [8:0] grp_fu_497_p1;
wire   [8:0] zext_ln1347_2_fu_502_p1;
wire  signed [8:0] ret_63_fu_510_p2;
wire  signed [8:0] grp_fu_519_p1;
wire  signed [8:0] ret_69_fu_529_p2;
wire  signed [8:0] grp_fu_538_p1;
wire   [17:0] or_ln317_fu_557_p2;
wire   [17:0] or_ln317_2_fu_561_p2;
wire   [0:0] tmp_13_fu_588_p3;
wire   [15:0] i_top_V_2_fu_595_p2;
wire   [15:0] i_bot_V_2_fu_601_p2;
wire   [29:0] p_Result_s_fu_717_p5;
wire  signed [30:0] sext_ln414_fu_728_p1;
wire  signed [8:0] grp_fu_748_p1;
wire  signed [8:0] grp_fu_755_p1;
wire  signed [8:0] grp_fu_762_p1;
wire    ap_CS_fsm_state40;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 in2_cnt = 32'd0;
#0 out3_cnt = 32'd0;
#0 out4_cnt = 32'd0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

rasterization2_m_rasterization2_even_fragment_x_V_1 #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_x_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_x_V_1_address0),
    .ce0(fragment_x_V_1_ce0),
    .we0(fragment_x_V_1_we0),
    .d0(x_V_reg_939_pp0_iter25_reg),
    .q0(fragment_x_V_1_q0)
);

rasterization2_m_rasterization2_even_fragment_x_V_1 #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_y_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_y_V_1_address0),
    .ce0(fragment_y_V_1_ce0),
    .we0(fragment_y_V_1_we0),
    .d0(y_V_reg_945_pp0_iter25_reg),
    .q0(fragment_y_V_1_q0)
);

rasterization2_m_rasterization2_even_fragment_x_V_1 #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_z_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_z_V_1_address0),
    .ce0(fragment_z_V_1_ce0),
    .we0(fragment_z_V_1_we0),
    .d0(triangle_2d_same_z_V_reg_803),
    .q0(fragment_z_V_1_q0)
);

rasterization2_m_rasterization2_even_fragment_color_V_1 #(
    .DataWidth( 6 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_color_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_color_V_1_address0),
    .ce0(fragment_color_V_1_ce0),
    .we0(fragment_color_V_1_we0),
    .d0(6'd36),
    .q0(fragment_color_V_1_q0)
);

rasterization2_m_urem_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_16ns_8ns_8_20_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_k_phi_fu_215_p4),
    .din1(grp_fu_459_p1),
    .ce(1'b1),
    .dout(grp_fu_459_p2)
);

rasterization2_m_udiv_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_16ns_8ns_8_20_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_k_phi_fu_215_p4),
    .din1(grp_fu_464_p1),
    .ce(1'b1),
    .dout(grp_fu_464_p2)
);

rasterization2_m_mul_9s_9s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_57_fu_488_p2),
    .din1(grp_fu_497_p1),
    .ce(1'b1),
    .dout(grp_fu_497_p2)
);

rasterization2_m_mul_9s_9s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_63_fu_510_p2),
    .din1(grp_fu_519_p1),
    .ce(1'b1),
    .dout(grp_fu_519_p2)
);

rasterization2_m_mul_9s_9s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_69_fu_529_p2),
    .din1(grp_fu_538_p1),
    .ce(1'b1),
    .dout(grp_fu_538_p2)
);

rasterization2_m_mac_mulsub_9s_9s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18ns_18_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_60_reg_957),
    .din1(grp_fu_748_p1),
    .din2(grp_fu_497_p2),
    .ce(1'b1),
    .dout(grp_fu_748_p3)
);

rasterization2_m_mac_mulsub_9s_9s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18ns_18_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_66_reg_967),
    .din1(grp_fu_755_p1),
    .din2(grp_fu_519_p2),
    .ce(1'b1),
    .dout(grp_fu_755_p3)
);

rasterization2_m_mac_mulsub_9s_9s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18ns_18_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_72_reg_977),
    .din1(grp_fu_762_p1),
    .din2(grp_fu_538_p2),
    .ce(1'b1),
    .dout(grp_fu_762_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state6)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end else if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
            ap_enable_reg_pp0_iter26 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state35) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln878_2_reg_1030 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state35)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state35);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((icmp_ln878_2_reg_1030 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_2_reg_1030 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        empty_13_fu_96 <= reg_287;
    end else if (((tmp_fu_681_p3 == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        empty_13_fu_96 <= add_ln587_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_2_reg_1030 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        empty_14_fu_100 <= reg_283;
    end else if (((tmp_fu_681_p3 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        empty_14_fu_100 <= add_ln578_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
        i_V_fu_84 <= 16'd0;
    end else if (((tmp_12_fu_566_p3 == 1'd0) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_V_fu_84 <= i_V_2_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
        i_bot_V_fu_92 <= 16'd0;
    end else if (((tmp_12_fu_566_p3 == 1'd0) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_bot_V_fu_92 <= select_ln552_1_fu_615_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
        i_top_V_fu_88 <= 16'd0;
    end else if (((tmp_12_fu_566_p3 == 1'd0) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_top_V_fu_88 <= select_ln552_fu_607_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_2_reg_1030 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        j_reg_223 <= 16'd0;
    end else if (((icmp_ln878_3_fu_670_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j_reg_223 <= add_ln568_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln878_reg_925 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_211 <= k_1_reg_920;
    end else if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
        k_reg_211 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state34))) begin
        out3_cnt <= reg_283;
    end else if (((tmp_reg_1089 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        out3_cnt <= add_ln578_reg_1098;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state34))) begin
        out4_cnt <= reg_287;
    end else if (((tmp_reg_1089 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        out4_cnt <= add_ln587_reg_1093;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_681_p3 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln578_reg_1098 <= add_ln578_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_681_p3 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln587_reg_1093 <= add_ln587_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        div_i_i_udiv_reg_934 <= grp_fu_464_p2;
        rem_i_i_urem_reg_929 <= grp_fu_459_p2;
        ret_60_reg_957 <= ret_60_fu_505_p2;
        ret_66_reg_967 <= ret_66_fu_524_p2;
        ret_72_reg_977 <= ret_72_fu_543_p2;
        x_V_reg_939 <= x_V_fu_472_p2;
        x_V_reg_939_pp0_iter21_reg <= x_V_reg_939;
        x_V_reg_939_pp0_iter22_reg <= x_V_reg_939_pp0_iter21_reg;
        x_V_reg_939_pp0_iter23_reg <= x_V_reg_939_pp0_iter22_reg;
        x_V_reg_939_pp0_iter24_reg <= x_V_reg_939_pp0_iter23_reg;
        x_V_reg_939_pp0_iter25_reg <= x_V_reg_939_pp0_iter24_reg;
        y_V_reg_945 <= y_V_fu_480_p2;
        y_V_reg_945_pp0_iter21_reg <= y_V_reg_945;
        y_V_reg_945_pp0_iter22_reg <= y_V_reg_945_pp0_iter21_reg;
        y_V_reg_945_pp0_iter23_reg <= y_V_reg_945_pp0_iter22_reg;
        y_V_reg_945_pp0_iter24_reg <= y_V_reg_945_pp0_iter23_reg;
        y_V_reg_945_pp0_iter25_reg <= y_V_reg_945_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fragment_y_V_1_load_reg_1084 <= fragment_y_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln516_reg_784 <= icmp_ln516_fu_323_p2;
        triangle_2d_same_x0_V_reg_769 <= {{Input_2_V_TDATA[15:8]}};
        triangle_2d_same_x1_V_reg_779 <= {{Input_2_V_TDATA[31:24]}};
        triangle_2d_same_y0_V_reg_774 <= {{Input_2_V_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        icmp_ln878_2_reg_1030 <= icmp_ln878_2_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_reg_925 <= icmp_ln878_fu_454_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_2_V_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in2_cnt <= add_ln506_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_1_reg_920 <= k_1_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        max_index_V_reg_808 <= max_index_V_fu_333_p1;
        max_min_V_reg_813 <= {{Input_2_V_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_min_V_3_reg_818 <= max_min_V_3_fu_337_p1;
        out3_cnt_load_reg_823 <= out3_cnt;
        out4_cnt_load_reg_828 <= out4_cnt;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
        max_min_V_4_cast_reg_854[7 : 0] <= max_min_V_4_cast_fu_351_p1[7 : 0];
        rhs_11_reg_895 <= rhs_11_fu_396_p1;
        rhs_12_reg_905 <= rhs_12_fu_409_p1;
        rhs_14_reg_910 <= rhs_14_fu_419_p1;
        rhs_15_reg_915 <= rhs_15_fu_429_p1;
        rhs_9_reg_885 <= rhs_9_fu_383_p1;
        rhs_reg_870 <= rhs_fu_367_p1;
        triangle_2d_same_x0_V_cast_reg_880[7 : 0] <= triangle_2d_same_x0_V_cast_fu_374_p1[7 : 0];
        triangle_2d_same_x1_V_cast_reg_875[7 : 0] <= triangle_2d_same_x1_V_cast_fu_371_p1[7 : 0];
        triangle_2d_same_x2_V_cast_reg_900[7 : 0] <= triangle_2d_same_x2_V_cast_fu_400_p1[7 : 0];
        triangle_2d_same_y0_V_cast_reg_865[7 : 0] <= triangle_2d_same_y0_V_cast_fu_358_p1[7 : 0];
        triangle_2d_same_y1_V_cast_reg_860[7 : 0] <= triangle_2d_same_y1_V_cast_fu_355_p1[7 : 0];
        triangle_2d_same_y2_V_cast_reg_890[7 : 0] <= triangle_2d_same_y2_V_cast_fu_387_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0)))) begin
        reg_283 <= grp_fu_264_p2;
        reg_287 <= grp_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_reg_1022 <= grp_fu_762_p3;
        sub_ln317_2_reg_1017 <= grp_fu_755_p3;
        sub_ln317_reg_1012 <= grp_fu_748_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        tmp_reg_1089 <= fragment_y_V_1_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        triangle_2d_same_x2_V_reg_793 <= {{Input_2_V_TDATA[15:8]}};
        triangle_2d_same_y1_V_reg_788 <= triangle_2d_same_y1_V_fu_329_p1;
        triangle_2d_same_y2_V_reg_798 <= {{Input_2_V_TDATA[23:16]}};
        triangle_2d_same_z_V_reg_803 <= {{Input_2_V_TDATA[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_3_fu_670_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        zext_ln878_reg_1057[15 : 0] <= zext_ln878_fu_676_p1[15 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        Input_2_V_TDATA_blk_n = Input_2_V_TVALID;
    end else begin
        Input_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == Input_2_V_TVALID)) | ((1'b1 == ap_CS_fsm_state2) & (1'b1 == Input_2_V_TVALID)) | (~((1'b0 == Input_2_V_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4)))) begin
        Input_2_V_TREADY = 1'b1;
    end else begin
        Input_2_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_1089 == 1'd1) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        Output_3_V_TDATA = zext_ln414_fu_732_p1;
    end else if ((~((1'b0 == Output_4_V_TREADY) | (1'b0 == Output_3_V_TREADY)) & (1'b1 == ap_CS_fsm_state33))) begin
        Output_3_V_TDATA = zext_ln208_fu_638_p1;
    end else if ((~((1'b0 == Input_2_V_TVALID) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0))) begin
        Output_3_V_TDATA = 32'd0;
    end else begin
        Output_3_V_TDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((tmp_reg_1089 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0)))) begin
        Output_3_V_TDATA_blk_n = Output_3_V_TREADY;
    end else begin
        Output_3_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b0 == Output_4_V_TREADY) | (1'b0 == Output_3_V_TREADY) | (1'b1 == ap_block_state33_io)) & (1'b1 == ap_CS_fsm_state33)) | (~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0)) | ((tmp_reg_1089 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        Output_3_V_TVALID = 1'b1;
    end else begin
        Output_3_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_1089 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        Output_4_V_TDATA = zext_ln414_fu_732_p1;
    end else if ((~((1'b0 == Output_4_V_TREADY) | (1'b0 == Output_3_V_TREADY)) & (1'b1 == ap_CS_fsm_state33))) begin
        Output_4_V_TDATA = zext_ln208_2_fu_643_p1;
    end else if ((~((1'b0 == Input_2_V_TVALID) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0))) begin
        Output_4_V_TDATA = 32'd0;
    end else begin
        Output_4_V_TDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((tmp_reg_1089 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0)))) begin
        Output_4_V_TDATA_blk_n = Output_4_V_TREADY;
    end else begin
        Output_4_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b0 == Output_4_V_TREADY) | (1'b0 == Output_3_V_TREADY) | (1'b1 == ap_block_state33_io)) & (1'b1 == ap_CS_fsm_state33)) | (~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0)) | ((tmp_reg_1089 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        Output_4_V_TVALID = 1'b1;
    end else begin
        Output_4_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln878_fu_454_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln878_3_fu_670_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln878_reg_925 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_k_phi_fu_215_p4 = k_1_reg_920;
    end else begin
        ap_phi_mux_k_phi_fu_215_p4 = k_reg_211;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_color_V_1_address0 = zext_ln878_reg_1057;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fragment_color_V_1_address0 = zext_ln534_fu_574_p1;
    end else begin
        fragment_color_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        fragment_color_V_1_ce0 = 1'b1;
    end else begin
        fragment_color_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_12_fu_566_p3 == 1'd0) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_color_V_1_we0 = 1'b1;
    end else begin
        fragment_color_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_x_V_1_address0 = zext_ln878_reg_1057;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fragment_x_V_1_address0 = zext_ln534_fu_574_p1;
    end else begin
        fragment_x_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        fragment_x_V_1_ce0 = 1'b1;
    end else begin
        fragment_x_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_12_fu_566_p3 == 1'd0) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_x_V_1_we0 = 1'b1;
    end else begin
        fragment_x_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_y_V_1_address0 = zext_ln878_fu_676_p1;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fragment_y_V_1_address0 = zext_ln534_fu_574_p1;
    end else begin
        fragment_y_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        fragment_y_V_1_ce0 = 1'b1;
    end else begin
        fragment_y_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_12_fu_566_p3 == 1'd0) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_y_V_1_we0 = 1'b1;
    end else begin
        fragment_y_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_z_V_1_address0 = zext_ln878_reg_1057;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fragment_z_V_1_address0 = zext_ln534_fu_574_p1;
    end else begin
        fragment_z_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        fragment_z_V_1_ce0 = 1'b1;
    end else begin
        fragment_z_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_12_fu_566_p3 == 1'd0) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_z_V_1_we0 = 1'b1;
    end else begin
        fragment_z_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_264_p0 = out3_cnt_load_reg_823;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_264_p0 = out3_cnt;
    end else begin
        grp_fu_264_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_269_p0 = out4_cnt_load_reg_828;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_269_p0 = out4_cnt;
    end else begin
        grp_fu_269_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Input_2_V_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == Input_2_V_TVALID))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == Input_2_V_TVALID))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((1'b0 == Input_2_V_TVALID) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln516_reg_784 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln878_fu_454_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter26 == 1'b1) & (ap_enable_reg_pp0_iter25 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter26 == 1'b1) & (ap_enable_reg_pp0_iter25 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln878_fu_454_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            if ((~((1'b0 == Output_4_V_TREADY) | (1'b0 == Output_3_V_TREADY) | (1'b1 == ap_block_state33_io)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln878_2_reg_1030 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln878_3_fu_670_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln878_3_fu_670_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln506_fu_311_p2 = (in2_cnt + 32'd4);

assign add_ln568_fu_664_p2 = (j_reg_223 + 16'd1);

assign add_ln578_fu_706_p2 = (empty_14_fu_100 + 32'd1);

assign add_ln587_fu_692_p2 = (empty_13_fu_96 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_enable_reg_pp1_iter3 == 1'b1) & (((1'b0 == Output_3_V_TREADY) & (tmp_reg_1089 == 1'd1)) | ((1'b0 == Output_4_V_TREADY) & (tmp_reg_1089 == 1'd0))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter3 == 1'b1) & ((1'b1 == ap_block_state38_io) | ((1'b0 == Output_3_V_TREADY) & (tmp_reg_1089 == 1'd1)) | ((1'b0 == Output_4_V_TREADY) & (tmp_reg_1089 == 1'd0))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter3 == 1'b1) & ((1'b1 == ap_block_state38_io) | ((1'b0 == Output_3_V_TREADY) & (tmp_reg_1089 == 1'd1)) | ((1'b0 == Output_4_V_TREADY) & (tmp_reg_1089 == 1'd0))));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == Input_2_V_TVALID) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33 = ((1'b0 == Output_4_V_TREADY) | (1'b0 == Output_3_V_TREADY));
end

always @ (*) begin
    ap_block_state33_io = ((1'b0 == Output_4_V_TREADY) | (1'b0 == Output_3_V_TREADY));
end

assign ap_block_state35_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = (((1'b0 == Output_3_V_TREADY) & (tmp_reg_1089 == 1'd1)) | ((1'b0 == Output_4_V_TREADY) & (tmp_reg_1089 == 1'd0)));
end

always @ (*) begin
    ap_block_state38_pp1_stage0_iter3 = (((1'b0 == Output_3_V_TREADY) & (tmp_reg_1089 == 1'd1)) | ((1'b0 == Output_4_V_TREADY) & (tmp_reg_1089 == 1'd0)));
end

always @ (*) begin
    ap_block_state4 = ((1'b0 == Input_2_V_TVALID) | ((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_io = (((1'b0 == Output_3_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)) | ((1'b0 == Output_4_V_TREADY) & (icmp_ln516_reg_784 == 1'd0)));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign flag_V_fu_307_p1 = Input_2_V_TDATA[1:0];

assign grp_fu_244_p4 = {{Input_2_V_TDATA[23:16]}};

assign grp_fu_264_p2 = (grp_fu_264_p0 + 32'd1);

assign grp_fu_269_p2 = (grp_fu_269_p0 + 32'd1);

assign grp_fu_459_p1 = max_min_V_4_cast_reg_854;

assign grp_fu_464_p1 = max_min_V_4_cast_reg_854;

assign grp_fu_497_p1 = rhs_reg_870;

assign grp_fu_519_p1 = rhs_11_reg_895;

assign grp_fu_538_p1 = rhs_14_reg_910;

assign grp_fu_748_p1 = rhs_9_reg_885;

assign grp_fu_755_p1 = rhs_12_reg_905;

assign grp_fu_762_p1 = rhs_15_reg_915;

assign i_V_2_fu_582_p2 = (i_V_fu_84 + 16'd1);

assign i_bot_V_2_fu_601_p2 = (i_bot_V_fu_92 + 16'd1);

assign i_top_V_2_fu_595_p2 = (i_top_V_fu_88 + 16'd1);

assign icmp_ln516_fu_323_p2 = ((flag_V_fu_307_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_648_p2 = ((i_V_fu_84 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_670_p2 = ((j_reg_223 == i_V_fu_84) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_454_p2 = ((ap_phi_mux_k_phi_fu_215_p4 == max_index_V_reg_808) ? 1'b1 : 1'b0);

assign k_1_fu_448_p2 = (ap_phi_mux_k_phi_fu_215_p4 + 16'd1);

assign max_index_V_fu_333_p1 = Input_2_V_TDATA[15:0];

assign max_min_V_3_fu_337_p1 = Input_2_V_TDATA[7:0];

assign max_min_V_4_cast_fu_351_p1 = grp_fu_244_p4;

assign or_ln317_2_fu_561_p2 = (ret_reg_1022 | or_ln317_fu_557_p2);

assign or_ln317_fu_557_p2 = (sub_ln317_reg_1012 | sub_ln317_2_reg_1017);

assign p_Result_s_fu_717_p5 = {{{{fragment_color_V_1_q0}, {fragment_z_V_1_q0}}, {fragment_y_V_1_load_reg_1084}}, {fragment_x_V_1_q0}};

assign ret_57_fu_488_p2 = (zext_ln1347_fu_485_p1 - triangle_2d_same_x0_V_cast_reg_880);

assign ret_58_fu_361_p2 = (triangle_2d_same_y1_V_cast_fu_355_p1 - triangle_2d_same_y0_V_cast_fu_358_p1);

assign ret_60_fu_505_p2 = (zext_ln1347_2_fu_502_p1 - triangle_2d_same_y0_V_cast_reg_865);

assign ret_61_fu_377_p2 = (triangle_2d_same_x1_V_cast_fu_371_p1 - triangle_2d_same_x0_V_cast_fu_374_p1);

assign ret_63_fu_510_p2 = (zext_ln1347_fu_485_p1 - triangle_2d_same_x1_V_cast_reg_875);

assign ret_64_fu_390_p2 = (triangle_2d_same_y2_V_cast_fu_387_p1 - triangle_2d_same_y1_V_cast_fu_355_p1);

assign ret_66_fu_524_p2 = (zext_ln1347_2_fu_502_p1 - triangle_2d_same_y1_V_cast_reg_860);

assign ret_67_fu_403_p2 = (triangle_2d_same_x2_V_cast_fu_400_p1 - triangle_2d_same_x1_V_cast_fu_371_p1);

assign ret_69_fu_529_p2 = (zext_ln1347_fu_485_p1 - triangle_2d_same_x2_V_cast_reg_900);

assign ret_70_fu_413_p2 = (triangle_2d_same_y0_V_cast_fu_358_p1 - triangle_2d_same_y2_V_cast_fu_387_p1);

assign ret_72_fu_543_p2 = (zext_ln1347_2_fu_502_p1 - triangle_2d_same_y2_V_cast_reg_890);

assign ret_73_fu_423_p2 = (triangle_2d_same_x0_V_cast_fu_374_p1 - triangle_2d_same_x2_V_cast_fu_400_p1);

assign rhs_11_fu_396_p1 = $signed(ret_64_fu_390_p2);

assign rhs_12_fu_409_p1 = $signed(ret_67_fu_403_p2);

assign rhs_14_fu_419_p1 = $signed(ret_70_fu_413_p2);

assign rhs_15_fu_429_p1 = $signed(ret_73_fu_423_p2);

assign rhs_9_fu_383_p1 = $signed(ret_61_fu_377_p2);

assign rhs_fu_367_p1 = $signed(ret_58_fu_361_p2);

assign select_ln552_1_fu_615_p3 = ((tmp_13_fu_588_p3[0:0] == 1'b1) ? i_bot_V_fu_92 : i_bot_V_2_fu_601_p2);

assign select_ln552_fu_607_p3 = ((tmp_13_fu_588_p3[0:0] == 1'b1) ? i_top_V_2_fu_595_p2 : i_top_V_fu_88);

assign sext_ln414_fu_728_p1 = $signed(p_Result_s_fu_717_p5);

assign tmp_12_fu_566_p3 = or_ln317_2_fu_561_p2[32'd17];

assign tmp_13_fu_588_p3 = y_V_reg_945_pp0_iter25_reg[32'd7];

assign tmp_fu_681_p3 = fragment_y_V_1_q0[32'd7];

assign triangle_2d_same_x0_V_cast_fu_374_p1 = triangle_2d_same_x0_V_reg_769;

assign triangle_2d_same_x1_V_cast_fu_371_p1 = triangle_2d_same_x1_V_reg_779;

assign triangle_2d_same_x2_V_cast_fu_400_p1 = triangle_2d_same_x2_V_reg_793;

assign triangle_2d_same_y0_V_cast_fu_358_p1 = triangle_2d_same_y0_V_reg_774;

assign triangle_2d_same_y1_V_cast_fu_355_p1 = triangle_2d_same_y1_V_reg_788;

assign triangle_2d_same_y1_V_fu_329_p1 = Input_2_V_TDATA[7:0];

assign triangle_2d_same_y2_V_cast_fu_387_p1 = triangle_2d_same_y2_V_reg_798;

assign trunc_ln1346_fu_477_p1 = div_i_i_udiv_reg_934[7:0];

assign trunc_ln213_fu_469_p1 = rem_i_i_urem_reg_929[7:0];

assign x_V_fu_472_p2 = (trunc_ln213_fu_469_p1 + max_min_V_reg_813);

assign y_V_fu_480_p2 = (trunc_ln1346_fu_477_p1 + max_min_V_3_reg_818);

assign zext_ln1347_2_fu_502_p1 = y_V_reg_945;

assign zext_ln1347_fu_485_p1 = x_V_reg_939;

assign zext_ln208_2_fu_643_p1 = i_bot_V_fu_92;

assign zext_ln208_fu_638_p1 = i_top_V_fu_88;

assign zext_ln414_fu_732_p1 = $unsigned(sext_ln414_fu_728_p1);

assign zext_ln534_fu_574_p1 = i_V_fu_84;

assign zext_ln878_fu_676_p1 = j_reg_223;

always @ (posedge ap_clk) begin
    max_min_V_4_cast_reg_854[15:8] <= 8'b00000000;
    triangle_2d_same_y1_V_cast_reg_860[8] <= 1'b0;
    triangle_2d_same_y0_V_cast_reg_865[8] <= 1'b0;
    triangle_2d_same_x1_V_cast_reg_875[8] <= 1'b0;
    triangle_2d_same_x0_V_cast_reg_880[8] <= 1'b0;
    triangle_2d_same_y2_V_cast_reg_890[8] <= 1'b0;
    triangle_2d_same_x2_V_cast_reg_900[8] <= 1'b0;
    zext_ln878_reg_1057[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //rasterization2_m_rasterization2_even
