// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="update_knn10,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.931375,HLS_SYN_LAT=4112,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=5248,HLS_SYN_LUT=10264,HLS_VERSION=2018_2}" *)

module update_knn10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 46'd1;
parameter    ap_ST_fsm_state2 = 46'd2;
parameter    ap_ST_fsm_state3 = 46'd4;
parameter    ap_ST_fsm_state4 = 46'd8;
parameter    ap_ST_fsm_state5 = 46'd16;
parameter    ap_ST_fsm_state6 = 46'd32;
parameter    ap_ST_fsm_state7 = 46'd64;
parameter    ap_ST_fsm_state8 = 46'd128;
parameter    ap_ST_fsm_state9 = 46'd256;
parameter    ap_ST_fsm_state10 = 46'd512;
parameter    ap_ST_fsm_state11 = 46'd1024;
parameter    ap_ST_fsm_state12 = 46'd2048;
parameter    ap_ST_fsm_state13 = 46'd4096;
parameter    ap_ST_fsm_state14 = 46'd8192;
parameter    ap_ST_fsm_state15 = 46'd16384;
parameter    ap_ST_fsm_state16 = 46'd32768;
parameter    ap_ST_fsm_state17 = 46'd65536;
parameter    ap_ST_fsm_state18 = 46'd131072;
parameter    ap_ST_fsm_state19 = 46'd262144;
parameter    ap_ST_fsm_state20 = 46'd524288;
parameter    ap_ST_fsm_state21 = 46'd1048576;
parameter    ap_ST_fsm_state22 = 46'd2097152;
parameter    ap_ST_fsm_state23 = 46'd4194304;
parameter    ap_ST_fsm_state24 = 46'd8388608;
parameter    ap_ST_fsm_state25 = 46'd16777216;
parameter    ap_ST_fsm_pp1_stage0 = 46'd33554432;
parameter    ap_ST_fsm_state38 = 46'd67108864;
parameter    ap_ST_fsm_pp2_stage0 = 46'd134217728;
parameter    ap_ST_fsm_state45 = 46'd268435456;
parameter    ap_ST_fsm_pp3_stage0 = 46'd536870912;
parameter    ap_ST_fsm_state49 = 46'd1073741824;
parameter    ap_ST_fsm_state50 = 46'd2147483648;
parameter    ap_ST_fsm_state51 = 46'd4294967296;
parameter    ap_ST_fsm_state52 = 46'd8589934592;
parameter    ap_ST_fsm_state53 = 46'd17179869184;
parameter    ap_ST_fsm_state54 = 46'd34359738368;
parameter    ap_ST_fsm_state55 = 46'd68719476736;
parameter    ap_ST_fsm_state56 = 46'd137438953472;
parameter    ap_ST_fsm_state57 = 46'd274877906944;
parameter    ap_ST_fsm_state58 = 46'd549755813888;
parameter    ap_ST_fsm_state59 = 46'd1099511627776;
parameter    ap_ST_fsm_state60 = 46'd2199023255552;
parameter    ap_ST_fsm_state61 = 46'd4398046511104;
parameter    ap_ST_fsm_state62 = 46'd8796093022208;
parameter    ap_ST_fsm_state63 = 46'd17592186044416;
parameter    ap_ST_fsm_state64 = 46'd35184372088832;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] index;
reg   [10:0] knn_set_0;
reg   [10:0] knn_set_1;
reg   [10:0] knn_set_2;
reg   [10:0] knn_set_3;
reg   [10:0] knn_set_4;
reg   [10:0] knn_set_5;
reg   [8:0] training_set_V_0_address0;
reg    training_set_V_0_ce0;
reg    training_set_V_0_we0;
wire   [255:0] training_set_V_0_q0;
reg   [8:0] training_set_V_1_address0;
reg    training_set_V_1_ce0;
reg    training_set_V_1_we0;
wire   [255:0] training_set_V_1_q0;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_643_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
reg    Output_1_V_V_blk_n;
reg   [0:0] index_load_reg_2449;
wire    ap_CS_fsm_state64;
reg   [8:0] knn_set_4_load_1_reg_323;
reg   [8:0] knn_set_3_load_1_reg_335;
reg   [8:0] knn_set_2_load_1_reg_347;
reg   [8:0] knn_set_1_load_1_reg_359;
reg   [8:0] knn_set_0_load_1_reg_371;
reg   [8:0] knn_set_5_load_reg_383;
reg   [8:0] i3_reg_395;
reg   [2:0] indvar_flatten_reg_496;
reg   [1:0] i_0_i_reg_507;
reg   [31:0] label_list_2_s_reg_518;
reg   [31:0] label_list_2_2_reg_528;
reg   [31:0] label_list_1_1_reg_538;
reg   [31:0] min_distance_list_2_1_reg_548;
reg   [31:0] min_distance_list_2_1_8_reg_558;
reg   [31:0] min_distance_list_1_1_reg_568;
reg   [1:0] j_0_i_reg_578;
reg   [1:0] i1_0_i_reg_589;
reg   [31:0] reg_610;
reg    ap_block_state2;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state10_io;
reg   [31:0] reg_615;
reg   [31:0] reg_619;
reg   [31:0] reg_623;
reg   [31:0] reg_627;
reg   [31:0] reg_631;
reg   [31:0] reg_635;
wire   [0:0] index_load_load_fu_639_p1;
wire   [9:0] i_1_fu_649_p2;
reg   [9:0] i_1_reg_2456;
wire   [0:0] tmp_4_fu_655_p2;
reg   [0:0] tmp_4_reg_2461;
wire   [9:0] newIndex_fu_667_p3;
reg   [9:0] newIndex_reg_2465;
reg   [31:0] tmp_V_15_reg_2470;
reg   [31:0] tmp_V_23_reg_2475;
reg   [31:0] tmp_V_24_reg_2480;
reg   [31:0] tmp_V_25_reg_2485;
reg   [31:0] tmp_V_26_reg_2490;
reg   [31:0] tmp_V_27_reg_2495;
wire   [255:0] p_Result_1_fu_744_p9;
reg   [255:0] p_Result_1_reg_2500;
wire   [0:0] exitcond4_fu_763_p2;
reg   [0:0] exitcond4_reg_2506;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state26_pp1_stage0_iter0;
wire    ap_block_state27_pp1_stage0_iter1;
wire    ap_block_state28_pp1_stage0_iter2;
wire    ap_block_state29_pp1_stage0_iter3;
wire    ap_block_state30_pp1_stage0_iter4;
wire    ap_block_state31_pp1_stage0_iter5;
wire    ap_block_state32_pp1_stage0_iter6;
wire    ap_block_state33_pp1_stage0_iter7;
wire    ap_block_state34_pp1_stage0_iter8;
wire    ap_block_state35_pp1_stage0_iter9;
wire    ap_block_state36_pp1_stage0_iter10;
wire    ap_block_state37_pp1_stage0_iter11;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond4_reg_2506_pp1_iter1_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter2_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter3_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter4_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter5_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter6_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter7_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter8_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter9_reg;
reg   [0:0] exitcond4_reg_2506_pp1_iter10_reg;
wire   [8:0] i_3_fu_769_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [255:0] training_set_V_0_loa_reg_2525;
reg    ap_enable_reg_pp1_iter1;
reg   [255:0] training_set_V_1_loa_reg_2530;
wire   [255:0] p_0_fu_781_p2;
reg   [255:0] p_0_reg_2535;
wire   [255:0] p_0_1_fu_785_p2;
reg   [255:0] p_0_1_reg_2540;
wire   [8:0] grp_popcount_fu_600_ap_return;
reg   [8:0] dist_reg_2545;
wire   [8:0] grp_popcount_fu_605_ap_return;
reg   [8:0] dist_1_reg_2556;
wire   [8:0] tmp_12_fu_796_p1;
reg   [8:0] tmp_12_reg_2567;
wire   [8:0] tmp_15_fu_834_p1;
reg   [8:0] tmp_15_reg_2574;
wire   [8:0] tmp_16_fu_868_p1;
reg   [8:0] tmp_16_reg_2581;
wire   [1:0] p_s_fu_898_p3;
wire   [0:0] tmp_s_fu_906_p2;
reg   [0:0] tmp_s_reg_2592;
wire   [8:0] tmp_22_fu_946_p1;
reg   [8:0] tmp_22_reg_2596;
wire   [8:0] tmp_24_fu_984_p1;
reg   [8:0] tmp_24_reg_2603;
wire   [8:0] tmp_25_fu_1018_p1;
reg   [8:0] tmp_25_reg_2610;
wire   [1:0] p_1_fu_1048_p3;
wire   [0:0] tmp_17_1_fu_1056_p2;
reg   [0:0] tmp_17_1_reg_2621;
wire   [2:0] tmp_7_fu_1105_p2;
reg   [2:0] tmp_7_reg_2625;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state39_pp2_stage0_iter0;
wire    ap_block_state40_pp2_stage0_iter1;
wire    ap_block_state41_pp2_stage0_iter2;
wire    ap_block_state42_pp2_stage0_iter3;
wire    ap_block_state43_pp2_stage0_iter4;
wire    ap_block_state44_pp2_stage0_iter5;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] exitcond_flatten_fu_1111_p2;
reg   [0:0] exitcond_flatten_reg_2630;
reg   [0:0] exitcond_flatten_reg_2630_pp2_iter1_reg;
reg   [0:0] exitcond_flatten_reg_2630_pp2_iter2_reg;
reg   [0:0] exitcond_flatten_reg_2630_pp2_iter3_reg;
reg   [0:0] exitcond_flatten_reg_2630_pp2_iter4_reg;
wire   [2:0] indvar_flatten_next_fu_1117_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] exitcond1_i_fu_1123_p2;
reg   [0:0] exitcond1_i_reg_2639;
wire   [1:0] j_0_i_mid2_fu_1129_p3;
reg   [1:0] j_0_i_mid2_reg_2644;
wire   [2:0] tmp_7_mid1_fu_1159_p2;
reg   [2:0] tmp_7_mid1_reg_2649;
wire   [1:0] i_0_i_mid2_fu_1165_p3;
wire   [1:0] j_fu_1173_p2;
wire   [2:0] tmp_15_t_fu_1187_p2;
reg   [2:0] tmp_15_t_reg_2664;
wire   [0:0] sel_tmp_i_fu_1193_p2;
reg   [0:0] sel_tmp_i_reg_2671;
wire   [0:0] sel_tmp2_i_fu_1199_p2;
reg   [0:0] sel_tmp2_i_reg_2676;
wire   [8:0] min_distance_list_2_fu_1250_p3;
reg   [8:0] min_distance_list_2_reg_2681;
wire   [31:0] min_distance_list_2_3_fu_1258_p1;
reg   [31:0] min_distance_list_2_3_reg_2686;
wire   [0:0] tmp_11_fu_1261_p2;
reg   [0:0] tmp_11_reg_2694;
wire   [0:0] tmp_25_1_fu_1267_p2;
reg   [0:0] tmp_25_1_reg_2700;
wire   [0:0] icmp1_fu_1351_p2;
reg   [0:0] icmp1_reg_2705;
wire   [0:0] sel_tmp7_fu_1369_p2;
reg   [0:0] sel_tmp7_reg_2710;
wire   [31:0] min_distance_list_0_2_fu_1383_p3;
reg   [31:0] min_distance_list_0_2_reg_2715;
reg    ap_enable_reg_pp2_iter4;
wire   [0:0] tmp_31_1_fu_1390_p2;
reg   [0:0] tmp_31_1_reg_2720;
wire   [0:0] sel_tmp13_fu_1408_p2;
reg   [0:0] sel_tmp13_reg_2726;
wire   [31:0] min_distance_list_0_4_fu_1422_p3;
wire   [31:0] min_distance_list_1_3_fu_1429_p3;
wire   [31:0] label_list_2_1_fu_1443_p3;
reg    ap_enable_reg_pp2_iter5;
wire   [31:0] label_list_1_s_fu_1457_p3;
wire   [31:0] label_list_0_2_fu_1464_p3;
wire   [0:0] exitcond1_i1_fu_1571_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state46_pp3_stage0_iter0;
wire    ap_block_state47_pp3_stage0_iter1;
wire    ap_block_state48_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
wire   [1:0] i_2_fu_1577_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [3:0] tmp_26_fu_1595_p1;
reg   [3:0] tmp_26_reg_2905;
reg   [3:0] tmp_26_reg_2905_pp3_iter1_reg;
wire   [31:0] vote_list_0_fu_1654_p2;
reg   [31:0] vote_list_0_reg_2910;
wire    ap_CS_fsm_state49;
wire   [0:0] tmp_30_1_fu_1756_p2;
reg   [0:0] tmp_30_1_reg_2948;
wire    ap_CS_fsm_state50;
wire   [1:0] max_vote_0_i_2_fu_1785_p3;
reg   [1:0] max_vote_0_i_2_reg_2965;
wire    ap_CS_fsm_state51;
wire   [0:0] tmp_30_3_fu_1819_p2;
reg   [0:0] tmp_30_3_reg_2982;
wire   [1:0] max_vote_0_i_3_fu_1825_p3;
reg   [1:0] max_vote_0_i_3_reg_2987;
wire    ap_CS_fsm_state52;
wire   [0:0] sel_tmp5_fu_1837_p2;
reg   [0:0] sel_tmp5_reg_2992;
wire   [0:0] sel_tmp8_fu_1843_p2;
reg   [0:0] sel_tmp8_reg_2997;
wire   [31:0] newSel1_fu_1849_p3;
reg   [31:0] newSel1_reg_3003;
wire    ap_CS_fsm_state53;
wire   [0:0] tmp_30_4_fu_1874_p2;
reg   [0:0] tmp_30_4_reg_3017;
wire   [2:0] max_vote_0_i_4_fu_1883_p3;
reg   [2:0] max_vote_0_i_4_reg_3022;
wire    ap_CS_fsm_state54;
wire   [0:0] sel_tmp10_fu_1890_p2;
reg   [0:0] sel_tmp10_reg_3027;
wire   [0:0] sel_tmp11_fu_1896_p2;
reg   [0:0] sel_tmp11_reg_3032;
wire   [0:0] sel_tmp14_fu_1908_p2;
reg   [0:0] sel_tmp14_reg_3037;
wire   [0:0] or_cond1_fu_1914_p2;
reg   [0:0] or_cond1_reg_3042;
wire   [31:0] newSel4_fu_1920_p3;
reg   [31:0] newSel4_reg_3048;
wire    ap_CS_fsm_state55;
wire   [0:0] tmp_30_5_fu_1956_p2;
reg   [0:0] tmp_30_5_reg_3061;
wire   [2:0] max_vote_0_i_5_fu_1962_p3;
reg   [2:0] max_vote_0_i_5_reg_3066;
wire    ap_CS_fsm_state56;
wire   [0:0] sel_tmp15_fu_1968_p2;
reg   [0:0] sel_tmp15_reg_3071;
wire   [0:0] sel_tmp16_fu_1974_p2;
reg   [0:0] sel_tmp16_reg_3076;
wire   [0:0] sel_tmp17_fu_1980_p2;
reg   [0:0] sel_tmp17_reg_3081;
wire   [0:0] sel_tmp19_fu_1992_p2;
reg   [0:0] sel_tmp19_reg_3086;
wire   [0:0] or_cond4_fu_1998_p2;
reg   [0:0] or_cond4_reg_3091;
wire   [31:0] newSel8_fu_2004_p3;
reg   [31:0] newSel8_reg_3097;
wire    ap_CS_fsm_state57;
wire   [0:0] tmp_30_6_fu_2046_p2;
reg   [0:0] tmp_30_6_reg_3109;
wire   [2:0] max_vote_0_i_6_fu_2052_p3;
reg   [2:0] max_vote_0_i_6_reg_3114;
wire    ap_CS_fsm_state58;
wire   [0:0] sel_tmp20_fu_2058_p2;
reg   [0:0] sel_tmp20_reg_3119;
wire   [0:0] sel_tmp21_fu_2064_p2;
reg   [0:0] sel_tmp21_reg_3124;
wire   [0:0] sel_tmp22_fu_2070_p2;
reg   [0:0] sel_tmp22_reg_3130;
wire   [0:0] sel_tmp23_fu_2076_p2;
reg   [0:0] sel_tmp23_reg_3135;
wire   [0:0] sel_tmp25_fu_2088_p2;
reg   [0:0] sel_tmp25_reg_3140;
wire   [0:0] or_cond7_fu_2094_p2;
reg   [0:0] or_cond7_reg_3145;
wire   [31:0] newSel10_fu_2100_p3;
reg   [31:0] newSel10_reg_3151;
wire    ap_CS_fsm_state59;
wire   [0:0] tmp_30_7_fu_2153_p2;
reg   [0:0] tmp_30_7_reg_3162;
wire   [2:0] max_vote_0_i_7_fu_2159_p3;
reg   [2:0] max_vote_0_i_7_reg_3167;
wire    ap_CS_fsm_state60;
wire   [0:0] sel_tmp27_fu_2171_p2;
reg   [0:0] sel_tmp27_reg_3172;
wire   [0:0] sel_tmp28_fu_2177_p2;
reg   [0:0] sel_tmp28_reg_3177;
wire   [0:0] sel_tmp29_fu_2183_p2;
reg   [0:0] sel_tmp29_reg_3183;
wire   [0:0] sel_tmp30_fu_2189_p2;
reg   [0:0] sel_tmp30_reg_3188;
wire   [0:0] sel_tmp32_fu_2201_p2;
reg   [0:0] sel_tmp32_reg_3193;
wire   [0:0] or_cond11_fu_2207_p2;
reg   [0:0] or_cond11_reg_3198;
wire   [31:0] newSel15_fu_2213_p3;
reg   [31:0] newSel15_reg_3204;
wire   [31:0] newSel17_fu_2219_p3;
reg   [31:0] newSel17_reg_3209;
wire    ap_CS_fsm_state61;
wire   [0:0] tmp_30_8_fu_2272_p2;
reg   [0:0] tmp_30_8_reg_3219;
wire   [3:0] max_vote_0_i_8_fu_2281_p3;
reg   [3:0] max_vote_0_i_8_reg_3224;
wire    ap_CS_fsm_state62;
wire   [0:0] sel_tmp34_fu_2288_p2;
reg   [0:0] sel_tmp34_reg_3230;
wire   [0:0] sel_tmp36_fu_2300_p2;
reg   [0:0] sel_tmp36_reg_3235;
wire   [0:0] sel_tmp37_fu_2306_p2;
reg   [0:0] sel_tmp37_reg_3240;
wire   [0:0] sel_tmp38_fu_2312_p2;
reg   [0:0] sel_tmp38_reg_3245;
wire   [0:0] sel_tmp40_fu_2324_p2;
reg   [0:0] sel_tmp40_reg_3250;
wire   [0:0] or_cond15_fu_2330_p2;
reg   [0:0] or_cond15_reg_3255;
wire   [31:0] newSel21_fu_2336_p3;
reg   [31:0] newSel21_reg_3261;
wire   [0:0] or_cond17_fu_2342_p2;
reg   [0:0] or_cond17_reg_3266;
wire   [31:0] newSel23_fu_2348_p3;
reg   [31:0] newSel23_reg_3272;
wire   [31:0] vote_list_9_9_fu_2414_p3;
reg   [31:0] vote_list_9_9_reg_3277;
wire    ap_CS_fsm_state63;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state26;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
wire    ap_CS_fsm_state38;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state39;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state45;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state46;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg   [9:0] i_reg_312;
reg   [8:0] ap_phi_mux_knn_set_4_load_s_phi_fu_455_p8;
reg   [8:0] ap_phi_mux_knn_set_3_load_s_phi_fu_470_p8;
reg   [8:0] ap_phi_mux_knn_set_2_load_s_phi_fu_410_p8;
reg   [8:0] ap_phi_mux_knn_set_1_load_s_phi_fu_425_p8;
reg   [8:0] ap_phi_mux_knn_set_0_load_s_phi_fu_440_p8;
reg   [8:0] ap_phi_mux_knn_set_5_load3_phi_fu_485_p8;
wire   [8:0] ap_phi_reg_pp1_iter0_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter1_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter2_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter3_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter4_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter5_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter6_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter7_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter8_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter9_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter10_knn_set_2_load_s_reg_406;
reg   [8:0] ap_phi_reg_pp1_iter11_knn_set_2_load_s_reg_406;
wire    ap_block_pp1_stage0;
wire   [8:0] ap_phi_reg_pp1_iter0_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter1_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter2_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter3_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter4_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter5_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter6_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter7_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter8_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter9_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter10_knn_set_1_load_s_reg_421;
reg   [8:0] ap_phi_reg_pp1_iter11_knn_set_1_load_s_reg_421;
wire   [8:0] ap_phi_reg_pp1_iter0_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter1_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter2_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter3_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter4_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter5_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter6_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter7_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter8_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter9_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter10_knn_set_0_load_s_reg_436;
reg   [8:0] ap_phi_reg_pp1_iter11_knn_set_0_load_s_reg_436;
wire   [8:0] ap_phi_reg_pp1_iter0_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter1_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter2_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter3_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter4_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter5_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter6_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter7_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter8_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter9_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter10_knn_set_4_load_s_reg_451;
reg   [8:0] ap_phi_reg_pp1_iter11_knn_set_4_load_s_reg_451;
wire   [8:0] ap_phi_reg_pp1_iter0_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter1_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter2_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter3_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter4_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter5_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter6_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter7_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter8_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter9_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter10_knn_set_3_load_s_reg_466;
reg   [8:0] ap_phi_reg_pp1_iter11_knn_set_3_load_s_reg_466;
wire   [8:0] ap_phi_reg_pp1_iter0_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter1_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter2_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter3_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter4_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter5_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter6_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter7_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter8_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter9_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter10_knn_set_5_load3_reg_481;
reg   [8:0] ap_phi_reg_pp1_iter11_knn_set_5_load3_reg_481;
reg   [31:0] ap_phi_mux_min_distance_list_2_1_phi_fu_551_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_mux_min_distance_list_2_1_8_phi_fu_561_p4;
reg   [31:0] ap_phi_mux_min_distance_list_1_1_phi_fu_571_p4;
wire   [63:0] newIndex1_fu_675_p1;
wire   [63:0] i2_fu_775_p1;
wire   [10:0] dist_ext_cast_fu_921_p1;
wire   [10:0] dist_ext_cast1_fu_912_p1;
wire   [10:0] p_trunc_ext_cast_fu_930_p1;
wire   [10:0] dist_1_ext_cast_fu_1071_p1;
wire   [10:0] dist_1_ext_cast1_fu_1062_p1;
wire   [10:0] p_trunc164_ext_cast_fu_1080_p1;
reg   [31:0] vote_list_9_1_fu_176;
reg   [31:0] vote_list_9_10_fu_180;
reg   [31:0] vote_list_9_11_fu_184;
reg   [31:0] vote_list_9_12_fu_188;
reg   [31:0] vote_list_9_13_fu_192;
reg   [31:0] vote_list_9_14_fu_196;
reg   [31:0] vote_list_9_15_fu_200;
reg   [31:0] vote_list_9_16_fu_204;
reg   [31:0] vote_list_9_17_fu_208;
reg   [31:0] vote_list_9_18_fu_212;
reg   [31:0] vote_list_9_19_fu_216;
wire    ap_block_pp3_stage0;
reg   [31:0] vote_list_9_20_fu_220;
reg   [31:0] vote_list_9_21_fu_224;
reg   [31:0] vote_list_9_22_fu_228;
reg   [31:0] vote_list_9_23_fu_232;
reg   [31:0] vote_list_9_24_fu_236;
reg   [31:0] vote_list_9_25_fu_240;
reg   [31:0] vote_list_9_26_fu_244;
reg   [31:0] vote_list_9_27_fu_248;
reg   [31:0] vote_list_9_fu_252;
wire   [31:0] p_Result_3_fu_2440_p3;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [255:0] p_Result_s_fu_680_p9;
wire   [9:0] tmp_1_fu_661_p2;
wire   [9:0] tmp_14_fu_800_p1;
wire   [0:0] tmp_2_fu_808_p2;
wire   [30:0] knn_set_0_load_cast_fu_804_p1;
wire   [30:0] max_dist_0_0_s_fu_814_p3;
wire   [31:0] extLd1_fu_830_p1;
wire   [31:0] max_dist_0_0_cast_fu_822_p1;
wire   [0:0] tmp_19_0_1_fu_842_p2;
wire   [30:0] knn_set_1_load_cast_fu_838_p1;
wire   [30:0] max_dist_0_1_max_dis_fu_848_p3;
wire   [31:0] extLd_fu_872_p1;
wire   [31:0] max_dist_0_1_max_dis_1_fu_856_p1;
wire   [0:0] tmp_19_0_2_fu_880_p2;
wire   [30:0] extLd_cast_fu_876_p1;
wire   [30:0] max_dist_0_2_max_dis_fu_886_p3;
wire   [1:0] p_cast_fu_860_p1;
wire   [31:0] dist_ext_fu_789_p1;
wire   [31:0] max_dist_0_2_max_dis_1_fu_894_p1;
wire   [9:0] tmp_23_fu_950_p1;
wire   [0:0] tmp_19_1_fu_958_p2;
wire   [30:0] knn_set_3_load_cast_fu_954_p1;
wire   [30:0] max_dist_1_0_s_fu_964_p3;
wire   [31:0] extLd2_fu_980_p1;
wire   [31:0] max_dist_1_0_cast_fu_972_p1;
wire   [0:0] tmp_19_1_1_fu_992_p2;
wire   [30:0] knn_set_4_load_cast_fu_988_p1;
wire   [30:0] max_dist_1_1_max_dis_fu_998_p3;
wire   [31:0] extLd3_fu_1022_p1;
wire   [31:0] max_dist_1_1_max_dis_1_fu_1006_p1;
wire   [0:0] tmp_19_1_2_fu_1030_p2;
wire   [30:0] extLd3_cast_fu_1026_p1;
wire   [30:0] max_dist_1_2_max_dis_fu_1036_p3;
wire   [1:0] p_1_cast_fu_1010_p1;
wire   [31:0] dist_1_ext_fu_939_p1;
wire   [31:0] max_dist_1_2_max_dis_1_fu_1044_p1;
wire   [0:0] tmp_17_fu_1093_p1;
wire   [2:0] p_shl2_fu_1097_p3;
wire   [2:0] i_0_i_cast1_fu_1089_p1;
wire   [1:0] i_s_fu_1137_p2;
wire   [0:0] tmp_18_fu_1147_p1;
wire   [2:0] p_shl2_mid1_fu_1151_p3;
wire   [2:0] i_0_i_cast1_mid1_fu_1143_p1;
wire   [2:0] tmp_7_mid2_fu_1179_p3;
wire   [2:0] tmp_10_fu_1184_p1;
wire   [8:0] sel_tmp1_i_fu_1205_p3;
wire   [0:0] sel_tmp4_i_fu_1219_p2;
wire   [8:0] sel_tmp3_i_fu_1212_p3;
wire   [0:0] sel_tmp6_i_fu_1232_p2;
wire   [8:0] sel_tmp5_i_fu_1224_p3;
wire   [0:0] sel_tmp8_i_fu_1245_p2;
wire   [8:0] sel_tmp7_i_fu_1237_p3;
wire   [0:0] not_tmp_s_fu_1280_p2;
wire   [5:0] phitmp_i_1_cast_cast_fu_1285_p1;
wire   [5:0] pos_fu_1273_p3;
wire   [5:0] pos_1_fu_1289_p3;
wire   [3:0] tmp_20_fu_1305_p4;
wire   [0:0] icmp_fu_1315_p2;
wire   [1:0] tmp_19_fu_1296_p1;
wire   [1:0] phitmp_i_2_fu_1321_p3;
wire   [0:0] tmp_25_2_fu_1300_p2;
wire   [5:0] phitmp_i_2_cast_cast_fu_1329_p1;
wire   [5:0] pos_2_fu_1333_p3;
wire   [4:0] tmp_21_fu_1341_p4;
wire   [0:0] tmp_13_fu_1357_p2;
wire   [0:0] sel_tmp6_fu_1363_p2;
wire   [31:0] min_distance_list_0_1_fu_1375_p3;
wire   [0:0] tmp_35_1_fu_1396_p2;
wire   [0:0] sel_tmp9_fu_1402_p2;
wire   [31:0] min_distance_list_0_3_fu_1414_p3;
wire   [31:0] sel_tmp_fu_1436_p3;
wire   [31:0] sel_tmp2_fu_1450_p3;
wire   [31:0] tmp_6_fu_1583_p5;
wire   [31:0] tmp_8_fu_1629_p12;
wire   [0:0] not_tmp_30_1_fu_1765_p2;
wire   [31:0] vote_list_load_2_2_p_fu_1774_p3;
wire   [0:0] tmp_30_2_fu_1779_p2;
wire   [1:0] max_vote_0_i_1_cast_fu_1770_p1;
wire   [0:0] sel_tmp1_fu_1796_p2;
wire   [0:0] sel_tmp3_fu_1807_p2;
wire   [31:0] vote_list_9_2_fu_1801_p3;
wire   [31:0] vote_list_9_3_fu_1812_p3;
wire   [0:0] sel_tmp4_fu_1831_p2;
wire   [0:0] or_cond_fu_1863_p2;
wire   [31:0] newSel_fu_1858_p3;
wire   [31:0] vote_list_9_4_fu_1867_p3;
wire   [2:0] max_vote_0_i_3_cast_fu_1880_p1;
wire   [0:0] sel_tmp12_fu_1902_p2;
wire   [31:0] newSel3_fu_1929_p3;
wire   [0:0] or_cond2_fu_1934_p2;
wire   [0:0] or_cond3_fu_1944_p2;
wire   [31:0] newSel5_fu_1938_p3;
wire   [31:0] vote_list_9_5_fu_1949_p3;
wire   [0:0] sel_tmp18_fu_1986_p2;
wire   [31:0] newSel7_fu_2013_p3;
wire   [0:0] or_cond5_fu_2018_p2;
wire   [0:0] or_cond6_fu_2033_p2;
wire   [31:0] newSel2_fu_2027_p3;
wire   [31:0] newSel9_fu_2022_p3;
wire   [31:0] vote_list_9_6_fu_2038_p3;
wire   [0:0] sel_tmp24_fu_2082_p2;
wire   [31:0] newSel6_fu_2109_p3;
wire   [0:0] or_cond8_fu_2114_p2;
wire   [0:0] or_cond9_fu_2123_p2;
wire   [31:0] newSel11_fu_2118_p3;
wire   [0:0] or_cond10_fu_2133_p2;
wire   [31:0] newSel12_fu_2127_p3;
wire   [31:0] newSel13_fu_2138_p3;
wire   [31:0] vote_list_9_7_fu_2145_p3;
wire   [0:0] sel_tmp31_fu_2195_p2;
wire   [0:0] sel_tmp26_fu_2165_p2;
wire   [31:0] newSel14_fu_2228_p3;
wire   [0:0] or_cond12_fu_2233_p2;
wire   [0:0] or_cond13_fu_2242_p2;
wire   [31:0] newSel16_fu_2237_p3;
wire   [0:0] or_cond14_fu_2252_p2;
wire   [31:0] newSel18_fu_2246_p3;
wire   [31:0] newSel19_fu_2257_p3;
wire   [31:0] vote_list_9_8_fu_2264_p3;
wire   [3:0] max_vote_0_i_7_cast_fu_2278_p1;
wire   [0:0] sel_tmp39_fu_2318_p2;
wire   [0:0] sel_tmp35_fu_2294_p2;
wire   [0:0] sel_tmp33_fu_2354_p2;
wire   [31:0] newSel20_fu_2359_p3;
wire   [0:0] or_cond16_fu_2364_p2;
wire   [31:0] newSel22_fu_2368_p3;
wire   [0:0] or_cond18_fu_2373_p2;
wire   [0:0] or_cond19_fu_2384_p2;
wire   [31:0] newSel24_fu_2378_p3;
wire   [31:0] newSel25_fu_2389_p3;
wire   [0:0] or_cond20_fu_2395_p2;
wire   [0:0] or_cond21_fu_2408_p2;
wire   [31:0] newSel26_fu_2400_p3;
wire   [0:0] tmp_30_9_fu_2424_p2;
wire   [3:0] max_vote_0_i_9_fu_2429_p3;
wire   [7:0] max_vote_0_i_9_cast_fu_2436_p1;
reg   [45:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 46'd1;
#0 index = 1'd0;
#0 knn_set_0 = 11'd0;
#0 knn_set_1 = 11'd0;
#0 knn_set_2 = 11'd0;
#0 knn_set_3 = 11'd0;
#0 knn_set_4 = 11'd0;
#0 knn_set_5 = 11'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
end

update_knn10_traibkb #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set_V_0_address0),
    .ce0(training_set_V_0_ce0),
    .we0(training_set_V_0_we0),
    .d0(p_Result_s_fu_680_p9),
    .q0(training_set_V_0_q0)
);

update_knn10_traibkb #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set_V_1_address0),
    .ce0(training_set_V_1_ce0),
    .we0(training_set_V_1_we0),
    .d0(p_Result_s_fu_680_p9),
    .q0(training_set_V_1_q0)
);

popcount_knn10 grp_popcount_fu_600(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(p_0_reg_2535),
    .ap_return(grp_popcount_fu_600_ap_return)
);

popcount_knn10 grp_popcount_fu_605(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(p_0_1_reg_2540),
    .ap_return(grp_popcount_fu_605_ap_return)
);

update_knn10_mux_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
update_knn10_mux_dEe_U2(
    .din0(label_list_1_1_reg_538),
    .din1(label_list_2_2_reg_528),
    .din2(label_list_2_s_reg_518),
    .din3(i1_0_i_reg_589),
    .dout(tmp_6_fu_1583_p5)
);

update_knn10_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
update_knn10_mux_eOg_U3(
    .din0(vote_list_9_19_fu_216),
    .din1(vote_list_9_20_fu_220),
    .din2(vote_list_9_21_fu_224),
    .din3(vote_list_9_22_fu_228),
    .din4(vote_list_9_23_fu_232),
    .din5(vote_list_9_24_fu_236),
    .din6(vote_list_9_25_fu_240),
    .din7(vote_list_9_26_fu_244),
    .din8(vote_list_9_27_fu_248),
    .din9(vote_list_9_fu_252),
    .din10(tmp_26_reg_2905),
    .dout(tmp_8_fu_1629_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state26)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp1_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state39) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state39)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state39);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp2_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state46) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state46)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state46);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state64)) | (~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (index_load_reg_2449 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state64)) | ((index_load_reg_2449 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state10)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_0_load_s_reg_436 <= dist_reg_2545;
    end else if ((((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)) | (~(p_s_fu_898_p3 == 2'd1) & ~(p_s_fu_898_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        ap_phi_reg_pp1_iter11_knn_set_0_load_s_reg_436 <= tmp_12_fu_796_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter10_knn_set_0_load_s_reg_436;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_1_load_s_reg_421 <= dist_reg_2545;
    end else if (((~(p_s_fu_898_p3 == 2'd1) & ~(p_s_fu_898_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        ap_phi_reg_pp1_iter11_knn_set_1_load_s_reg_421 <= tmp_15_fu_834_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter10_knn_set_1_load_s_reg_421;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        ap_phi_reg_pp1_iter11_knn_set_2_load_s_reg_406 <= tmp_16_fu_868_p1;
    end else if ((~(p_s_fu_898_p3 == 2'd1) & ~(p_s_fu_898_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_2_load_s_reg_406 <= dist_reg_2545;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter10_knn_set_2_load_s_reg_406;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_3_load_s_reg_466 <= dist_1_reg_2556;
    end else if ((((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)) | (~(p_1_fu_1048_p3 == 2'd1) & ~(p_1_fu_1048_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        ap_phi_reg_pp1_iter11_knn_set_3_load_s_reg_466 <= tmp_22_fu_946_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter10_knn_set_3_load_s_reg_466;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_4_load_s_reg_451 <= dist_1_reg_2556;
    end else if (((~(p_1_fu_1048_p3 == 2'd1) & ~(p_1_fu_1048_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        ap_phi_reg_pp1_iter11_knn_set_4_load_s_reg_451 <= tmp_24_fu_984_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter10_knn_set_4_load_s_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        ap_phi_reg_pp1_iter11_knn_set_5_load3_reg_481 <= tmp_25_fu_1018_p1;
    end else if ((~(p_1_fu_1048_p3 == 2'd1) & ~(p_1_fu_1048_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_5_load3_reg_481 <= dist_1_reg_2556;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_reg_pp1_iter11_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter10_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        i1_0_i_reg_589 <= 2'd0;
    end else if (((exitcond1_i1_fu_1571_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i1_0_i_reg_589 <= i_2_fu_1577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        i3_reg_395 <= 9'd0;
    end else if (((exitcond4_fu_763_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i3_reg_395 <= i_3_fu_769_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_0_i_reg_507 <= 2'd0;
    end else if (((exitcond_flatten_fu_1111_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_0_i_reg_507 <= i_0_i_mid2_fu_1165_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((index_load_load_fu_639_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_312 <= 10'd0;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9))) begin
        i_reg_312 <= i_1_reg_2456;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        indvar_flatten_reg_496 <= 3'd0;
    end else if (((exitcond_flatten_fu_1111_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_reg_496 <= indvar_flatten_next_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        j_0_i_reg_578 <= 2'd0;
    end else if (((exitcond_flatten_fu_1111_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_0_i_reg_578 <= j_fu_1173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
                knn_set_0[8 : 0] <= dist_ext_cast_fu_921_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10))) begin
                knn_set_0[0] <= 1'b0;
        knn_set_0[1] <= 1'b0;
        knn_set_0[2] <= 1'b0;
        knn_set_0[3] <= 1'b0;
        knn_set_0[4] <= 1'b0;
        knn_set_0[5] <= 1'b0;
        knn_set_0[6] <= 1'b0;
        knn_set_0[7] <= 1'b0;
        knn_set_0[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        knn_set_0_load_1_reg_371 <= 9'd256;
    end else if (((exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        knn_set_0_load_1_reg_371 <= ap_phi_mux_knn_set_0_load_s_phi_fu_440_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (p_s_fu_898_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
                knn_set_1[8 : 0] <= dist_ext_cast1_fu_912_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10))) begin
                knn_set_1[0] <= 1'b0;
        knn_set_1[1] <= 1'b0;
        knn_set_1[2] <= 1'b0;
        knn_set_1[3] <= 1'b0;
        knn_set_1[4] <= 1'b0;
        knn_set_1[5] <= 1'b0;
        knn_set_1[6] <= 1'b0;
        knn_set_1[7] <= 1'b0;
        knn_set_1[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        knn_set_1_load_1_reg_359 <= 9'd256;
    end else if (((exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        knn_set_1_load_1_reg_359 <= ap_phi_mux_knn_set_1_load_s_phi_fu_425_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((~(p_s_fu_898_p3 == 2'd1) & ~(p_s_fu_898_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_s_fu_906_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
                knn_set_2[8 : 0] <= p_trunc_ext_cast_fu_930_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10))) begin
                knn_set_2[0] <= 1'b0;
        knn_set_2[1] <= 1'b0;
        knn_set_2[2] <= 1'b0;
        knn_set_2[3] <= 1'b0;
        knn_set_2[4] <= 1'b0;
        knn_set_2[5] <= 1'b0;
        knn_set_2[6] <= 1'b0;
        knn_set_2[7] <= 1'b0;
        knn_set_2[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        knn_set_2_load_1_reg_347 <= 9'd256;
    end else if (((exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        knn_set_2_load_1_reg_347 <= ap_phi_mux_knn_set_2_load_s_phi_fu_410_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
                knn_set_3[8 : 0] <= dist_1_ext_cast_fu_1071_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10))) begin
                knn_set_3[0] <= 1'b0;
        knn_set_3[1] <= 1'b0;
        knn_set_3[2] <= 1'b0;
        knn_set_3[3] <= 1'b0;
        knn_set_3[4] <= 1'b0;
        knn_set_3[5] <= 1'b0;
        knn_set_3[6] <= 1'b0;
        knn_set_3[7] <= 1'b0;
        knn_set_3[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        knn_set_3_load_1_reg_335 <= 9'd256;
    end else if (((exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        knn_set_3_load_1_reg_335 <= ap_phi_mux_knn_set_3_load_s_phi_fu_470_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (p_1_fu_1048_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
                knn_set_4[8 : 0] <= dist_1_ext_cast1_fu_1062_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10))) begin
                knn_set_4[0] <= 1'b0;
        knn_set_4[1] <= 1'b0;
        knn_set_4[2] <= 1'b0;
        knn_set_4[3] <= 1'b0;
        knn_set_4[4] <= 1'b0;
        knn_set_4[5] <= 1'b0;
        knn_set_4[6] <= 1'b0;
        knn_set_4[7] <= 1'b0;
        knn_set_4[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        knn_set_4_load_1_reg_323 <= 9'd256;
    end else if (((exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        knn_set_4_load_1_reg_323 <= ap_phi_mux_knn_set_4_load_s_phi_fu_455_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((~(p_1_fu_1048_p3 == 2'd1) & ~(p_1_fu_1048_p3 == 2'd0) & (exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (tmp_17_1_fu_1056_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
                knn_set_5[8 : 0] <= p_trunc164_ext_cast_fu_1080_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10))) begin
                knn_set_5[0] <= 1'b0;
        knn_set_5[1] <= 1'b0;
        knn_set_5[2] <= 1'b0;
        knn_set_5[3] <= 1'b0;
        knn_set_5[4] <= 1'b0;
        knn_set_5[5] <= 1'b0;
        knn_set_5[6] <= 1'b0;
        knn_set_5[7] <= 1'b0;
        knn_set_5[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        knn_set_5_load_reg_383 <= 9'd256;
    end else if (((exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        knn_set_5_load_reg_383 <= ap_phi_mux_knn_set_5_load3_phi_fu_485_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        label_list_1_1_reg_538 <= reg_610;
    end else if (((exitcond_flatten_reg_2630_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        label_list_1_1_reg_538 <= label_list_0_2_fu_1464_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        label_list_2_2_reg_528 <= tmp_V_27_reg_2495;
    end else if (((exitcond_flatten_reg_2630_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        label_list_2_2_reg_528 <= label_list_1_s_fu_1457_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        label_list_2_s_reg_518 <= tmp_V_26_reg_2490;
    end else if (((exitcond_flatten_reg_2630_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        label_list_2_s_reg_518 <= label_list_2_1_fu_1443_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        min_distance_list_1_1_reg_568 <= tmp_V_25_reg_2485;
    end else if (((exitcond_flatten_reg_2630_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        min_distance_list_1_1_reg_568 <= min_distance_list_1_3_fu_1429_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        min_distance_list_2_1_8_reg_558 <= tmp_V_24_reg_2480;
    end else if (((exitcond_flatten_reg_2630_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        min_distance_list_2_1_8_reg_558 <= min_distance_list_0_4_fu_1422_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        min_distance_list_2_1_reg_548 <= tmp_V_23_reg_2475;
    end else if (((exitcond_flatten_reg_2630_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        min_distance_list_2_1_reg_548 <= min_distance_list_0_2_reg_2715;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_10_fu_180 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_10_fu_180 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd2) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_11_fu_184 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_11_fu_184 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd3) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_12_fu_188 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_12_fu_188 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd4) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_13_fu_192 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_13_fu_192 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd5) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_14_fu_196 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_14_fu_196 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd6) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_15_fu_200 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_15_fu_200 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd7) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_16_fu_204 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_16_fu_204 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd8) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_17_fu_208 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_17_fu_208 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_26_reg_2905_pp3_iter1_reg == 4'd8) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd7) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd6) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd5) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd4) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd3) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd2) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd1) & ~(tmp_26_reg_2905_pp3_iter1_reg == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_18_fu_212 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_18_fu_212 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_19_fu_216 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_19_fu_216 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905_pp3_iter1_reg == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        vote_list_9_1_fu_176 <= vote_list_0_reg_2910;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_1_fu_176 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_20_fu_220 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_20_fu_220 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd2) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_21_fu_224 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_21_fu_224 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd3) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_22_fu_228 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_22_fu_228 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd4) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_23_fu_232 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_23_fu_232 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd5) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_24_fu_236 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_24_fu_236 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd6) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_25_fu_240 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_25_fu_240 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd7) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_26_fu_244 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_26_fu_244 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_reg_2905 == 4'd8) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_27_fu_248 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_27_fu_248 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_26_reg_2905 == 4'd8) & ~(tmp_26_reg_2905 == 4'd7) & ~(tmp_26_reg_2905 == 4'd6) & ~(tmp_26_reg_2905 == 4'd5) & ~(tmp_26_reg_2905 == 4'd4) & ~(tmp_26_reg_2905 == 4'd3) & ~(tmp_26_reg_2905 == 4'd2) & ~(tmp_26_reg_2905 == 4'd1) & ~(tmp_26_reg_2905 == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        vote_list_9_fu_252 <= vote_list_0_fu_1654_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        vote_list_9_fu_252 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        ap_phi_reg_pp1_iter10_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter9_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter10_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter9_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter10_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter9_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter10_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter9_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter10_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter9_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter10_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter9_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter1_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter0_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter1_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter0_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter1_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter0_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter1_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter0_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter1_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter0_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter1_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter0_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter2_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter1_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter2_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter1_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter2_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter1_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter2_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter1_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter2_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter1_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter2_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter1_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter2_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter3_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter2_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter3_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter2_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter3_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter2_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter3_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter2_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter3_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter2_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_reg_pp1_iter4_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter3_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter4_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter3_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter4_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter3_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter4_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter3_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter4_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter3_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter4_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter3_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_reg_pp1_iter5_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter4_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter5_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter4_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter5_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter4_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter5_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter4_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter5_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter4_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter5_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter4_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_reg_pp1_iter6_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter5_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter6_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter5_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter6_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter5_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter6_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter5_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter6_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter5_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter6_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter5_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        ap_phi_reg_pp1_iter7_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter6_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter7_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter6_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter7_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter6_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter7_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter6_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter7_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter6_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter7_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter6_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        ap_phi_reg_pp1_iter8_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter7_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter8_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter7_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter8_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter7_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter8_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter7_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter8_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter7_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter8_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter7_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
        ap_phi_reg_pp1_iter9_knn_set_0_load_s_reg_436 <= ap_phi_reg_pp1_iter8_knn_set_0_load_s_reg_436;
        ap_phi_reg_pp1_iter9_knn_set_1_load_s_reg_421 <= ap_phi_reg_pp1_iter8_knn_set_1_load_s_reg_421;
        ap_phi_reg_pp1_iter9_knn_set_2_load_s_reg_406 <= ap_phi_reg_pp1_iter8_knn_set_2_load_s_reg_406;
        ap_phi_reg_pp1_iter9_knn_set_3_load_s_reg_466 <= ap_phi_reg_pp1_iter8_knn_set_3_load_s_reg_466;
        ap_phi_reg_pp1_iter9_knn_set_4_load_s_reg_451 <= ap_phi_reg_pp1_iter8_knn_set_4_load_s_reg_451;
        ap_phi_reg_pp1_iter9_knn_set_5_load3_reg_481 <= ap_phi_reg_pp1_iter8_knn_set_5_load3_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter8_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        dist_1_reg_2556 <= grp_popcount_fu_605_ap_return;
        dist_reg_2545 <= grp_popcount_fu_600_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1111_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond1_i_reg_2639 <= exitcond1_i_fu_1123_p2;
        j_0_i_mid2_reg_2644 <= j_0_i_mid2_fu_1129_p3;
        tmp_7_mid1_reg_2649 <= tmp_7_mid1_fu_1159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond4_reg_2506 <= exitcond4_fu_763_p2;
        exitcond4_reg_2506_pp1_iter1_reg <= exitcond4_reg_2506;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond4_reg_2506_pp1_iter10_reg <= exitcond4_reg_2506_pp1_iter9_reg;
        exitcond4_reg_2506_pp1_iter2_reg <= exitcond4_reg_2506_pp1_iter1_reg;
        exitcond4_reg_2506_pp1_iter3_reg <= exitcond4_reg_2506_pp1_iter2_reg;
        exitcond4_reg_2506_pp1_iter4_reg <= exitcond4_reg_2506_pp1_iter3_reg;
        exitcond4_reg_2506_pp1_iter5_reg <= exitcond4_reg_2506_pp1_iter4_reg;
        exitcond4_reg_2506_pp1_iter6_reg <= exitcond4_reg_2506_pp1_iter5_reg;
        exitcond4_reg_2506_pp1_iter7_reg <= exitcond4_reg_2506_pp1_iter6_reg;
        exitcond4_reg_2506_pp1_iter8_reg <= exitcond4_reg_2506_pp1_iter7_reg;
        exitcond4_reg_2506_pp1_iter9_reg <= exitcond4_reg_2506_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_flatten_reg_2630 <= exitcond_flatten_fu_1111_p2;
        exitcond_flatten_reg_2630_pp2_iter1_reg <= exitcond_flatten_reg_2630;
        tmp_7_reg_2625 <= tmp_7_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond_flatten_reg_2630_pp2_iter2_reg <= exitcond_flatten_reg_2630_pp2_iter1_reg;
        exitcond_flatten_reg_2630_pp2_iter3_reg <= exitcond_flatten_reg_2630_pp2_iter2_reg;
        exitcond_flatten_reg_2630_pp2_iter4_reg <= exitcond_flatten_reg_2630_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_643_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_2456 <= i_1_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2630_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp1_reg_2705 <= icmp1_fu_1351_p2;
        sel_tmp13_reg_2726 <= sel_tmp13_fu_1408_p2;
        sel_tmp7_reg_2710 <= sel_tmp7_fu_1369_p2;
        tmp_31_1_reg_2720 <= tmp_31_1_fu_1390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (index_load_reg_2449 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        index <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        index_load_reg_2449 <= index;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        max_vote_0_i_2_reg_2965 <= max_vote_0_i_2_fu_1785_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        max_vote_0_i_3_reg_2987 <= max_vote_0_i_3_fu_1825_p3;
        newSel1_reg_3003 <= newSel1_fu_1849_p3;
        sel_tmp5_reg_2992 <= sel_tmp5_fu_1837_p2;
        sel_tmp8_reg_2997 <= sel_tmp8_fu_1843_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        max_vote_0_i_4_reg_3022 <= max_vote_0_i_4_fu_1883_p3;
        newSel4_reg_3048 <= newSel4_fu_1920_p3;
        or_cond1_reg_3042 <= or_cond1_fu_1914_p2;
        sel_tmp10_reg_3027 <= sel_tmp10_fu_1890_p2;
        sel_tmp11_reg_3032 <= sel_tmp11_fu_1896_p2;
        sel_tmp14_reg_3037 <= sel_tmp14_fu_1908_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        max_vote_0_i_5_reg_3066 <= max_vote_0_i_5_fu_1962_p3;
        newSel8_reg_3097 <= newSel8_fu_2004_p3;
        or_cond4_reg_3091 <= or_cond4_fu_1998_p2;
        sel_tmp15_reg_3071 <= sel_tmp15_fu_1968_p2;
        sel_tmp16_reg_3076 <= sel_tmp16_fu_1974_p2;
        sel_tmp17_reg_3081 <= sel_tmp17_fu_1980_p2;
        sel_tmp19_reg_3086 <= sel_tmp19_fu_1992_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        max_vote_0_i_6_reg_3114 <= max_vote_0_i_6_fu_2052_p3;
        newSel10_reg_3151 <= newSel10_fu_2100_p3;
        or_cond7_reg_3145 <= or_cond7_fu_2094_p2;
        sel_tmp20_reg_3119 <= sel_tmp20_fu_2058_p2;
        sel_tmp21_reg_3124 <= sel_tmp21_fu_2064_p2;
        sel_tmp22_reg_3130 <= sel_tmp22_fu_2070_p2;
        sel_tmp23_reg_3135 <= sel_tmp23_fu_2076_p2;
        sel_tmp25_reg_3140 <= sel_tmp25_fu_2088_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        max_vote_0_i_7_reg_3167 <= max_vote_0_i_7_fu_2159_p3;
        newSel15_reg_3204 <= newSel15_fu_2213_p3;
        newSel17_reg_3209 <= newSel17_fu_2219_p3;
        or_cond11_reg_3198 <= or_cond11_fu_2207_p2;
        sel_tmp27_reg_3172 <= sel_tmp27_fu_2171_p2;
        sel_tmp28_reg_3177 <= sel_tmp28_fu_2177_p2;
        sel_tmp29_reg_3183 <= sel_tmp29_fu_2183_p2;
        sel_tmp30_reg_3188 <= sel_tmp30_fu_2189_p2;
        sel_tmp32_reg_3193 <= sel_tmp32_fu_2201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        max_vote_0_i_8_reg_3224 <= max_vote_0_i_8_fu_2281_p3;
        newSel21_reg_3261 <= newSel21_fu_2336_p3;
        newSel23_reg_3272 <= newSel23_fu_2348_p3;
        or_cond15_reg_3255 <= or_cond15_fu_2330_p2;
        or_cond17_reg_3266 <= or_cond17_fu_2342_p2;
        sel_tmp34_reg_3230 <= sel_tmp34_fu_2288_p2;
        sel_tmp36_reg_3235 <= sel_tmp36_fu_2300_p2;
        sel_tmp37_reg_3240 <= sel_tmp37_fu_2306_p2;
        sel_tmp38_reg_3245 <= sel_tmp38_fu_2312_p2;
        sel_tmp40_reg_3250 <= sel_tmp40_fu_2324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2630_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        min_distance_list_0_2_reg_2715 <= min_distance_list_0_2_fu_1383_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2630_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        min_distance_list_2_3_reg_2686[8 : 0] <= min_distance_list_2_3_fu_1258_p1[8 : 0];
        tmp_11_reg_2694 <= tmp_11_fu_1261_p2;
        tmp_25_1_reg_2700 <= tmp_25_1_fu_1267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2630_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        min_distance_list_2_reg_2681 <= min_distance_list_2_fu_1250_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_643_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        newIndex_reg_2465 <= newIndex_fu_667_p3;
        tmp_4_reg_2461 <= tmp_4_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_0_1_reg_2540 <= p_0_1_fu_785_p2;
        p_0_reg_2535 <= p_0_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
        p_Result_1_reg_2500 <= p_Result_1_fu_744_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25)) | (~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10)) | (~((exitcond1_fu_643_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_610 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_615 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_619 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_623 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)))) begin
        reg_627 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state15)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_631 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_635 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2630 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        sel_tmp2_i_reg_2676 <= sel_tmp2_i_fu_1199_p2;
        sel_tmp_i_reg_2671 <= sel_tmp_i_fu_1193_p2;
        tmp_15_t_reg_2664 <= tmp_15_t_fu_1187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506_pp1_iter9_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_12_reg_2567 <= tmp_12_fu_796_p1;
        tmp_15_reg_2574 <= tmp_15_fu_834_p1;
        tmp_16_reg_2581 <= tmp_16_fu_868_p1;
        tmp_17_1_reg_2621 <= tmp_17_1_fu_1056_p2;
        tmp_22_reg_2596 <= tmp_22_fu_946_p1;
        tmp_24_reg_2603 <= tmp_24_fu_984_p1;
        tmp_25_reg_2610 <= tmp_25_fu_1018_p1;
        tmp_s_reg_2592 <= tmp_s_fu_906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i1_fu_1571_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_26_reg_2905 <= tmp_26_fu_1595_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_26_reg_2905_pp3_iter1_reg <= tmp_26_reg_2905;
        vote_list_0_reg_2910 <= vote_list_0_fu_1654_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_30_1_reg_2948 <= tmp_30_1_fu_1756_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_30_3_reg_2982 <= tmp_30_3_fu_1819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_30_4_reg_3017 <= tmp_30_4_fu_1874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        tmp_30_5_reg_3061 <= tmp_30_5_fu_1956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        tmp_30_6_reg_3109 <= tmp_30_6_fu_2046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        tmp_30_7_reg_3162 <= tmp_30_7_fu_2153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        tmp_30_8_reg_3219 <= tmp_30_8_fu_2272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state17))) begin
        tmp_V_15_reg_2470 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state19))) begin
        tmp_V_23_reg_2475 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
        tmp_V_24_reg_2480 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state21))) begin
        tmp_V_25_reg_2485 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_V_26_reg_2490 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state24))) begin
        tmp_V_27_reg_2495 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_2506 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        training_set_V_0_loa_reg_2525 <= training_set_V_0_q0;
        training_set_V_1_loa_reg_2530 <= training_set_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        vote_list_9_9_reg_3277 <= vote_list_9_9_fu_2414_p3;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state24)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state22)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state15)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state11)) | (~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3)) | (~((exitcond1_fu_643_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((exitcond1_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        Output_1_V_V = p_Result_3_fu_2440_p3;
    end else if (((index_load_reg_2449 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state10))) begin
        Output_1_V_V = 32'd2001;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state64)) | ((index_load_reg_2449 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state10)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | ((index_load_reg_2449 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond4_fu_763_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1111_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_i1_fu_1571_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_s_reg_2592 == 1'd0) & (exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_0_load_s_phi_fu_440_p8 = tmp_12_reg_2567;
    end else begin
        ap_phi_mux_knn_set_0_load_s_phi_fu_440_p8 = ap_phi_reg_pp1_iter11_knn_set_0_load_s_reg_436;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_s_reg_2592 == 1'd0) & (exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_1_load_s_phi_fu_425_p8 = tmp_15_reg_2574;
    end else begin
        ap_phi_mux_knn_set_1_load_s_phi_fu_425_p8 = ap_phi_reg_pp1_iter11_knn_set_1_load_s_reg_421;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_s_reg_2592 == 1'd0) & (exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_2_load_s_phi_fu_410_p8 = tmp_16_reg_2581;
    end else begin
        ap_phi_mux_knn_set_2_load_s_phi_fu_410_p8 = ap_phi_reg_pp1_iter11_knn_set_2_load_s_reg_406;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_17_1_reg_2621 == 1'd0) & (exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_3_load_s_phi_fu_470_p8 = tmp_22_reg_2596;
    end else begin
        ap_phi_mux_knn_set_3_load_s_phi_fu_470_p8 = ap_phi_reg_pp1_iter11_knn_set_3_load_s_reg_466;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_17_1_reg_2621 == 1'd0) & (exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_4_load_s_phi_fu_455_p8 = tmp_24_reg_2603;
    end else begin
        ap_phi_mux_knn_set_4_load_s_phi_fu_455_p8 = ap_phi_reg_pp1_iter11_knn_set_4_load_s_reg_451;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_17_1_reg_2621 == 1'd0) & (exitcond4_reg_2506_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_5_load3_phi_fu_485_p8 = tmp_25_reg_2610;
    end else begin
        ap_phi_mux_knn_set_5_load3_phi_fu_485_p8 = ap_phi_reg_pp1_iter11_knn_set_5_load3_reg_481;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2630_pp2_iter3_reg == 1'd0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_min_distance_list_1_1_phi_fu_571_p4 = min_distance_list_1_3_fu_1429_p3;
    end else begin
        ap_phi_mux_min_distance_list_1_1_phi_fu_571_p4 = min_distance_list_1_1_reg_568;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2630_pp2_iter3_reg == 1'd0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_min_distance_list_2_1_8_phi_fu_561_p4 = min_distance_list_0_4_fu_1422_p3;
    end else begin
        ap_phi_mux_min_distance_list_2_1_8_phi_fu_561_p4 = min_distance_list_2_1_8_reg_558;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2630_pp2_iter4_reg == 1'd0) & (ap_enable_reg_pp2_iter5 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_min_distance_list_2_1_phi_fu_551_p4 = min_distance_list_0_2_reg_2715;
    end else begin
        ap_phi_mux_min_distance_list_2_1_phi_fu_551_p4 = min_distance_list_2_1_reg_548;
    end
end

always @ (*) begin
    if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        training_set_V_0_address0 = i2_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        training_set_V_0_address0 = newIndex1_fu_675_p1;
    end else begin
        training_set_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9)))) begin
        training_set_V_0_ce0 = 1'b1;
    end else begin
        training_set_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (tmp_4_reg_2461 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        training_set_V_0_we0 = 1'b1;
    end else begin
        training_set_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        training_set_V_1_address0 = i2_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        training_set_V_1_address0 = newIndex1_fu_675_p1;
    end else begin
        training_set_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9)))) begin
        training_set_V_1_ce0 = 1'b1;
    end else begin
        training_set_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_4_reg_2461 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9))) begin
        training_set_V_1_we0 = 1'b1;
    end else begin
        training_set_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((index_load_load_fu_639_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (index_load_load_fu_639_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond1_fu_643_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond1_fu_643_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_643_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((1'b1 == ap_block_state10_io) | (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond4_fu_763_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond4_fu_763_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten_fu_1111_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten_fu_1111_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond1_i1_fu_1571_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond1_i1_fu_1571_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_io = ((index_load_reg_2449 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((exitcond1_fu_643_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

assign ap_block_state26_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_knn_set_0_load_s_reg_436 = 'bx;

assign ap_phi_reg_pp1_iter0_knn_set_1_load_s_reg_421 = 'bx;

assign ap_phi_reg_pp1_iter0_knn_set_2_load_s_reg_406 = 'bx;

assign ap_phi_reg_pp1_iter0_knn_set_3_load_s_reg_466 = 'bx;

assign ap_phi_reg_pp1_iter0_knn_set_4_load_s_reg_451 = 'bx;

assign ap_phi_reg_pp1_iter0_knn_set_5_load3_reg_481 = 'bx;

assign dist_1_ext_cast1_fu_1062_p1 = dist_1_reg_2556;

assign dist_1_ext_cast_fu_1071_p1 = dist_1_reg_2556;

assign dist_1_ext_fu_939_p1 = dist_1_reg_2556;

assign dist_ext_cast1_fu_912_p1 = dist_reg_2545;

assign dist_ext_cast_fu_921_p1 = dist_reg_2545;

assign dist_ext_fu_789_p1 = dist_reg_2545;

assign exitcond1_fu_643_p2 = ((i_reg_312 == 10'd900) ? 1'b1 : 1'b0);

assign exitcond1_i1_fu_1571_p2 = ((i1_0_i_reg_589 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond1_i_fu_1123_p2 = ((j_0_i_reg_578 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond4_fu_763_p2 = ((i3_reg_395 == 9'd450) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1111_p2 = ((indvar_flatten_reg_496 == 3'd6) ? 1'b1 : 1'b0);

assign extLd1_fu_830_p1 = knn_set_1;

assign extLd2_fu_980_p1 = knn_set_4;

assign extLd3_cast_fu_1026_p1 = knn_set_5;

assign extLd3_fu_1022_p1 = knn_set_5;

assign extLd_cast_fu_876_p1 = knn_set_2;

assign extLd_fu_872_p1 = knn_set_2;

assign i2_fu_775_p1 = i3_reg_395;

assign i_0_i_cast1_fu_1089_p1 = i_0_i_reg_507;

assign i_0_i_cast1_mid1_fu_1143_p1 = i_s_fu_1137_p2;

assign i_0_i_mid2_fu_1165_p3 = ((exitcond1_i_fu_1123_p2[0:0] === 1'b1) ? i_s_fu_1137_p2 : i_0_i_reg_507);

assign i_1_fu_649_p2 = (i_reg_312 + 10'd1);

assign i_2_fu_1577_p2 = (i1_0_i_reg_589 + 2'd1);

assign i_3_fu_769_p2 = (i3_reg_395 + 9'd1);

assign i_s_fu_1137_p2 = (2'd1 + i_0_i_reg_507);

assign icmp1_fu_1351_p2 = ((tmp_21_fu_1341_p4 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1315_p2 = ((tmp_20_fu_1305_p4 != 4'd0) ? 1'b1 : 1'b0);

assign index_load_load_fu_639_p1 = index;

assign indvar_flatten_next_fu_1117_p2 = (3'd1 + indvar_flatten_reg_496);

assign j_0_i_mid2_fu_1129_p3 = ((exitcond1_i_fu_1123_p2[0:0] === 1'b1) ? 2'd0 : j_0_i_reg_578);

assign j_fu_1173_p2 = (2'd1 + j_0_i_mid2_fu_1129_p3);

assign knn_set_0_load_cast_fu_804_p1 = knn_set_0;

assign knn_set_1_load_cast_fu_838_p1 = knn_set_1;

assign knn_set_3_load_cast_fu_954_p1 = knn_set_3;

assign knn_set_4_load_cast_fu_988_p1 = knn_set_4;

assign label_list_0_2_fu_1464_p3 = ((tmp_31_1_reg_2720[0:0] === 1'b1) ? 32'd9 : label_list_1_1_reg_538);

assign label_list_1_s_fu_1457_p3 = ((sel_tmp13_reg_2726[0:0] === 1'b1) ? 32'd9 : sel_tmp2_fu_1450_p3);

assign label_list_2_1_fu_1443_p3 = ((sel_tmp7_reg_2710[0:0] === 1'b1) ? 32'd9 : sel_tmp_fu_1436_p3);

assign max_dist_0_0_cast_fu_822_p1 = max_dist_0_0_s_fu_814_p3;

assign max_dist_0_0_s_fu_814_p3 = ((tmp_2_fu_808_p2[0:0] === 1'b1) ? knn_set_0_load_cast_fu_804_p1 : 31'd0);

assign max_dist_0_1_max_dis_1_fu_856_p1 = max_dist_0_1_max_dis_fu_848_p3;

assign max_dist_0_1_max_dis_fu_848_p3 = ((tmp_19_0_1_fu_842_p2[0:0] === 1'b1) ? knn_set_1_load_cast_fu_838_p1 : max_dist_0_0_s_fu_814_p3);

assign max_dist_0_2_max_dis_1_fu_894_p1 = max_dist_0_2_max_dis_fu_886_p3;

assign max_dist_0_2_max_dis_fu_886_p3 = ((tmp_19_0_2_fu_880_p2[0:0] === 1'b1) ? extLd_cast_fu_876_p1 : max_dist_0_1_max_dis_fu_848_p3);

assign max_dist_1_0_cast_fu_972_p1 = max_dist_1_0_s_fu_964_p3;

assign max_dist_1_0_s_fu_964_p3 = ((tmp_19_1_fu_958_p2[0:0] === 1'b1) ? knn_set_3_load_cast_fu_954_p1 : 31'd0);

assign max_dist_1_1_max_dis_1_fu_1006_p1 = max_dist_1_1_max_dis_fu_998_p3;

assign max_dist_1_1_max_dis_fu_998_p3 = ((tmp_19_1_1_fu_992_p2[0:0] === 1'b1) ? knn_set_4_load_cast_fu_988_p1 : max_dist_1_0_s_fu_964_p3);

assign max_dist_1_2_max_dis_1_fu_1044_p1 = max_dist_1_2_max_dis_fu_1036_p3;

assign max_dist_1_2_max_dis_fu_1036_p3 = ((tmp_19_1_2_fu_1030_p2[0:0] === 1'b1) ? extLd3_cast_fu_1026_p1 : max_dist_1_1_max_dis_fu_998_p3);

assign max_vote_0_i_1_cast_fu_1770_p1 = not_tmp_30_1_fu_1765_p2;

assign max_vote_0_i_2_fu_1785_p3 = ((tmp_30_2_fu_1779_p2[0:0] === 1'b1) ? max_vote_0_i_1_cast_fu_1770_p1 : 2'd2);

assign max_vote_0_i_3_cast_fu_1880_p1 = max_vote_0_i_3_reg_2987;

assign max_vote_0_i_3_fu_1825_p3 = ((tmp_30_3_reg_2982[0:0] === 1'b1) ? max_vote_0_i_2_reg_2965 : 2'd3);

assign max_vote_0_i_4_fu_1883_p3 = ((tmp_30_4_reg_3017[0:0] === 1'b1) ? max_vote_0_i_3_cast_fu_1880_p1 : 3'd4);

assign max_vote_0_i_5_fu_1962_p3 = ((tmp_30_5_reg_3061[0:0] === 1'b1) ? max_vote_0_i_4_reg_3022 : 3'd5);

assign max_vote_0_i_6_fu_2052_p3 = ((tmp_30_6_reg_3109[0:0] === 1'b1) ? max_vote_0_i_5_reg_3066 : 3'd6);

assign max_vote_0_i_7_cast_fu_2278_p1 = max_vote_0_i_7_reg_3167;

assign max_vote_0_i_7_fu_2159_p3 = ((tmp_30_7_reg_3162[0:0] === 1'b1) ? max_vote_0_i_6_reg_3114 : 3'd7);

assign max_vote_0_i_8_fu_2281_p3 = ((tmp_30_8_reg_3219[0:0] === 1'b1) ? max_vote_0_i_7_cast_fu_2278_p1 : 4'd8);

assign max_vote_0_i_9_cast_fu_2436_p1 = max_vote_0_i_9_fu_2429_p3;

assign max_vote_0_i_9_fu_2429_p3 = ((tmp_30_9_fu_2424_p2[0:0] === 1'b1) ? max_vote_0_i_8_reg_3224 : 4'd9);

assign min_distance_list_0_1_fu_1375_p3 = ((icmp1_fu_1351_p2[0:0] === 1'b1) ? min_distance_list_2_1_8_reg_558 : ap_phi_mux_min_distance_list_2_1_phi_fu_551_p4);

assign min_distance_list_0_2_fu_1383_p3 = ((sel_tmp7_fu_1369_p2[0:0] === 1'b1) ? min_distance_list_2_3_reg_2686 : min_distance_list_0_1_fu_1375_p3);

assign min_distance_list_0_3_fu_1414_p3 = ((tmp_31_1_fu_1390_p2[0:0] === 1'b1) ? min_distance_list_1_1_reg_568 : min_distance_list_2_1_8_reg_558);

assign min_distance_list_0_4_fu_1422_p3 = ((sel_tmp13_fu_1408_p2[0:0] === 1'b1) ? min_distance_list_2_3_reg_2686 : min_distance_list_0_3_fu_1414_p3);

assign min_distance_list_1_3_fu_1429_p3 = ((tmp_31_1_fu_1390_p2[0:0] === 1'b1) ? min_distance_list_2_3_reg_2686 : min_distance_list_1_1_reg_568);

assign min_distance_list_2_3_fu_1258_p1 = min_distance_list_2_reg_2681;

assign min_distance_list_2_fu_1250_p3 = ((sel_tmp8_i_fu_1245_p2[0:0] === 1'b1) ? knn_set_4_load_1_reg_323 : sel_tmp7_i_fu_1237_p3);

assign newIndex1_fu_675_p1 = newIndex_reg_2465;

assign newIndex_fu_667_p3 = ((tmp_4_fu_655_p2[0:0] === 1'b1) ? i_reg_312 : tmp_1_fu_661_p2);

assign newSel10_fu_2100_p3 = ((sel_tmp23_fu_2076_p2[0:0] === 1'b1) ? vote_list_9_13_fu_192 : vote_list_9_12_fu_188);

assign newSel11_fu_2118_p3 = ((sel_tmp21_reg_3124[0:0] === 1'b1) ? vote_list_9_11_fu_184 : vote_list_9_10_fu_180);

assign newSel12_fu_2127_p3 = ((or_cond7_reg_3145[0:0] === 1'b1) ? newSel6_fu_2109_p3 : newSel10_reg_3151);

assign newSel13_fu_2138_p3 = ((or_cond9_fu_2123_p2[0:0] === 1'b1) ? newSel11_fu_2118_p3 : vote_list_9_15_fu_200);

assign newSel14_fu_2228_p3 = ((sel_tmp32_reg_3193[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_15_fu_200);

assign newSel15_fu_2213_p3 = ((sel_tmp30_fu_2189_p2[0:0] === 1'b1) ? vote_list_9_14_fu_196 : vote_list_9_13_fu_192);

assign newSel16_fu_2237_p3 = ((sel_tmp28_reg_3177[0:0] === 1'b1) ? vote_list_9_12_fu_188 : vote_list_9_11_fu_184);

assign newSel17_fu_2219_p3 = ((sel_tmp26_fu_2165_p2[0:0] === 1'b1) ? vote_list_9_10_fu_180 : vote_list_9_16_fu_204);

assign newSel18_fu_2246_p3 = ((or_cond11_reg_3198[0:0] === 1'b1) ? newSel14_fu_2228_p3 : newSel15_reg_3204);

assign newSel19_fu_2257_p3 = ((or_cond13_fu_2242_p2[0:0] === 1'b1) ? newSel16_fu_2237_p3 : newSel17_reg_3209);

assign newSel1_fu_1849_p3 = ((sel_tmp4_fu_1831_p2[0:0] === 1'b1) ? vote_list_9_10_fu_180 : vote_list_9_12_fu_188);

assign newSel20_fu_2359_p3 = ((sel_tmp40_reg_3250[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_16_fu_204);

assign newSel21_fu_2336_p3 = ((sel_tmp38_fu_2312_p2[0:0] === 1'b1) ? vote_list_9_15_fu_200 : vote_list_9_14_fu_196);

assign newSel22_fu_2368_p3 = ((sel_tmp36_reg_3235[0:0] === 1'b1) ? vote_list_9_13_fu_192 : vote_list_9_12_fu_188);

assign newSel23_fu_2348_p3 = ((sel_tmp34_fu_2288_p2[0:0] === 1'b1) ? vote_list_9_11_fu_184 : vote_list_9_10_fu_180);

assign newSel24_fu_2378_p3 = ((or_cond15_reg_3255[0:0] === 1'b1) ? newSel20_fu_2359_p3 : newSel21_reg_3261);

assign newSel25_fu_2389_p3 = ((or_cond17_reg_3266[0:0] === 1'b1) ? newSel22_fu_2368_p3 : newSel23_reg_3272);

assign newSel26_fu_2400_p3 = ((or_cond19_fu_2384_p2[0:0] === 1'b1) ? newSel24_fu_2378_p3 : newSel25_fu_2389_p3);

assign newSel2_fu_2027_p3 = ((or_cond4_reg_3091[0:0] === 1'b1) ? newSel7_fu_2013_p3 : newSel8_reg_3097);

assign newSel3_fu_1929_p3 = ((sel_tmp14_reg_3037[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_12_fu_188);

assign newSel4_fu_1920_p3 = ((sel_tmp11_fu_1896_p2[0:0] === 1'b1) ? vote_list_9_11_fu_184 : vote_list_9_10_fu_180);

assign newSel5_fu_1938_p3 = ((or_cond1_reg_3042[0:0] === 1'b1) ? newSel3_fu_1929_p3 : newSel4_reg_3048);

assign newSel6_fu_2109_p3 = ((sel_tmp25_reg_3140[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_14_fu_196);

assign newSel7_fu_2013_p3 = ((sel_tmp19_reg_3086[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_13_fu_192);

assign newSel8_fu_2004_p3 = ((sel_tmp17_fu_1980_p2[0:0] === 1'b1) ? vote_list_9_12_fu_188 : vote_list_9_11_fu_184);

assign newSel9_fu_2022_p3 = ((sel_tmp15_reg_3071[0:0] === 1'b1) ? vote_list_9_10_fu_180 : vote_list_9_14_fu_196);

assign newSel_fu_1858_p3 = ((sel_tmp8_reg_2997[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_11_fu_184);

assign not_tmp_30_1_fu_1765_p2 = (tmp_30_1_reg_2948 ^ 1'd1);

assign not_tmp_s_fu_1280_p2 = (tmp_11_reg_2694 ^ 1'd1);

assign or_cond10_fu_2133_p2 = (or_cond8_fu_2114_p2 | or_cond7_reg_3145);

assign or_cond11_fu_2207_p2 = (sel_tmp32_fu_2201_p2 | sel_tmp31_fu_2195_p2);

assign or_cond12_fu_2233_p2 = (sel_tmp30_reg_3188 | sel_tmp29_reg_3183);

assign or_cond13_fu_2242_p2 = (sel_tmp28_reg_3177 | sel_tmp27_reg_3172);

assign or_cond14_fu_2252_p2 = (or_cond12_fu_2233_p2 | or_cond11_reg_3198);

assign or_cond15_fu_2330_p2 = (sel_tmp40_fu_2324_p2 | sel_tmp39_fu_2318_p2);

assign or_cond16_fu_2364_p2 = (sel_tmp38_reg_3245 | sel_tmp37_reg_3240);

assign or_cond17_fu_2342_p2 = (sel_tmp36_fu_2300_p2 | sel_tmp35_fu_2294_p2);

assign or_cond18_fu_2373_p2 = (sel_tmp34_reg_3230 | sel_tmp33_fu_2354_p2);

assign or_cond19_fu_2384_p2 = (or_cond16_fu_2364_p2 | or_cond15_reg_3255);

assign or_cond1_fu_1914_p2 = (sel_tmp14_fu_1908_p2 | sel_tmp12_fu_1902_p2);

assign or_cond20_fu_2395_p2 = (or_cond18_fu_2373_p2 | or_cond17_reg_3266);

assign or_cond21_fu_2408_p2 = (or_cond20_fu_2395_p2 | or_cond19_fu_2384_p2);

assign or_cond2_fu_1934_p2 = (sel_tmp11_reg_3032 | sel_tmp10_reg_3027);

assign or_cond3_fu_1944_p2 = (or_cond2_fu_1934_p2 | or_cond1_reg_3042);

assign or_cond4_fu_1998_p2 = (sel_tmp19_fu_1992_p2 | sel_tmp18_fu_1986_p2);

assign or_cond5_fu_2018_p2 = (sel_tmp17_reg_3081 | sel_tmp16_reg_3076);

assign or_cond6_fu_2033_p2 = (or_cond5_fu_2018_p2 | or_cond4_reg_3091);

assign or_cond7_fu_2094_p2 = (sel_tmp25_fu_2088_p2 | sel_tmp24_fu_2082_p2);

assign or_cond8_fu_2114_p2 = (sel_tmp23_reg_3135 | sel_tmp22_reg_3130);

assign or_cond9_fu_2123_p2 = (sel_tmp21_reg_3124 | sel_tmp20_reg_3119);

assign or_cond_fu_1863_p2 = (sel_tmp8_reg_2997 | sel_tmp5_reg_2992);

assign p_0_1_fu_785_p2 = (training_set_V_1_loa_reg_2530 ^ p_Result_1_reg_2500);

assign p_0_fu_781_p2 = (training_set_V_0_loa_reg_2525 ^ p_Result_1_reg_2500);

assign p_1_cast_fu_1010_p1 = tmp_19_1_1_fu_992_p2;

assign p_1_fu_1048_p3 = ((tmp_19_1_2_fu_1030_p2[0:0] === 1'b1) ? 2'd2 : p_1_cast_fu_1010_p1);

assign p_Result_1_fu_744_p9 = {{{{{{{{reg_610}, {reg_615}}, {reg_619}}, {reg_623}}, {reg_627}}, {reg_631}}, {reg_635}}, {tmp_V_15_reg_2470}};

assign p_Result_3_fu_2440_p3 = {{24'd0}, {max_vote_0_i_9_cast_fu_2436_p1}};

assign p_Result_s_fu_680_p9 = {{{{{{{{reg_610}, {reg_615}}, {reg_619}}, {reg_623}}, {reg_627}}, {reg_631}}, {reg_635}}, {Input_1_V_V}};

assign p_cast_fu_860_p1 = tmp_19_0_1_fu_842_p2;

assign p_s_fu_898_p3 = ((tmp_19_0_2_fu_880_p2[0:0] === 1'b1) ? 2'd2 : p_cast_fu_860_p1);

assign p_shl2_fu_1097_p3 = {{tmp_17_fu_1093_p1}, {2'd0}};

assign p_shl2_mid1_fu_1151_p3 = {{tmp_18_fu_1147_p1}, {2'd0}};

assign p_trunc164_ext_cast_fu_1080_p1 = dist_1_reg_2556;

assign p_trunc_ext_cast_fu_930_p1 = dist_reg_2545;

assign phitmp_i_1_cast_cast_fu_1285_p1 = not_tmp_s_fu_1280_p2;

assign phitmp_i_2_cast_cast_fu_1329_p1 = phitmp_i_2_fu_1321_p3;

assign phitmp_i_2_fu_1321_p3 = ((icmp_fu_1315_p2[0:0] === 1'b1) ? 2'd2 : tmp_19_fu_1296_p1);

assign pos_1_fu_1289_p3 = ((tmp_25_1_reg_2700[0:0] === 1'b1) ? phitmp_i_1_cast_cast_fu_1285_p1 : pos_fu_1273_p3);

assign pos_2_fu_1333_p3 = ((tmp_25_2_fu_1300_p2[0:0] === 1'b1) ? phitmp_i_2_cast_cast_fu_1329_p1 : pos_1_fu_1289_p3);

assign pos_fu_1273_p3 = ((tmp_11_reg_2694[0:0] === 1'b1) ? 6'd0 : 6'd40);

assign sel_tmp10_fu_1890_p2 = ((max_vote_0_i_4_fu_1883_p3 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp11_fu_1896_p2 = ((max_vote_0_i_4_fu_1883_p3 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp12_fu_1902_p2 = ((max_vote_0_i_4_fu_1883_p3 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp13_fu_1408_p2 = (tmp_35_1_fu_1396_p2 & sel_tmp9_fu_1402_p2);

assign sel_tmp14_fu_1908_p2 = ((max_vote_0_i_4_fu_1883_p3 == 3'd0) ? 1'b1 : 1'b0);

assign sel_tmp15_fu_1968_p2 = ((max_vote_0_i_5_fu_1962_p3 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp16_fu_1974_p2 = ((max_vote_0_i_5_fu_1962_p3 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp17_fu_1980_p2 = ((max_vote_0_i_5_fu_1962_p3 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp18_fu_1986_p2 = ((max_vote_0_i_5_fu_1962_p3 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp19_fu_1992_p2 = ((max_vote_0_i_5_fu_1962_p3 == 3'd0) ? 1'b1 : 1'b0);

assign sel_tmp1_fu_1796_p2 = ((max_vote_0_i_2_reg_2965 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp1_i_fu_1205_p3 = ((sel_tmp_i_reg_2671[0:0] === 1'b1) ? knn_set_0_load_1_reg_371 : knn_set_5_load_reg_383);

assign sel_tmp20_fu_2058_p2 = ((max_vote_0_i_6_fu_2052_p3 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp21_fu_2064_p2 = ((max_vote_0_i_6_fu_2052_p3 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp22_fu_2070_p2 = ((max_vote_0_i_6_fu_2052_p3 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp23_fu_2076_p2 = ((max_vote_0_i_6_fu_2052_p3 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp24_fu_2082_p2 = ((max_vote_0_i_6_fu_2052_p3 == 3'd5) ? 1'b1 : 1'b0);

assign sel_tmp25_fu_2088_p2 = ((max_vote_0_i_6_fu_2052_p3 == 3'd0) ? 1'b1 : 1'b0);

assign sel_tmp26_fu_2165_p2 = ((max_vote_0_i_7_fu_2159_p3 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp27_fu_2171_p2 = ((max_vote_0_i_7_fu_2159_p3 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp28_fu_2177_p2 = ((max_vote_0_i_7_fu_2159_p3 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp29_fu_2183_p2 = ((max_vote_0_i_7_fu_2159_p3 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_1450_p3 = ((tmp_31_1_reg_2720[0:0] === 1'b1) ? label_list_1_1_reg_538 : label_list_2_2_reg_528);

assign sel_tmp2_i_fu_1199_p2 = ((tmp_15_t_fu_1187_p2 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp30_fu_2189_p2 = ((max_vote_0_i_7_fu_2159_p3 == 3'd5) ? 1'b1 : 1'b0);

assign sel_tmp31_fu_2195_p2 = ((max_vote_0_i_7_fu_2159_p3 == 3'd6) ? 1'b1 : 1'b0);

assign sel_tmp32_fu_2201_p2 = ((max_vote_0_i_7_fu_2159_p3 == 3'd0) ? 1'b1 : 1'b0);

assign sel_tmp33_fu_2354_p2 = ((max_vote_0_i_8_reg_3224 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp34_fu_2288_p2 = ((max_vote_0_i_8_fu_2281_p3 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp35_fu_2294_p2 = ((max_vote_0_i_8_fu_2281_p3 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp36_fu_2300_p2 = ((max_vote_0_i_8_fu_2281_p3 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp37_fu_2306_p2 = ((max_vote_0_i_8_fu_2281_p3 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp38_fu_2312_p2 = ((max_vote_0_i_8_fu_2281_p3 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp39_fu_2318_p2 = ((max_vote_0_i_8_fu_2281_p3 == 4'd7) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_1807_p2 = ((max_vote_0_i_2_reg_2965 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp3_i_fu_1212_p3 = ((sel_tmp2_i_reg_2676[0:0] === 1'b1) ? knn_set_1_load_1_reg_359 : sel_tmp1_i_fu_1205_p3);

assign sel_tmp40_fu_2324_p2 = ((max_vote_0_i_8_fu_2281_p3 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_1831_p2 = ((max_vote_0_i_3_fu_1825_p3 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp4_i_fu_1219_p2 = ((tmp_15_t_reg_2664 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_1837_p2 = ((max_vote_0_i_3_fu_1825_p3 == 2'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_i_fu_1224_p3 = ((sel_tmp4_i_fu_1219_p2[0:0] === 1'b1) ? knn_set_2_load_1_reg_347 : sel_tmp3_i_fu_1212_p3);

assign sel_tmp6_fu_1363_p2 = (icmp1_fu_1351_p2 ^ 1'd1);

assign sel_tmp6_i_fu_1232_p2 = ((tmp_15_t_reg_2664 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_1369_p2 = (tmp_13_fu_1357_p2 & sel_tmp6_fu_1363_p2);

assign sel_tmp7_i_fu_1237_p3 = ((sel_tmp6_i_fu_1232_p2[0:0] === 1'b1) ? knn_set_3_load_1_reg_335 : sel_tmp5_i_fu_1224_p3);

assign sel_tmp8_fu_1843_p2 = ((max_vote_0_i_3_fu_1825_p3 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp8_i_fu_1245_p2 = ((tmp_15_t_reg_2664 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_1402_p2 = (tmp_31_1_fu_1390_p2 ^ 1'd1);

assign sel_tmp_fu_1436_p3 = ((icmp1_reg_2705[0:0] === 1'b1) ? label_list_2_2_reg_528 : label_list_2_s_reg_518);

assign sel_tmp_i_fu_1193_p2 = ((tmp_15_t_fu_1187_p2 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_10_fu_1184_p1 = j_0_i_mid2_reg_2644;

assign tmp_11_fu_1261_p2 = (($signed(min_distance_list_2_3_fu_1258_p1) < $signed(ap_phi_mux_min_distance_list_1_1_phi_fu_571_p4)) ? 1'b1 : 1'b0);

assign tmp_12_fu_796_p1 = knn_set_0[8:0];

assign tmp_13_fu_1357_p2 = ((pos_2_fu_1333_p3 == 6'd2) ? 1'b1 : 1'b0);

assign tmp_14_fu_800_p1 = knn_set_0[9:0];

assign tmp_15_fu_834_p1 = knn_set_1[8:0];

assign tmp_15_t_fu_1187_p2 = (tmp_7_mid2_fu_1179_p3 + tmp_10_fu_1184_p1);

assign tmp_16_fu_868_p1 = knn_set_2[8:0];

assign tmp_17_1_fu_1056_p2 = ((dist_1_ext_fu_939_p1 < max_dist_1_2_max_dis_1_fu_1044_p1) ? 1'b1 : 1'b0);

assign tmp_17_fu_1093_p1 = i_0_i_reg_507[0:0];

assign tmp_18_fu_1147_p1 = i_s_fu_1137_p2[0:0];

assign tmp_19_0_1_fu_842_p2 = ((extLd1_fu_830_p1 > max_dist_0_0_cast_fu_822_p1) ? 1'b1 : 1'b0);

assign tmp_19_0_2_fu_880_p2 = ((extLd_fu_872_p1 > max_dist_0_1_max_dis_1_fu_856_p1) ? 1'b1 : 1'b0);

assign tmp_19_1_1_fu_992_p2 = ((extLd2_fu_980_p1 > max_dist_1_0_cast_fu_972_p1) ? 1'b1 : 1'b0);

assign tmp_19_1_2_fu_1030_p2 = ((extLd3_fu_1022_p1 > max_dist_1_1_max_dis_1_fu_1006_p1) ? 1'b1 : 1'b0);

assign tmp_19_1_fu_958_p2 = (($signed(tmp_23_fu_950_p1) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign tmp_19_fu_1296_p1 = pos_1_fu_1289_p3[1:0];

assign tmp_1_fu_661_p2 = ($signed(i_reg_312) + $signed(10'd574));

assign tmp_20_fu_1305_p4 = {{pos_1_fu_1289_p3[5:2]}};

assign tmp_21_fu_1341_p4 = {{pos_2_fu_1333_p3[5:1]}};

assign tmp_22_fu_946_p1 = knn_set_3[8:0];

assign tmp_23_fu_950_p1 = knn_set_3[9:0];

assign tmp_24_fu_984_p1 = knn_set_4[8:0];

assign tmp_25_1_fu_1267_p2 = (($signed(min_distance_list_2_3_fu_1258_p1) < $signed(ap_phi_mux_min_distance_list_2_1_8_phi_fu_561_p4)) ? 1'b1 : 1'b0);

assign tmp_25_2_fu_1300_p2 = (($signed(min_distance_list_2_3_reg_2686) < $signed(ap_phi_mux_min_distance_list_2_1_phi_fu_551_p4)) ? 1'b1 : 1'b0);

assign tmp_25_fu_1018_p1 = knn_set_5[8:0];

assign tmp_26_fu_1595_p1 = tmp_6_fu_1583_p5[3:0];

assign tmp_2_fu_808_p2 = (($signed(tmp_14_fu_800_p1) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign tmp_30_1_fu_1756_p2 = (($signed(vote_list_9_10_fu_180) < $signed(vote_list_9_1_fu_176)) ? 1'b1 : 1'b0);

assign tmp_30_2_fu_1779_p2 = (($signed(vote_list_9_11_fu_184) < $signed(vote_list_load_2_2_p_fu_1774_p3)) ? 1'b1 : 1'b0);

assign tmp_30_3_fu_1819_p2 = (($signed(vote_list_9_12_fu_188) < $signed(vote_list_9_3_fu_1812_p3)) ? 1'b1 : 1'b0);

assign tmp_30_4_fu_1874_p2 = (($signed(vote_list_9_13_fu_192) < $signed(vote_list_9_4_fu_1867_p3)) ? 1'b1 : 1'b0);

assign tmp_30_5_fu_1956_p2 = (($signed(vote_list_9_14_fu_196) < $signed(vote_list_9_5_fu_1949_p3)) ? 1'b1 : 1'b0);

assign tmp_30_6_fu_2046_p2 = (($signed(vote_list_9_15_fu_200) < $signed(vote_list_9_6_fu_2038_p3)) ? 1'b1 : 1'b0);

assign tmp_30_7_fu_2153_p2 = (($signed(vote_list_9_16_fu_204) < $signed(vote_list_9_7_fu_2145_p3)) ? 1'b1 : 1'b0);

assign tmp_30_8_fu_2272_p2 = (($signed(vote_list_9_17_fu_208) < $signed(vote_list_9_8_fu_2264_p3)) ? 1'b1 : 1'b0);

assign tmp_30_9_fu_2424_p2 = (($signed(vote_list_9_18_fu_212) < $signed(vote_list_9_9_reg_3277)) ? 1'b1 : 1'b0);

assign tmp_31_1_fu_1390_p2 = ((pos_2_fu_1333_p3 == 6'd0) ? 1'b1 : 1'b0);

assign tmp_35_1_fu_1396_p2 = ((pos_2_fu_1333_p3 == 6'd1) ? 1'b1 : 1'b0);

assign tmp_4_fu_655_p2 = ((i_reg_312 < 10'd450) ? 1'b1 : 1'b0);

assign tmp_7_fu_1105_p2 = (p_shl2_fu_1097_p3 - i_0_i_cast1_fu_1089_p1);

assign tmp_7_mid1_fu_1159_p2 = (p_shl2_mid1_fu_1151_p3 - i_0_i_cast1_mid1_fu_1143_p1);

assign tmp_7_mid2_fu_1179_p3 = ((exitcond1_i_reg_2639[0:0] === 1'b1) ? tmp_7_mid1_reg_2649 : tmp_7_reg_2625);

assign tmp_s_fu_906_p2 = ((dist_ext_fu_789_p1 < max_dist_0_2_max_dis_1_fu_894_p1) ? 1'b1 : 1'b0);

assign vote_list_0_fu_1654_p2 = (32'd1 + tmp_8_fu_1629_p12);

assign vote_list_9_2_fu_1801_p3 = ((sel_tmp1_fu_1796_p2[0:0] === 1'b1) ? vote_list_9_10_fu_180 : vote_list_9_11_fu_184);

assign vote_list_9_3_fu_1812_p3 = ((sel_tmp3_fu_1807_p2[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_2_fu_1801_p3);

assign vote_list_9_4_fu_1867_p3 = ((or_cond_fu_1863_p2[0:0] === 1'b1) ? newSel_fu_1858_p3 : newSel1_reg_3003);

assign vote_list_9_5_fu_1949_p3 = ((or_cond3_fu_1944_p2[0:0] === 1'b1) ? newSel5_fu_1938_p3 : vote_list_9_13_fu_192);

assign vote_list_9_6_fu_2038_p3 = ((or_cond6_fu_2033_p2[0:0] === 1'b1) ? newSel2_fu_2027_p3 : newSel9_fu_2022_p3);

assign vote_list_9_7_fu_2145_p3 = ((or_cond10_fu_2133_p2[0:0] === 1'b1) ? newSel12_fu_2127_p3 : newSel13_fu_2138_p3);

assign vote_list_9_8_fu_2264_p3 = ((or_cond14_fu_2252_p2[0:0] === 1'b1) ? newSel18_fu_2246_p3 : newSel19_fu_2257_p3);

assign vote_list_9_9_fu_2414_p3 = ((or_cond21_fu_2408_p2[0:0] === 1'b1) ? newSel26_fu_2400_p3 : vote_list_9_17_fu_208);

assign vote_list_load_2_2_p_fu_1774_p3 = ((tmp_30_1_reg_2948[0:0] === 1'b1) ? vote_list_9_1_fu_176 : vote_list_9_10_fu_180);

always @ (posedge ap_clk) begin
    knn_set_0[10:9] <= 2'b00;
    knn_set_1[10:9] <= 2'b00;
    knn_set_2[10:9] <= 2'b00;
    knn_set_3[10:9] <= 2'b00;
    knn_set_4[10:9] <= 2'b00;
    knn_set_5[10:9] <= 2'b00;
    min_distance_list_2_3_reg_2686[31:9] <= 23'b00000000000000000000000;
end

endmodule //update_knn10
