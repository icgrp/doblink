// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="update_knn9,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.931375,HLS_SYN_LAT=7699,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=4240,HLS_SYN_LUT=8333,HLS_VERSION=2018_2}" *)

module update_knn9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 45'd1;
parameter    ap_ST_fsm_state2 = 45'd2;
parameter    ap_ST_fsm_state3 = 45'd4;
parameter    ap_ST_fsm_state4 = 45'd8;
parameter    ap_ST_fsm_state5 = 45'd16;
parameter    ap_ST_fsm_state6 = 45'd32;
parameter    ap_ST_fsm_state7 = 45'd64;
parameter    ap_ST_fsm_state8 = 45'd128;
parameter    ap_ST_fsm_state9 = 45'd256;
parameter    ap_ST_fsm_state10 = 45'd512;
parameter    ap_ST_fsm_pp1_stage0 = 45'd1024;
parameter    ap_ST_fsm_pp1_stage1 = 45'd2048;
parameter    ap_ST_fsm_pp1_stage2 = 45'd4096;
parameter    ap_ST_fsm_pp1_stage3 = 45'd8192;
parameter    ap_ST_fsm_pp1_stage4 = 45'd16384;
parameter    ap_ST_fsm_pp1_stage5 = 45'd32768;
parameter    ap_ST_fsm_pp1_stage6 = 45'd65536;
parameter    ap_ST_fsm_pp1_stage7 = 45'd131072;
parameter    ap_ST_fsm_state20 = 45'd262144;
parameter    ap_ST_fsm_state21 = 45'd524288;
parameter    ap_ST_fsm_state22 = 45'd1048576;
parameter    ap_ST_fsm_state23 = 45'd2097152;
parameter    ap_ST_fsm_state24 = 45'd4194304;
parameter    ap_ST_fsm_state25 = 45'd8388608;
parameter    ap_ST_fsm_state26 = 45'd16777216;
parameter    ap_ST_fsm_state27 = 45'd33554432;
parameter    ap_ST_fsm_state28 = 45'd67108864;
parameter    ap_ST_fsm_state29 = 45'd134217728;
parameter    ap_ST_fsm_state30 = 45'd268435456;
parameter    ap_ST_fsm_state31 = 45'd536870912;
parameter    ap_ST_fsm_state32 = 45'd1073741824;
parameter    ap_ST_fsm_state33 = 45'd2147483648;
parameter    ap_ST_fsm_state34 = 45'd4294967296;
parameter    ap_ST_fsm_state35 = 45'd8589934592;
parameter    ap_ST_fsm_pp2_stage0 = 45'd17179869184;
parameter    ap_ST_fsm_state48 = 45'd34359738368;
parameter    ap_ST_fsm_pp3_stage0 = 45'd68719476736;
parameter    ap_ST_fsm_state55 = 45'd137438953472;
parameter    ap_ST_fsm_state56 = 45'd274877906944;
parameter    ap_ST_fsm_state57 = 45'd549755813888;
parameter    ap_ST_fsm_state58 = 45'd1099511627776;
parameter    ap_ST_fsm_state59 = 45'd2199023255552;
parameter    ap_ST_fsm_state60 = 45'd4398046511104;
parameter    ap_ST_fsm_state61 = 45'd8796093022208;
parameter    ap_ST_fsm_state62 = 45'd17592186044416;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [44:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] index;
reg   [10:0] knn_set_0;
reg   [10:0] knn_set_1;
reg   [10:0] knn_set_2;
reg   [10:0] knn_set_3;
reg   [10:0] knn_set_4;
reg   [10:0] knn_set_5;
reg   [8:0] training_set_V_0_address0;
reg    training_set_V_0_ce0;
reg    training_set_V_0_we0;
wire   [255:0] training_set_V_0_q0;
reg   [8:0] training_set_V_1_address0;
reg    training_set_V_1_ce0;
reg    training_set_V_1_we0;
wire   [255:0] training_set_V_1_q0;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_544_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] exitcond2_fu_603_p2;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond2_reg_1381;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
reg    Output_1_V_V_blk_n;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
reg   [9:0] i1_reg_211;
reg   [8:0] knn_set_4_load_1_reg_222;
reg   [8:0] knn_set_3_load_1_reg_234;
reg   [8:0] knn_set_2_load_1_reg_246;
reg   [8:0] knn_set_1_load_1_reg_258;
reg   [8:0] knn_set_0_load_1_reg_270;
reg   [8:0] knn_set_5_load_reg_282;
reg   [8:0] i5_reg_294;
reg   [2:0] indvar_flatten_reg_395;
reg   [1:0] i_0_i_reg_406;
reg   [31:0] tmp_V_49_reg_417;
reg   [31:0] label_list_2_1_reg_428;
reg   [31:0] label_list_1_1_reg_439;
reg   [31:0] tmp_V_46_reg_450;
reg   [31:0] min_distance_list_2_1_reg_461;
reg   [31:0] min_distance_list_1_1_reg_472;
reg   [1:0] j_0_i_reg_483;
reg   [31:0] reg_504;
reg    ap_block_state2;
reg    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state19_io;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_state12_pp1_stage1_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp1_stage1_11001;
reg    ap_block_state13_pp1_stage2_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp1_stage2_11001;
reg    ap_block_state14_pp1_stage3_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp1_stage3_11001;
reg    ap_block_state15_pp1_stage4_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp1_stage4_11001;
reg    ap_block_state16_pp1_stage5_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp1_stage5_11001;
reg    ap_block_state17_pp1_stage6_iter0;
reg    ap_block_state17_io;
reg    ap_block_pp1_stage6_11001;
reg    ap_block_state18_pp1_stage7_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp1_stage7_11001;
reg   [31:0] reg_510;
reg   [31:0] reg_515;
reg   [31:0] reg_520;
reg   [31:0] reg_525;
reg   [31:0] reg_530;
reg   [31:0] reg_535;
wire   [0:0] index_load_load_fu_540_p1;
reg   [0:0] index_load_reg_1360;
wire   [9:0] i_1_fu_550_p2;
reg   [9:0] i_1_reg_1367;
wire   [0:0] tmp_5_fu_556_p2;
reg   [0:0] tmp_5_reg_1372;
wire   [9:0] newIndex_fu_568_p3;
reg   [9:0] newIndex_reg_1376;
wire   [9:0] i_2_fu_609_p2;
reg   [9:0] i_2_reg_1385;
reg   [31:0] tmp_V_66_reg_1390;
reg   [31:0] tmp_V_67_reg_1396;
reg   [31:0] tmp_V_68_reg_1401;
reg   [31:0] tmp_V_69_reg_1406;
reg   [31:0] tmp_V_70_reg_1411;
reg   [31:0] tmp_V_71_reg_1416;
wire   [255:0] p_Result_18_fu_657_p9;
reg   [255:0] p_Result_18_reg_1421;
wire   [0:0] exitcond5_fu_676_p2;
reg   [0:0] exitcond5_reg_1427;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state36_pp2_stage0_iter0;
wire    ap_block_state37_pp2_stage0_iter1;
wire    ap_block_state38_pp2_stage0_iter2;
wire    ap_block_state39_pp2_stage0_iter3;
wire    ap_block_state40_pp2_stage0_iter4;
wire    ap_block_state41_pp2_stage0_iter5;
wire    ap_block_state42_pp2_stage0_iter6;
wire    ap_block_state43_pp2_stage0_iter7;
wire    ap_block_state44_pp2_stage0_iter8;
wire    ap_block_state45_pp2_stage0_iter9;
wire    ap_block_state46_pp2_stage0_iter10;
wire    ap_block_state47_pp2_stage0_iter11;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond5_reg_1427_pp2_iter1_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter2_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter3_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter4_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter5_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter6_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter7_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter8_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter9_reg;
reg   [0:0] exitcond5_reg_1427_pp2_iter10_reg;
wire   [8:0] i_3_fu_682_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [255:0] training_set_V_0_loa_reg_1446;
reg    ap_enable_reg_pp2_iter1;
reg   [255:0] training_set_V_1_loa_reg_1451;
wire   [255:0] p_0_fu_694_p2;
reg   [255:0] p_0_reg_1456;
wire   [255:0] p_0_1_fu_698_p2;
reg   [255:0] p_0_1_reg_1461;
wire   [8:0] grp_popcount_fu_494_ap_return;
reg   [8:0] dist_reg_1466;
wire   [8:0] grp_popcount_fu_499_ap_return;
reg   [8:0] dist_1_reg_1477;
wire   [8:0] tmp_10_fu_709_p1;
reg   [8:0] tmp_10_reg_1488;
wire   [8:0] tmp_13_fu_747_p1;
reg   [8:0] tmp_13_reg_1495;
wire   [8:0] tmp_14_fu_781_p1;
reg   [8:0] tmp_14_reg_1502;
wire   [1:0] p_s_fu_811_p3;
wire   [0:0] tmp_s_fu_819_p2;
reg   [0:0] tmp_s_reg_1513;
wire   [8:0] tmp_20_fu_859_p1;
reg   [8:0] tmp_20_reg_1517;
wire   [8:0] tmp_22_fu_897_p1;
reg   [8:0] tmp_22_reg_1524;
wire   [8:0] tmp_23_fu_931_p1;
reg   [8:0] tmp_23_reg_1531;
wire   [1:0] p_1_fu_961_p3;
wire   [0:0] tmp_17_1_fu_969_p2;
reg   [0:0] tmp_17_1_reg_1542;
wire   [2:0] tmp_7_fu_1018_p2;
reg   [2:0] tmp_7_reg_1546;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state49_pp3_stage0_iter0;
wire    ap_block_state50_pp3_stage0_iter1;
wire    ap_block_state51_pp3_stage0_iter2;
wire    ap_block_state52_pp3_stage0_iter3;
wire    ap_block_state53_pp3_stage0_iter4;
wire    ap_block_state54_pp3_stage0_iter5;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] exitcond_flatten_fu_1024_p2;
reg   [0:0] exitcond_flatten_reg_1551;
reg   [0:0] exitcond_flatten_reg_1551_pp3_iter1_reg;
reg   [0:0] exitcond_flatten_reg_1551_pp3_iter2_reg;
reg   [0:0] exitcond_flatten_reg_1551_pp3_iter3_reg;
reg   [0:0] exitcond_flatten_reg_1551_pp3_iter4_reg;
wire   [2:0] indvar_flatten_next_fu_1030_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] exitcond1_i_fu_1036_p2;
reg   [0:0] exitcond1_i_reg_1560;
wire   [1:0] j_0_i_mid2_fu_1042_p3;
reg   [1:0] j_0_i_mid2_reg_1565;
wire   [2:0] tmp_7_mid1_fu_1072_p2;
reg   [2:0] tmp_7_mid1_reg_1570;
wire   [1:0] i_0_i_mid2_fu_1078_p3;
wire   [1:0] j_fu_1086_p2;
wire   [2:0] tmp_15_t_fu_1100_p2;
reg   [2:0] tmp_15_t_reg_1585;
wire   [0:0] sel_tmp_i_fu_1106_p2;
reg   [0:0] sel_tmp_i_reg_1592;
wire   [0:0] sel_tmp2_i_fu_1112_p2;
reg   [0:0] sel_tmp2_i_reg_1597;
wire   [8:0] min_distance_list_0_fu_1163_p3;
reg   [8:0] min_distance_list_0_reg_1602;
wire   [31:0] min_distance_list_0_2_fu_1171_p1;
reg   [31:0] min_distance_list_0_2_reg_1607;
wire   [0:0] tmp_9_fu_1174_p2;
reg   [0:0] tmp_9_reg_1615;
wire   [0:0] tmp_22_1_fu_1180_p2;
reg   [0:0] tmp_22_1_reg_1621;
wire   [0:0] icmp1_fu_1264_p2;
reg   [0:0] icmp1_reg_1626;
wire   [0:0] tmp_11_fu_1270_p2;
reg   [0:0] tmp_11_reg_1631;
wire   [31:0] min_distance_list_2_5_fu_1283_p3;
reg   [31:0] min_distance_list_2_5_reg_1636;
reg    ap_enable_reg_pp3_iter4;
wire   [0:0] tmp_25_1_fu_1291_p2;
reg   [0:0] tmp_25_1_reg_1641;
wire   [0:0] tmp_29_1_fu_1297_p2;
reg   [0:0] tmp_29_1_reg_1647;
wire   [31:0] min_distance_list_1_2_fu_1310_p3;
wire   [31:0] p_min_distance_list_0_1_fu_1318_p3;
wire   [31:0] label_list_2_2_fu_1332_p3;
reg    ap_enable_reg_pp3_iter5;
wire   [31:0] label_list_1_2_fu_1346_p3;
wire   [31:0] p_label_list_0_1_fu_1353_p3;
wire    ap_CS_fsm_state10;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_block_pp1_stage7_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state36;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
wire    ap_CS_fsm_state48;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state49;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg   [9:0] i_reg_200;
reg   [9:0] ap_phi_mux_i1_phi_fu_215_p4;
reg   [8:0] ap_phi_mux_knn_set_4_load_s_phi_fu_354_p8;
reg   [8:0] ap_phi_mux_knn_set_3_load_s_phi_fu_369_p8;
reg   [8:0] ap_phi_mux_knn_set_2_load_s_phi_fu_309_p8;
reg   [8:0] ap_phi_mux_knn_set_1_load_s_phi_fu_324_p8;
reg   [8:0] ap_phi_mux_knn_set_0_load_s_phi_fu_339_p8;
reg   [8:0] ap_phi_mux_knn_set_5_load3_phi_fu_384_p8;
wire   [8:0] ap_phi_reg_pp2_iter0_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter1_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter2_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter3_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter4_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter5_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter6_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter7_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter8_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter9_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter10_knn_set_2_load_s_reg_305;
reg   [8:0] ap_phi_reg_pp2_iter11_knn_set_2_load_s_reg_305;
wire    ap_block_pp2_stage0;
wire   [8:0] ap_phi_reg_pp2_iter0_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter1_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter2_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter3_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter4_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter5_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter6_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter7_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter8_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter9_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter10_knn_set_1_load_s_reg_320;
reg   [8:0] ap_phi_reg_pp2_iter11_knn_set_1_load_s_reg_320;
wire   [8:0] ap_phi_reg_pp2_iter0_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter1_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter2_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter3_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter4_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter5_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter6_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter7_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter8_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter9_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter10_knn_set_0_load_s_reg_335;
reg   [8:0] ap_phi_reg_pp2_iter11_knn_set_0_load_s_reg_335;
wire   [8:0] ap_phi_reg_pp2_iter0_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter1_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter2_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter3_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter4_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter5_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter6_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter7_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter8_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter9_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter10_knn_set_4_load_s_reg_350;
reg   [8:0] ap_phi_reg_pp2_iter11_knn_set_4_load_s_reg_350;
wire   [8:0] ap_phi_reg_pp2_iter0_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter1_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter2_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter3_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter4_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter5_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter6_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter7_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter8_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter9_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter10_knn_set_3_load_s_reg_365;
reg   [8:0] ap_phi_reg_pp2_iter11_knn_set_3_load_s_reg_365;
wire   [8:0] ap_phi_reg_pp2_iter0_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter1_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter2_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter3_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter4_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter5_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter6_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter7_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter8_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter9_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter10_knn_set_5_load3_reg_380;
reg   [8:0] ap_phi_reg_pp2_iter11_knn_set_5_load3_reg_380;
reg   [31:0] ap_phi_mux_tmp_V_46_phi_fu_454_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] ap_phi_mux_min_distance_list_2_1_phi_fu_465_p4;
reg   [31:0] ap_phi_mux_min_distance_list_1_1_phi_fu_476_p4;
wire   [63:0] newIndex1_fu_576_p1;
wire   [63:0] i3_fu_688_p1;
wire   [10:0] dist_ext_cast_fu_834_p1;
wire   [10:0] dist_ext_cast1_fu_825_p1;
wire   [10:0] p_trunc_ext_cast_fu_843_p1;
wire   [10:0] dist_1_ext_cast_fu_984_p1;
wire   [10:0] dist_1_ext_cast1_fu_975_p1;
wire   [10:0] p_trunc5_ext_cast_fu_993_p1;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp1_stage2_01001;
reg    ap_block_pp1_stage3_01001;
reg    ap_block_pp1_stage4_01001;
reg    ap_block_pp1_stage5_01001;
reg    ap_block_pp1_stage6_01001;
reg    ap_block_pp1_stage7_01001;
reg    ap_block_pp1_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [255:0] p_Result_s_fu_581_p9;
wire   [9:0] tmp_1_fu_562_p2;
wire   [9:0] tmp_12_fu_713_p1;
wire   [0:0] tmp_2_fu_721_p2;
wire   [30:0] knn_set_0_load_cast_fu_717_p1;
wire   [30:0] max_dist_0_0_s_fu_727_p3;
wire   [31:0] extLd1_fu_743_p1;
wire   [31:0] max_dist_0_0_cast_fu_735_p1;
wire   [0:0] tmp_19_0_1_fu_755_p2;
wire   [30:0] knn_set_1_load_cast_fu_751_p1;
wire   [30:0] max_dist_0_1_max_dis_fu_761_p3;
wire   [31:0] extLd_fu_785_p1;
wire   [31:0] max_dist_0_1_max_dis_1_fu_769_p1;
wire   [0:0] tmp_19_0_2_fu_793_p2;
wire   [30:0] extLd_cast_fu_789_p1;
wire   [30:0] max_dist_0_2_max_dis_fu_799_p3;
wire   [1:0] p_cast_fu_773_p1;
wire   [31:0] dist_ext_fu_702_p1;
wire   [31:0] max_dist_0_2_max_dis_1_fu_807_p1;
wire   [9:0] tmp_21_fu_863_p1;
wire   [0:0] tmp_19_1_fu_871_p2;
wire   [30:0] knn_set_3_load_cast_fu_867_p1;
wire   [30:0] max_dist_1_0_s_fu_877_p3;
wire   [31:0] extLd3_fu_893_p1;
wire   [31:0] max_dist_1_0_cast_fu_885_p1;
wire   [0:0] tmp_19_1_1_fu_905_p2;
wire   [30:0] knn_set_4_load_cast_fu_901_p1;
wire   [30:0] max_dist_1_1_max_dis_fu_911_p3;
wire   [31:0] extLd2_fu_935_p1;
wire   [31:0] max_dist_1_1_max_dis_1_fu_919_p1;
wire   [0:0] tmp_19_1_2_fu_943_p2;
wire   [30:0] extLd2_cast_fu_939_p1;
wire   [30:0] max_dist_1_2_max_dis_fu_949_p3;
wire   [1:0] p_1_cast_fu_923_p1;
wire   [31:0] dist_1_ext_fu_852_p1;
wire   [31:0] max_dist_1_2_max_dis_1_fu_957_p1;
wire   [0:0] tmp_15_fu_1006_p1;
wire   [2:0] p_shl2_fu_1010_p3;
wire   [2:0] i_0_i_cast2_fu_1002_p1;
wire   [1:0] i_s_fu_1050_p2;
wire   [0:0] tmp_16_fu_1060_p1;
wire   [2:0] p_shl2_mid1_fu_1064_p3;
wire   [2:0] i_0_i_cast2_mid1_fu_1056_p1;
wire   [2:0] tmp_7_mid2_fu_1092_p3;
wire   [2:0] tmp_8_fu_1097_p1;
wire   [8:0] sel_tmp1_i_fu_1118_p3;
wire   [0:0] sel_tmp4_i_fu_1132_p2;
wire   [8:0] sel_tmp3_i_fu_1125_p3;
wire   [0:0] sel_tmp6_i_fu_1145_p2;
wire   [8:0] sel_tmp5_i_fu_1137_p3;
wire   [0:0] sel_tmp8_i_fu_1158_p2;
wire   [8:0] sel_tmp7_i_fu_1150_p3;
wire   [0:0] not_tmp_s_fu_1193_p2;
wire   [5:0] phitmp_i_1_cast_cast_fu_1198_p1;
wire   [5:0] pos_fu_1186_p3;
wire   [5:0] pos_1_fu_1202_p3;
wire   [3:0] tmp_18_fu_1218_p4;
wire   [0:0] icmp_fu_1228_p2;
wire   [1:0] tmp_17_fu_1209_p1;
wire   [1:0] phitmp_i_2_fu_1234_p3;
wire   [0:0] tmp_22_2_fu_1213_p2;
wire   [5:0] phitmp_i_2_cast_cast_fu_1242_p1;
wire   [5:0] pos_2_fu_1246_p3;
wire   [4:0] tmp_19_fu_1254_p4;
wire   [31:0] min_distance_list_2_3_fu_1276_p3;
wire   [31:0] min_distance_list_2_4_fu_1303_p3;
wire   [31:0] label_list_2_3_fu_1325_p3;
wire   [31:0] label_list_2_2_9_fu_1339_p3;
reg   [44:0] ap_NS_fsm;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_block_pp1_stage5_subdone;
reg    ap_block_pp1_stage6_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 45'd1;
#0 index = 1'd0;
#0 knn_set_0 = 11'd0;
#0 knn_set_1 = 11'd0;
#0 knn_set_2 = 11'd0;
#0 knn_set_3 = 11'd0;
#0 knn_set_4 = 11'd0;
#0 knn_set_5 = 11'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
end

update_knn9_trainbkb #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set_V_0_address0),
    .ce0(training_set_V_0_ce0),
    .we0(training_set_V_0_we0),
    .d0(p_Result_s_fu_581_p9),
    .q0(training_set_V_0_q0)
);

update_knn9_trainbkb #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set_V_1_address0),
    .ce0(training_set_V_1_ce0),
    .we0(training_set_V_1_we0),
    .d0(p_Result_s_fu_581_p9),
    .q0(training_set_V_1_q0)
);

popcount grp_popcount_fu_494(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(p_0_reg_1456),
    .ap_return(grp_popcount_fu_494_ap_return)
);

popcount grp_popcount_fu_499(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(p_0_1_reg_1461),
    .ap_return(grp_popcount_fu_499_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state11) & (((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state11);
        end else if ((((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state36) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state36)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state36);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
            ap_enable_reg_pp2_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state49) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state49)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state49);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp3_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state62)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state60)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state59)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state58)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state56)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state34)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state30)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state29)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state62)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state61)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state60)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state59)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state58)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state57)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state56)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state55)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state35)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state34)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state33)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state32)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state31)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state30)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state29)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state28)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_0_load_s_reg_335 <= dist_reg_1466;
    end else if ((((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)) | (~(p_s_fu_811_p3 == 2'd1) & ~(p_s_fu_811_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        ap_phi_reg_pp2_iter11_knn_set_0_load_s_reg_335 <= tmp_10_fu_709_p1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter10_knn_set_0_load_s_reg_335;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_1_load_s_reg_320 <= dist_reg_1466;
    end else if (((~(p_s_fu_811_p3 == 2'd1) & ~(p_s_fu_811_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)) | ((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        ap_phi_reg_pp2_iter11_knn_set_1_load_s_reg_320 <= tmp_13_fu_747_p1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter10_knn_set_1_load_s_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)) | ((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        ap_phi_reg_pp2_iter11_knn_set_2_load_s_reg_305 <= tmp_14_fu_781_p1;
    end else if ((~(p_s_fu_811_p3 == 2'd1) & ~(p_s_fu_811_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_2_load_s_reg_305 <= dist_reg_1466;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter10_knn_set_2_load_s_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_3_load_s_reg_365 <= dist_1_reg_1477;
    end else if ((((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)) | (~(p_1_fu_961_p3 == 2'd1) & ~(p_1_fu_961_p3 == 2'd0) & (tmp_17_1_fu_969_p2 == 1'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        ap_phi_reg_pp2_iter11_knn_set_3_load_s_reg_365 <= tmp_20_fu_859_p1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter10_knn_set_3_load_s_reg_365;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_4_load_s_reg_350 <= dist_1_reg_1477;
    end else if (((~(p_1_fu_961_p3 == 2'd1) & ~(p_1_fu_961_p3 == 2'd0) & (tmp_17_1_fu_969_p2 == 1'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)) | ((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        ap_phi_reg_pp2_iter11_knn_set_4_load_s_reg_350 <= tmp_22_fu_897_p1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter10_knn_set_4_load_s_reg_350;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)) | ((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        ap_phi_reg_pp2_iter11_knn_set_5_load3_reg_380 <= tmp_23_fu_931_p1;
    end else if ((~(p_1_fu_961_p3 == 2'd1) & ~(p_1_fu_961_p3 == 2'd0) & (tmp_17_1_fu_969_p2 == 1'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_5_load3_reg_380 <= dist_1_reg_1477;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter10_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i1_reg_211 <= 10'd0;
    end else if (((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i1_reg_211 <= i_2_reg_1385;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        i5_reg_294 <= 9'd0;
    end else if (((exitcond5_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i5_reg_294 <= i_3_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        i_0_i_reg_406 <= 2'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1024_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_0_i_reg_406 <= i_0_i_mid2_fu_1078_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((index_load_load_fu_540_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_200 <= 10'd0;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9))) begin
        i_reg_200 <= i_1_reg_1367;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        indvar_flatten_reg_395 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1024_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_395 <= indvar_flatten_next_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        j_0_i_reg_483 <= 2'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1024_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_0_i_reg_483 <= j_fu_1086_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
                knn_set_0[8 : 0] <= dist_ext_cast_fu_834_p1[8 : 0];
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                knn_set_0[0] <= 1'b0;
        knn_set_0[1] <= 1'b0;
        knn_set_0[2] <= 1'b0;
        knn_set_0[3] <= 1'b0;
        knn_set_0[4] <= 1'b0;
        knn_set_0[5] <= 1'b0;
        knn_set_0[6] <= 1'b0;
        knn_set_0[7] <= 1'b0;
        knn_set_0[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        knn_set_0_load_1_reg_270 <= 9'd256;
    end else if (((exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        knn_set_0_load_1_reg_270 <= ap_phi_mux_knn_set_0_load_s_phi_fu_339_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (p_s_fu_811_p3 == 2'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
                knn_set_1[8 : 0] <= dist_ext_cast1_fu_825_p1[8 : 0];
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                knn_set_1[0] <= 1'b0;
        knn_set_1[1] <= 1'b0;
        knn_set_1[2] <= 1'b0;
        knn_set_1[3] <= 1'b0;
        knn_set_1[4] <= 1'b0;
        knn_set_1[5] <= 1'b0;
        knn_set_1[6] <= 1'b0;
        knn_set_1[7] <= 1'b0;
        knn_set_1[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        knn_set_1_load_1_reg_258 <= 9'd256;
    end else if (((exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        knn_set_1_load_1_reg_258 <= ap_phi_mux_knn_set_1_load_s_phi_fu_324_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((~(p_s_fu_811_p3 == 2'd1) & ~(p_s_fu_811_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (tmp_s_fu_819_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
                knn_set_2[8 : 0] <= p_trunc_ext_cast_fu_843_p1[8 : 0];
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                knn_set_2[0] <= 1'b0;
        knn_set_2[1] <= 1'b0;
        knn_set_2[2] <= 1'b0;
        knn_set_2[3] <= 1'b0;
        knn_set_2[4] <= 1'b0;
        knn_set_2[5] <= 1'b0;
        knn_set_2[6] <= 1'b0;
        knn_set_2[7] <= 1'b0;
        knn_set_2[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        knn_set_2_load_1_reg_246 <= 9'd256;
    end else if (((exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        knn_set_2_load_1_reg_246 <= ap_phi_mux_knn_set_2_load_s_phi_fu_309_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd0) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
                knn_set_3[8 : 0] <= dist_1_ext_cast_fu_984_p1[8 : 0];
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                knn_set_3[0] <= 1'b0;
        knn_set_3[1] <= 1'b0;
        knn_set_3[2] <= 1'b0;
        knn_set_3[3] <= 1'b0;
        knn_set_3[4] <= 1'b0;
        knn_set_3[5] <= 1'b0;
        knn_set_3[6] <= 1'b0;
        knn_set_3[7] <= 1'b0;
        knn_set_3[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        knn_set_3_load_1_reg_234 <= 9'd256;
    end else if (((exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        knn_set_3_load_1_reg_234 <= ap_phi_mux_knn_set_3_load_s_phi_fu_369_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_1_fu_969_p2 == 1'd1) & (p_1_fu_961_p3 == 2'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
                knn_set_4[8 : 0] <= dist_1_ext_cast1_fu_975_p1[8 : 0];
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                knn_set_4[0] <= 1'b0;
        knn_set_4[1] <= 1'b0;
        knn_set_4[2] <= 1'b0;
        knn_set_4[3] <= 1'b0;
        knn_set_4[4] <= 1'b0;
        knn_set_4[5] <= 1'b0;
        knn_set_4[6] <= 1'b0;
        knn_set_4[7] <= 1'b0;
        knn_set_4[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        knn_set_4_load_1_reg_222 <= 9'd256;
    end else if (((exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        knn_set_4_load_1_reg_222 <= ap_phi_mux_knn_set_4_load_s_phi_fu_354_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((~(p_1_fu_961_p3 == 2'd1) & ~(p_1_fu_961_p3 == 2'd0) & (tmp_17_1_fu_969_p2 == 1'd1) & (exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
                knn_set_5[8 : 0] <= p_trunc5_ext_cast_fu_993_p1[8 : 0];
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                knn_set_5[0] <= 1'b0;
        knn_set_5[1] <= 1'b0;
        knn_set_5[2] <= 1'b0;
        knn_set_5[3] <= 1'b0;
        knn_set_5[4] <= 1'b0;
        knn_set_5[5] <= 1'b0;
        knn_set_5[6] <= 1'b0;
        knn_set_5[7] <= 1'b0;
        knn_set_5[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        knn_set_5_load_reg_282 <= 9'd256;
    end else if (((exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        knn_set_5_load_reg_282 <= ap_phi_mux_knn_set_5_load3_phi_fu_384_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        label_list_1_1_reg_439 <= reg_504;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        label_list_1_1_reg_439 <= p_label_list_0_1_fu_1353_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        label_list_2_1_reg_428 <= tmp_V_71_reg_1416;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        label_list_2_1_reg_428 <= label_list_1_2_fu_1346_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        min_distance_list_1_1_reg_472 <= tmp_V_69_reg_1406;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        min_distance_list_1_1_reg_472 <= p_min_distance_list_0_1_fu_1318_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        min_distance_list_2_1_reg_461 <= tmp_V_68_reg_1401;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        min_distance_list_2_1_reg_461 <= min_distance_list_1_2_fu_1310_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_V_46_reg_450 <= tmp_V_67_reg_1396;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        tmp_V_46_reg_450 <= min_distance_list_2_5_reg_1636;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_V_49_reg_417 <= tmp_V_70_reg_1411;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        tmp_V_49_reg_417 <= label_list_2_2_fu_1332_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        ap_phi_reg_pp2_iter10_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter9_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter10_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter9_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter10_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter9_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter10_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter9_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter10_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter9_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter10_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter9_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_reg_pp2_iter1_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter0_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter1_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter0_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter1_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter0_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter1_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter0_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter1_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter0_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter1_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter0_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_reg_pp2_iter2_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter1_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter2_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter1_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter2_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter1_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter2_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter1_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter2_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter1_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter2_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter1_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        ap_phi_reg_pp2_iter3_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter2_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter3_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter2_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter3_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter2_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter3_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter2_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter3_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter2_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter3_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter2_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        ap_phi_reg_pp2_iter4_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter3_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter4_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter3_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter4_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter3_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter4_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter3_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter4_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter3_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter4_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter3_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        ap_phi_reg_pp2_iter5_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter4_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter5_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter4_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter5_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter4_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter5_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter4_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter5_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter4_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter5_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter4_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        ap_phi_reg_pp2_iter6_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter5_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter6_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter5_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter6_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter5_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter6_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter5_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter6_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter5_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter6_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter5_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_reg_pp2_iter7_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter6_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter7_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter6_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter7_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter6_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter7_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter6_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter7_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter6_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter7_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter6_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        ap_phi_reg_pp2_iter8_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter7_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter8_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter7_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter8_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter7_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter8_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter7_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter8_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter7_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter8_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter7_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1))) begin
        ap_phi_reg_pp2_iter9_knn_set_0_load_s_reg_335 <= ap_phi_reg_pp2_iter8_knn_set_0_load_s_reg_335;
        ap_phi_reg_pp2_iter9_knn_set_1_load_s_reg_320 <= ap_phi_reg_pp2_iter8_knn_set_1_load_s_reg_320;
        ap_phi_reg_pp2_iter9_knn_set_2_load_s_reg_305 <= ap_phi_reg_pp2_iter8_knn_set_2_load_s_reg_305;
        ap_phi_reg_pp2_iter9_knn_set_3_load_s_reg_365 <= ap_phi_reg_pp2_iter8_knn_set_3_load_s_reg_365;
        ap_phi_reg_pp2_iter9_knn_set_4_load_s_reg_350 <= ap_phi_reg_pp2_iter8_knn_set_4_load_s_reg_350;
        ap_phi_reg_pp2_iter9_knn_set_5_load3_reg_380 <= ap_phi_reg_pp2_iter8_knn_set_5_load3_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427_pp2_iter8_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        dist_1_reg_1477 <= grp_popcount_fu_499_ap_return;
        dist_reg_1466 <= grp_popcount_fu_494_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1024_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond1_i_reg_1560 <= exitcond1_i_fu_1036_p2;
        j_0_i_mid2_reg_1565 <= j_0_i_mid2_fu_1042_p3;
        tmp_7_mid1_reg_1570 <= tmp_7_mid1_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond2_reg_1381 <= exitcond2_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond5_reg_1427 <= exitcond5_fu_676_p2;
        exitcond5_reg_1427_pp2_iter1_reg <= exitcond5_reg_1427;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond5_reg_1427_pp2_iter10_reg <= exitcond5_reg_1427_pp2_iter9_reg;
        exitcond5_reg_1427_pp2_iter2_reg <= exitcond5_reg_1427_pp2_iter1_reg;
        exitcond5_reg_1427_pp2_iter3_reg <= exitcond5_reg_1427_pp2_iter2_reg;
        exitcond5_reg_1427_pp2_iter4_reg <= exitcond5_reg_1427_pp2_iter3_reg;
        exitcond5_reg_1427_pp2_iter5_reg <= exitcond5_reg_1427_pp2_iter4_reg;
        exitcond5_reg_1427_pp2_iter6_reg <= exitcond5_reg_1427_pp2_iter5_reg;
        exitcond5_reg_1427_pp2_iter7_reg <= exitcond5_reg_1427_pp2_iter6_reg;
        exitcond5_reg_1427_pp2_iter8_reg <= exitcond5_reg_1427_pp2_iter7_reg;
        exitcond5_reg_1427_pp2_iter9_reg <= exitcond5_reg_1427_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond_flatten_reg_1551 <= exitcond_flatten_fu_1024_p2;
        exitcond_flatten_reg_1551_pp3_iter1_reg <= exitcond_flatten_reg_1551;
        tmp_7_reg_1546 <= tmp_7_fu_1018_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        exitcond_flatten_reg_1551_pp3_iter2_reg <= exitcond_flatten_reg_1551_pp3_iter1_reg;
        exitcond_flatten_reg_1551_pp3_iter3_reg <= exitcond_flatten_reg_1551_pp3_iter2_reg;
        exitcond_flatten_reg_1551_pp3_iter4_reg <= exitcond_flatten_reg_1551_pp3_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_544_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_1367 <= i_1_fu_550_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_2_reg_1385 <= i_2_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter3_reg == 1'd0))) begin
        icmp1_reg_1626 <= icmp1_fu_1264_p2;
        tmp_11_reg_1631 <= tmp_11_fu_1270_p2;
        tmp_25_1_reg_1641 <= tmp_25_1_fu_1291_p2;
        tmp_29_1_reg_1647 <= tmp_29_1_fu_1297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((index_load_reg_1360 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
        index <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        index_load_reg_1360 <= index;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter2_reg == 1'd0))) begin
        min_distance_list_0_2_reg_1607[8 : 0] <= min_distance_list_0_2_fu_1171_p1[8 : 0];
        tmp_22_1_reg_1621 <= tmp_22_1_fu_1180_p2;
        tmp_9_reg_1615 <= tmp_9_fu_1174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter1_reg == 1'd0))) begin
        min_distance_list_0_reg_1602 <= min_distance_list_0_fu_1163_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        min_distance_list_2_5_reg_1636 <= min_distance_list_2_5_fu_1283_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_544_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        newIndex_reg_1376 <= newIndex_fu_568_p3;
        tmp_5_reg_1372 <= tmp_5_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        p_0_1_reg_1461 <= p_0_1_fu_698_p2;
        p_0_reg_1456 <= p_0_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
        p_Result_18_reg_1421 <= p_Result_18_fu_657_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_fu_603_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond1_fu_544_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_504 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_510 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state22)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_515 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_520 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state24)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)))) begin
        reg_525 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_530 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state26)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_535 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1551 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        sel_tmp2_i_reg_1597 <= sel_tmp2_i_fu_1112_p2;
        sel_tmp_i_reg_1592 <= sel_tmp_i_fu_1106_p2;
        tmp_15_t_reg_1585 <= tmp_15_t_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427_pp2_iter9_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_10_reg_1488 <= tmp_10_fu_709_p1;
        tmp_13_reg_1495 <= tmp_13_fu_747_p1;
        tmp_14_reg_1502 <= tmp_14_fu_781_p1;
        tmp_17_1_reg_1542 <= tmp_17_1_fu_969_p2;
        tmp_20_reg_1517 <= tmp_20_fu_859_p1;
        tmp_22_reg_1524 <= tmp_22_fu_897_p1;
        tmp_23_reg_1531 <= tmp_23_fu_931_p1;
        tmp_s_reg_1513 <= tmp_s_fu_819_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state27))) begin
        tmp_V_66_reg_1390 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state29))) begin
        tmp_V_67_reg_1396 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
        tmp_V_68_reg_1401 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state31))) begin
        tmp_V_69_reg_1406 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
        tmp_V_70_reg_1411 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state34))) begin
        tmp_V_71_reg_1416 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1427 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        training_set_V_0_loa_reg_1446 <= training_set_V_0_q0;
        training_set_V_1_loa_reg_1451 <= training_set_V_1_q0;
    end
end

always @ (*) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state34)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state30)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state29)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state27)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state26)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state24)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state22)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_fu_603_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3)) | (~((exitcond1_fu_544_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1)) | ((exitcond2_fu_603_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((exitcond1_fu_544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        Output_1_V_V = label_list_1_1_reg_439;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        Output_1_V_V = label_list_2_1_reg_428;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        Output_1_V_V = tmp_V_49_reg_417;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        Output_1_V_V = min_distance_list_1_1_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        Output_1_V_V = min_distance_list_2_1_reg_461;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        Output_1_V_V = tmp_V_46_reg_450;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55))) begin
        Output_1_V_V = 32'd0;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state35))) begin
        Output_1_V_V = tmp_V_66_reg_1390;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state34))) begin
        Output_1_V_V = reg_535;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state33))) begin
        Output_1_V_V = reg_530;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state32))) begin
        Output_1_V_V = reg_525;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state31))) begin
        Output_1_V_V = reg_520;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state30))) begin
        Output_1_V_V = reg_515;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state29))) begin
        Output_1_V_V = reg_510;
    end else if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state28)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_01001)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001)))) begin
        Output_1_V_V = reg_504;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state62)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state61)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state60)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state59)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state58)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state57)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state56)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state55)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state35)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state34)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state33)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state32)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state31)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state30)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state29)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state28)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_01001)) | ((exitcond2_reg_1381 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2)) | ((exitcond2_reg_1381 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1)) | ((exitcond2_reg_1381 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond2_fu_603_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_676_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state36 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state36 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1024_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state49 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state49 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1381 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_i1_phi_fu_215_p4 = i_2_reg_1385;
    end else begin
        ap_phi_mux_i1_phi_fu_215_p4 = i1_reg_211;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_s_reg_1513 == 1'd0) & (exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_0_load_s_phi_fu_339_p8 = tmp_10_reg_1488;
    end else begin
        ap_phi_mux_knn_set_0_load_s_phi_fu_339_p8 = ap_phi_reg_pp2_iter11_knn_set_0_load_s_reg_335;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_s_reg_1513 == 1'd0) & (exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_1_load_s_phi_fu_324_p8 = tmp_13_reg_1495;
    end else begin
        ap_phi_mux_knn_set_1_load_s_phi_fu_324_p8 = ap_phi_reg_pp2_iter11_knn_set_1_load_s_reg_320;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_s_reg_1513 == 1'd0) & (exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_2_load_s_phi_fu_309_p8 = tmp_14_reg_1502;
    end else begin
        ap_phi_mux_knn_set_2_load_s_phi_fu_309_p8 = ap_phi_reg_pp2_iter11_knn_set_2_load_s_reg_305;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_17_1_reg_1542 == 1'd0) & (exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_3_load_s_phi_fu_369_p8 = tmp_20_reg_1517;
    end else begin
        ap_phi_mux_knn_set_3_load_s_phi_fu_369_p8 = ap_phi_reg_pp2_iter11_knn_set_3_load_s_reg_365;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_17_1_reg_1542 == 1'd0) & (exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_4_load_s_phi_fu_354_p8 = tmp_22_reg_1524;
    end else begin
        ap_phi_mux_knn_set_4_load_s_phi_fu_354_p8 = ap_phi_reg_pp2_iter11_knn_set_4_load_s_reg_350;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_17_1_reg_1542 == 1'd0) & (exitcond5_reg_1427_pp2_iter10_reg == 1'd0) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_mux_knn_set_5_load3_phi_fu_384_p8 = tmp_23_reg_1531;
    end else begin
        ap_phi_mux_knn_set_5_load3_phi_fu_384_p8 = ap_phi_reg_pp2_iter11_knn_set_5_load3_reg_380;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1551_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_min_distance_list_1_1_phi_fu_476_p4 = p_min_distance_list_0_1_fu_1318_p3;
    end else begin
        ap_phi_mux_min_distance_list_1_1_phi_fu_476_p4 = min_distance_list_1_1_reg_472;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1551_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_min_distance_list_2_1_phi_fu_465_p4 = min_distance_list_1_2_fu_1310_p3;
    end else begin
        ap_phi_mux_min_distance_list_2_1_phi_fu_465_p4 = min_distance_list_2_1_reg_461;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1551_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_tmp_V_46_phi_fu_454_p4 = min_distance_list_2_5_reg_1636;
    end else begin
        ap_phi_mux_tmp_V_46_phi_fu_454_p4 = tmp_V_46_reg_450;
    end
end

always @ (*) begin
    if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        training_set_V_0_address0 = i3_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        training_set_V_0_address0 = newIndex1_fu_576_p1;
    end else begin
        training_set_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9)))) begin
        training_set_V_0_ce0 = 1'b1;
    end else begin
        training_set_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (tmp_5_reg_1372 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        training_set_V_0_we0 = 1'b1;
    end else begin
        training_set_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        training_set_V_1_address0 = i3_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        training_set_V_1_address0 = newIndex1_fu_576_p1;
    end else begin
        training_set_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9)))) begin
        training_set_V_1_ce0 = 1'b1;
    end else begin
        training_set_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_reg_1372 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9))) begin
        training_set_V_1_we0 = 1'b1;
    end else begin
        training_set_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((index_load_load_fu_540_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((index_load_load_fu_540_p1 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond1_fu_544_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond1_fu_544_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_544_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond2_fu_603_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond2_fu_603_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (exitcond5_fu_676_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter10 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter10 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter11 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (exitcond5_fu_676_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1024_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1024_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((exitcond2_fu_603_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((exitcond2_fu_603_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((exitcond2_fu_603_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_01001 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage2_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_01001 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage3_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_01001 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage4_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage4_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_01001 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage5_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage5_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_01001 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage6_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage6_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_01001 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage7_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage7_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp1_stage0_iter0 = ((exitcond2_fu_603_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state12_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp1_stage1_iter0 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state13_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp1_stage2_iter0 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state14_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp1_stage3_iter0 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state15_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp1_stage4_iter0 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state16_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp1_stage5_iter0 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state17_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp1_stage6_iter0 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state18_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp1_stage7_iter0 = ((exitcond2_reg_1381 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state19_io = ((exitcond2_reg_1381 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((exitcond1_fu_544_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

assign ap_block_state36_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_knn_set_0_load_s_reg_335 = 'bx;

assign ap_phi_reg_pp2_iter0_knn_set_1_load_s_reg_320 = 'bx;

assign ap_phi_reg_pp2_iter0_knn_set_2_load_s_reg_305 = 'bx;

assign ap_phi_reg_pp2_iter0_knn_set_3_load_s_reg_365 = 'bx;

assign ap_phi_reg_pp2_iter0_knn_set_4_load_s_reg_350 = 'bx;

assign ap_phi_reg_pp2_iter0_knn_set_5_load3_reg_380 = 'bx;

assign dist_1_ext_cast1_fu_975_p1 = dist_1_reg_1477;

assign dist_1_ext_cast_fu_984_p1 = dist_1_reg_1477;

assign dist_1_ext_fu_852_p1 = dist_1_reg_1477;

assign dist_ext_cast1_fu_825_p1 = dist_reg_1466;

assign dist_ext_cast_fu_834_p1 = dist_reg_1466;

assign dist_ext_fu_702_p1 = dist_reg_1466;

assign exitcond1_fu_544_p2 = ((i_reg_200 == 10'd900) ? 1'b1 : 1'b0);

assign exitcond1_i_fu_1036_p2 = ((j_0_i_reg_483 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond2_fu_603_p2 = ((ap_phi_mux_i1_phi_fu_215_p4 == 10'd900) ? 1'b1 : 1'b0);

assign exitcond5_fu_676_p2 = ((i5_reg_294 == 9'd450) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1024_p2 = ((indvar_flatten_reg_395 == 3'd6) ? 1'b1 : 1'b0);

assign extLd1_fu_743_p1 = knn_set_1;

assign extLd2_cast_fu_939_p1 = knn_set_5;

assign extLd2_fu_935_p1 = knn_set_5;

assign extLd3_fu_893_p1 = knn_set_4;

assign extLd_cast_fu_789_p1 = knn_set_2;

assign extLd_fu_785_p1 = knn_set_2;

assign i3_fu_688_p1 = i5_reg_294;

assign i_0_i_cast2_fu_1002_p1 = i_0_i_reg_406;

assign i_0_i_cast2_mid1_fu_1056_p1 = i_s_fu_1050_p2;

assign i_0_i_mid2_fu_1078_p3 = ((exitcond1_i_fu_1036_p2[0:0] === 1'b1) ? i_s_fu_1050_p2 : i_0_i_reg_406);

assign i_1_fu_550_p2 = (i_reg_200 + 10'd1);

assign i_2_fu_609_p2 = (ap_phi_mux_i1_phi_fu_215_p4 + 10'd1);

assign i_3_fu_682_p2 = (i5_reg_294 + 9'd1);

assign i_s_fu_1050_p2 = (2'd1 + i_0_i_reg_406);

assign icmp1_fu_1264_p2 = ((tmp_19_fu_1254_p4 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1228_p2 = ((tmp_18_fu_1218_p4 != 4'd0) ? 1'b1 : 1'b0);

assign index_load_load_fu_540_p1 = index;

assign indvar_flatten_next_fu_1030_p2 = (3'd1 + indvar_flatten_reg_395);

assign j_0_i_mid2_fu_1042_p3 = ((exitcond1_i_fu_1036_p2[0:0] === 1'b1) ? 2'd0 : j_0_i_reg_483);

assign j_fu_1086_p2 = (2'd1 + j_0_i_mid2_fu_1042_p3);

assign knn_set_0_load_cast_fu_717_p1 = knn_set_0;

assign knn_set_1_load_cast_fu_751_p1 = knn_set_1;

assign knn_set_3_load_cast_fu_867_p1 = knn_set_3;

assign knn_set_4_load_cast_fu_901_p1 = knn_set_4;

assign label_list_1_2_fu_1346_p3 = ((tmp_25_1_reg_1641[0:0] === 1'b1) ? label_list_1_1_reg_439 : label_list_2_2_9_fu_1339_p3);

assign label_list_2_2_9_fu_1339_p3 = ((tmp_29_1_reg_1647[0:0] === 1'b1) ? 32'd8 : label_list_2_1_reg_428);

assign label_list_2_2_fu_1332_p3 = ((icmp1_reg_1626[0:0] === 1'b1) ? label_list_2_1_reg_428 : label_list_2_3_fu_1325_p3);

assign label_list_2_3_fu_1325_p3 = ((tmp_11_reg_1631[0:0] === 1'b1) ? 32'd8 : tmp_V_49_reg_417);

assign max_dist_0_0_cast_fu_735_p1 = max_dist_0_0_s_fu_727_p3;

assign max_dist_0_0_s_fu_727_p3 = ((tmp_2_fu_721_p2[0:0] === 1'b1) ? knn_set_0_load_cast_fu_717_p1 : 31'd0);

assign max_dist_0_1_max_dis_1_fu_769_p1 = max_dist_0_1_max_dis_fu_761_p3;

assign max_dist_0_1_max_dis_fu_761_p3 = ((tmp_19_0_1_fu_755_p2[0:0] === 1'b1) ? knn_set_1_load_cast_fu_751_p1 : max_dist_0_0_s_fu_727_p3);

assign max_dist_0_2_max_dis_1_fu_807_p1 = max_dist_0_2_max_dis_fu_799_p3;

assign max_dist_0_2_max_dis_fu_799_p3 = ((tmp_19_0_2_fu_793_p2[0:0] === 1'b1) ? extLd_cast_fu_789_p1 : max_dist_0_1_max_dis_fu_761_p3);

assign max_dist_1_0_cast_fu_885_p1 = max_dist_1_0_s_fu_877_p3;

assign max_dist_1_0_s_fu_877_p3 = ((tmp_19_1_fu_871_p2[0:0] === 1'b1) ? knn_set_3_load_cast_fu_867_p1 : 31'd0);

assign max_dist_1_1_max_dis_1_fu_919_p1 = max_dist_1_1_max_dis_fu_911_p3;

assign max_dist_1_1_max_dis_fu_911_p3 = ((tmp_19_1_1_fu_905_p2[0:0] === 1'b1) ? knn_set_4_load_cast_fu_901_p1 : max_dist_1_0_s_fu_877_p3);

assign max_dist_1_2_max_dis_1_fu_957_p1 = max_dist_1_2_max_dis_fu_949_p3;

assign max_dist_1_2_max_dis_fu_949_p3 = ((tmp_19_1_2_fu_943_p2[0:0] === 1'b1) ? extLd2_cast_fu_939_p1 : max_dist_1_1_max_dis_fu_911_p3);

assign min_distance_list_0_2_fu_1171_p1 = min_distance_list_0_reg_1602;

assign min_distance_list_0_fu_1163_p3 = ((sel_tmp8_i_fu_1158_p2[0:0] === 1'b1) ? knn_set_4_load_1_reg_222 : sel_tmp7_i_fu_1150_p3);

assign min_distance_list_1_2_fu_1310_p3 = ((tmp_25_1_fu_1291_p2[0:0] === 1'b1) ? min_distance_list_1_1_reg_472 : min_distance_list_2_4_fu_1303_p3);

assign min_distance_list_2_3_fu_1276_p3 = ((tmp_11_fu_1270_p2[0:0] === 1'b1) ? min_distance_list_0_2_reg_1607 : ap_phi_mux_tmp_V_46_phi_fu_454_p4);

assign min_distance_list_2_4_fu_1303_p3 = ((tmp_29_1_fu_1297_p2[0:0] === 1'b1) ? min_distance_list_0_2_reg_1607 : min_distance_list_2_1_reg_461);

assign min_distance_list_2_5_fu_1283_p3 = ((icmp1_fu_1264_p2[0:0] === 1'b1) ? min_distance_list_2_1_reg_461 : min_distance_list_2_3_fu_1276_p3);

assign newIndex1_fu_576_p1 = newIndex_reg_1376;

assign newIndex_fu_568_p3 = ((tmp_5_fu_556_p2[0:0] === 1'b1) ? i_reg_200 : tmp_1_fu_562_p2);

assign not_tmp_s_fu_1193_p2 = (tmp_9_reg_1615 ^ 1'd1);

assign p_0_1_fu_698_p2 = (training_set_V_1_loa_reg_1451 ^ p_Result_18_reg_1421);

assign p_0_fu_694_p2 = (training_set_V_0_loa_reg_1446 ^ p_Result_18_reg_1421);

assign p_1_cast_fu_923_p1 = tmp_19_1_1_fu_905_p2;

assign p_1_fu_961_p3 = ((tmp_19_1_2_fu_943_p2[0:0] === 1'b1) ? 2'd2 : p_1_cast_fu_923_p1);

assign p_Result_18_fu_657_p9 = {{{{{{{{reg_504}, {reg_510}}, {reg_515}}, {reg_520}}, {reg_525}}, {reg_530}}, {reg_535}}, {tmp_V_66_reg_1390}};

assign p_Result_s_fu_581_p9 = {{{{{{{{reg_504}, {reg_510}}, {reg_515}}, {reg_520}}, {reg_525}}, {reg_530}}, {reg_535}}, {Input_1_V_V}};

assign p_cast_fu_773_p1 = tmp_19_0_1_fu_755_p2;

assign p_label_list_0_1_fu_1353_p3 = ((tmp_25_1_reg_1641[0:0] === 1'b1) ? 32'd8 : label_list_1_1_reg_439);

assign p_min_distance_list_0_1_fu_1318_p3 = ((tmp_25_1_fu_1291_p2[0:0] === 1'b1) ? min_distance_list_0_2_reg_1607 : min_distance_list_1_1_reg_472);

assign p_s_fu_811_p3 = ((tmp_19_0_2_fu_793_p2[0:0] === 1'b1) ? 2'd2 : p_cast_fu_773_p1);

assign p_shl2_fu_1010_p3 = {{tmp_15_fu_1006_p1}, {2'd0}};

assign p_shl2_mid1_fu_1064_p3 = {{tmp_16_fu_1060_p1}, {2'd0}};

assign p_trunc5_ext_cast_fu_993_p1 = dist_1_reg_1477;

assign p_trunc_ext_cast_fu_843_p1 = dist_reg_1466;

assign phitmp_i_1_cast_cast_fu_1198_p1 = not_tmp_s_fu_1193_p2;

assign phitmp_i_2_cast_cast_fu_1242_p1 = phitmp_i_2_fu_1234_p3;

assign phitmp_i_2_fu_1234_p3 = ((icmp_fu_1228_p2[0:0] === 1'b1) ? 2'd2 : tmp_17_fu_1209_p1);

assign pos_1_fu_1202_p3 = ((tmp_22_1_reg_1621[0:0] === 1'b1) ? phitmp_i_1_cast_cast_fu_1198_p1 : pos_fu_1186_p3);

assign pos_2_fu_1246_p3 = ((tmp_22_2_fu_1213_p2[0:0] === 1'b1) ? phitmp_i_2_cast_cast_fu_1242_p1 : pos_1_fu_1202_p3);

assign pos_fu_1186_p3 = ((tmp_9_reg_1615[0:0] === 1'b1) ? 6'd0 : 6'd40);

assign sel_tmp1_i_fu_1118_p3 = ((sel_tmp_i_reg_1592[0:0] === 1'b1) ? knn_set_0_load_1_reg_270 : knn_set_5_load_reg_282);

assign sel_tmp2_i_fu_1112_p2 = ((tmp_15_t_fu_1100_p2 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp3_i_fu_1125_p3 = ((sel_tmp2_i_reg_1597[0:0] === 1'b1) ? knn_set_1_load_1_reg_258 : sel_tmp1_i_fu_1118_p3);

assign sel_tmp4_i_fu_1132_p2 = ((tmp_15_t_reg_1585 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_i_fu_1137_p3 = ((sel_tmp4_i_fu_1132_p2[0:0] === 1'b1) ? knn_set_2_load_1_reg_246 : sel_tmp3_i_fu_1125_p3);

assign sel_tmp6_i_fu_1145_p2 = ((tmp_15_t_reg_1585 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp7_i_fu_1150_p3 = ((sel_tmp6_i_fu_1145_p2[0:0] === 1'b1) ? knn_set_3_load_1_reg_234 : sel_tmp5_i_fu_1137_p3);

assign sel_tmp8_i_fu_1158_p2 = ((tmp_15_t_reg_1585 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp_i_fu_1106_p2 = ((tmp_15_t_fu_1100_p2 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_10_fu_709_p1 = knn_set_0[8:0];

assign tmp_11_fu_1270_p2 = ((pos_2_fu_1246_p3 == 6'd2) ? 1'b1 : 1'b0);

assign tmp_12_fu_713_p1 = knn_set_0[9:0];

assign tmp_13_fu_747_p1 = knn_set_1[8:0];

assign tmp_14_fu_781_p1 = knn_set_2[8:0];

assign tmp_15_fu_1006_p1 = i_0_i_reg_406[0:0];

assign tmp_15_t_fu_1100_p2 = (tmp_7_mid2_fu_1092_p3 + tmp_8_fu_1097_p1);

assign tmp_16_fu_1060_p1 = i_s_fu_1050_p2[0:0];

assign tmp_17_1_fu_969_p2 = ((dist_1_ext_fu_852_p1 < max_dist_1_2_max_dis_1_fu_957_p1) ? 1'b1 : 1'b0);

assign tmp_17_fu_1209_p1 = pos_1_fu_1202_p3[1:0];

assign tmp_18_fu_1218_p4 = {{pos_1_fu_1202_p3[5:2]}};

assign tmp_19_0_1_fu_755_p2 = ((extLd1_fu_743_p1 > max_dist_0_0_cast_fu_735_p1) ? 1'b1 : 1'b0);

assign tmp_19_0_2_fu_793_p2 = ((extLd_fu_785_p1 > max_dist_0_1_max_dis_1_fu_769_p1) ? 1'b1 : 1'b0);

assign tmp_19_1_1_fu_905_p2 = ((extLd3_fu_893_p1 > max_dist_1_0_cast_fu_885_p1) ? 1'b1 : 1'b0);

assign tmp_19_1_2_fu_943_p2 = ((extLd2_fu_935_p1 > max_dist_1_1_max_dis_1_fu_919_p1) ? 1'b1 : 1'b0);

assign tmp_19_1_fu_871_p2 = (($signed(tmp_21_fu_863_p1) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign tmp_19_fu_1254_p4 = {{pos_2_fu_1246_p3[5:1]}};

assign tmp_1_fu_562_p2 = ($signed(i_reg_200) + $signed(10'd574));

assign tmp_20_fu_859_p1 = knn_set_3[8:0];

assign tmp_21_fu_863_p1 = knn_set_3[9:0];

assign tmp_22_1_fu_1180_p2 = (($signed(min_distance_list_0_2_fu_1171_p1) < $signed(ap_phi_mux_min_distance_list_2_1_phi_fu_465_p4)) ? 1'b1 : 1'b0);

assign tmp_22_2_fu_1213_p2 = (($signed(min_distance_list_0_2_reg_1607) < $signed(ap_phi_mux_tmp_V_46_phi_fu_454_p4)) ? 1'b1 : 1'b0);

assign tmp_22_fu_897_p1 = knn_set_4[8:0];

assign tmp_23_fu_931_p1 = knn_set_5[8:0];

assign tmp_25_1_fu_1291_p2 = ((pos_2_fu_1246_p3 == 6'd0) ? 1'b1 : 1'b0);

assign tmp_29_1_fu_1297_p2 = ((pos_2_fu_1246_p3 == 6'd1) ? 1'b1 : 1'b0);

assign tmp_2_fu_721_p2 = (($signed(tmp_12_fu_713_p1) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign tmp_5_fu_556_p2 = ((i_reg_200 < 10'd450) ? 1'b1 : 1'b0);

assign tmp_7_fu_1018_p2 = (p_shl2_fu_1010_p3 - i_0_i_cast2_fu_1002_p1);

assign tmp_7_mid1_fu_1072_p2 = (p_shl2_mid1_fu_1064_p3 - i_0_i_cast2_mid1_fu_1056_p1);

assign tmp_7_mid2_fu_1092_p3 = ((exitcond1_i_reg_1560[0:0] === 1'b1) ? tmp_7_mid1_reg_1570 : tmp_7_reg_1546);

assign tmp_8_fu_1097_p1 = j_0_i_mid2_reg_1565;

assign tmp_9_fu_1174_p2 = (($signed(min_distance_list_0_2_fu_1171_p1) < $signed(ap_phi_mux_min_distance_list_1_1_phi_fu_476_p4)) ? 1'b1 : 1'b0);

assign tmp_s_fu_819_p2 = ((dist_ext_fu_702_p1 < max_dist_0_2_max_dis_1_fu_807_p1) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    knn_set_0[10:9] <= 2'b00;
    knn_set_1[10:9] <= 2'b00;
    knn_set_2[10:9] <= 2'b00;
    knn_set_3[10:9] <= 2'b00;
    knn_set_4[10:9] <= 2'b00;
    knn_set_5[10:9] <= 2'b00;
    min_distance_list_0_2_reg_1607[31:9] <= 23'b00000000000000000000000;
end

endmodule //update_knn9
