// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module update_knn5_update_knn10_sub (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        Input_1_dout,
        Input_1_empty_n,
        Input_1_read,
        Output_1_V_TDATA,
        Output_1_V_TVALID,
        Output_1_V_TREADY
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_pp0_stage0 = 61'd2;
parameter    ap_ST_fsm_pp0_stage1 = 61'd4;
parameter    ap_ST_fsm_pp0_stage2 = 61'd8;
parameter    ap_ST_fsm_pp0_stage3 = 61'd16;
parameter    ap_ST_fsm_pp0_stage4 = 61'd32;
parameter    ap_ST_fsm_pp0_stage5 = 61'd64;
parameter    ap_ST_fsm_pp0_stage6 = 61'd128;
parameter    ap_ST_fsm_pp0_stage7 = 61'd256;
parameter    ap_ST_fsm_state11 = 61'd512;
parameter    ap_ST_fsm_state12 = 61'd1024;
parameter    ap_ST_fsm_state13 = 61'd2048;
parameter    ap_ST_fsm_state14 = 61'd4096;
parameter    ap_ST_fsm_state15 = 61'd8192;
parameter    ap_ST_fsm_state16 = 61'd16384;
parameter    ap_ST_fsm_state17 = 61'd32768;
parameter    ap_ST_fsm_state18 = 61'd65536;
parameter    ap_ST_fsm_state19 = 61'd131072;
parameter    ap_ST_fsm_state20 = 61'd262144;
parameter    ap_ST_fsm_state21 = 61'd524288;
parameter    ap_ST_fsm_state22 = 61'd1048576;
parameter    ap_ST_fsm_state23 = 61'd2097152;
parameter    ap_ST_fsm_state24 = 61'd4194304;
parameter    ap_ST_fsm_state25 = 61'd8388608;
parameter    ap_ST_fsm_state26 = 61'd16777216;
parameter    ap_ST_fsm_state27 = 61'd33554432;
parameter    ap_ST_fsm_state28 = 61'd67108864;
parameter    ap_ST_fsm_state29 = 61'd134217728;
parameter    ap_ST_fsm_state30 = 61'd268435456;
parameter    ap_ST_fsm_state31 = 61'd536870912;
parameter    ap_ST_fsm_state32 = 61'd1073741824;
parameter    ap_ST_fsm_state33 = 61'd2147483648;
parameter    ap_ST_fsm_state34 = 61'd4294967296;
parameter    ap_ST_fsm_state35 = 61'd8589934592;
parameter    ap_ST_fsm_state36 = 61'd17179869184;
parameter    ap_ST_fsm_state37 = 61'd34359738368;
parameter    ap_ST_fsm_state38 = 61'd68719476736;
parameter    ap_ST_fsm_state39 = 61'd137438953472;
parameter    ap_ST_fsm_state40 = 61'd274877906944;
parameter    ap_ST_fsm_state41 = 61'd549755813888;
parameter    ap_ST_fsm_state42 = 61'd1099511627776;
parameter    ap_ST_fsm_state43 = 61'd2199023255552;
parameter    ap_ST_fsm_state44 = 61'd4398046511104;
parameter    ap_ST_fsm_state45 = 61'd8796093022208;
parameter    ap_ST_fsm_state46 = 61'd17592186044416;
parameter    ap_ST_fsm_state47 = 61'd35184372088832;
parameter    ap_ST_fsm_state48 = 61'd70368744177664;
parameter    ap_ST_fsm_state49 = 61'd140737488355328;
parameter    ap_ST_fsm_state50 = 61'd281474976710656;
parameter    ap_ST_fsm_state51 = 61'd562949953421312;
parameter    ap_ST_fsm_state52 = 61'd1125899906842624;
parameter    ap_ST_fsm_state53 = 61'd2251799813685248;
parameter    ap_ST_fsm_state54 = 61'd4503599627370496;
parameter    ap_ST_fsm_state55 = 61'd9007199254740992;
parameter    ap_ST_fsm_state56 = 61'd18014398509481984;
parameter    ap_ST_fsm_state57 = 61'd36028797018963968;
parameter    ap_ST_fsm_state58 = 61'd72057594037927936;
parameter    ap_ST_fsm_state59 = 61'd144115188075855872;
parameter    ap_ST_fsm_state60 = 61'd288230376151711744;
parameter    ap_ST_fsm_state61 = 61'd576460752303423488;
parameter    ap_ST_fsm_state62 = 61'd1152921504606846976;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_dout;
input   Input_1_empty_n;
output   Input_1_read;
output  [31:0] Output_1_V_TDATA;
output   Output_1_V_TVALID;
input   Output_1_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] index10;
reg   [8:0] knn_set10_0;
reg   [8:0] knn_set10_1;
reg   [8:0] knn_set10_2;
reg   [8:0] knn_set10_3;
reg   [8:0] knn_set10_4;
reg   [8:0] knn_set10_5;
reg   [8:0] training_set10_V_0_address0;
reg    training_set10_V_0_ce0;
reg    training_set10_V_0_we0;
wire   [255:0] training_set10_V_0_q0;
reg   [8:0] training_set10_V_1_address0;
reg    training_set10_V_1_ce0;
reg    training_set10_V_1_we0;
wire   [255:0] training_set10_V_1_q0;
reg    Input_1_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln477_reg_2503;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg    Output_1_V_TDATA_blk_n;
wire    ap_CS_fsm_state11;
reg   [0:0] index10_load_reg_2494;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
reg   [9:0] i_reg_338;
reg   [31:0] reg_770;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] reg_775;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] reg_781;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] reg_786;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg   [31:0] reg_791;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg   [31:0] reg_797;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] reg_803;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
wire   [0:0] index10_load_load_fu_807_p1;
wire   [9:0] add_ln477_fu_811_p2;
reg   [9:0] add_ln477_reg_2498;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln477_fu_821_p2;
wire   [0:0] icmp_ln414_fu_827_p2;
reg   [0:0] icmp_ln414_reg_2507;
wire   [8:0] select_ln414_fu_839_p3;
reg   [8:0] select_ln414_reg_2511;
wire   [255:0] p_Result_21_fu_916_p9;
reg   [255:0] p_Result_21_reg_2516;
wire   [9:0] add_ln553_fu_936_p2;
reg   [9:0] add_ln553_reg_2521;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln553_fu_942_p2;
wire   [1:0] select_ln553_fu_954_p3;
reg   [1:0] select_ln553_reg_2530;
wire   [8:0] select_ln553_1_fu_968_p3;
reg   [8:0] select_ln553_1_reg_2537;
wire   [0:0] trunc_ln558_fu_976_p1;
reg   [0:0] trunc_ln558_reg_2543;
wire   [31:0] p_cast32_fu_980_p1;
reg   [31:0] p_cast32_reg_2548;
wire   [31:0] p_cast33_fu_984_p1;
reg   [31:0] p_cast33_reg_2553;
wire   [31:0] p_cast34_fu_988_p1;
reg   [31:0] p_cast34_reg_2558;
wire   [31:0] p_cast35_fu_992_p1;
reg   [31:0] p_cast35_reg_2563;
wire   [31:0] p_cast36_fu_996_p1;
reg   [31:0] p_cast36_reg_2568;
wire   [31:0] p_cast37_fu_1000_p1;
reg   [31:0] p_cast37_reg_2573;
wire    ap_CS_fsm_state29;
wire   [9:0] add_ln557_fu_1033_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] icmp_ln557_fu_1045_p2;
reg   [0:0] icmp_ln557_reg_2588;
wire    ap_CS_fsm_state45;
wire   [2:0] sub_ln45_fu_1074_p2;
reg   [2:0] sub_ln45_reg_2603;
wire    ap_CS_fsm_state46;
wire   [255:0] p_Val2_s_fu_1080_p2;
reg   [255:0] p_Val2_s_reg_2609;
wire   [8:0] i_14_fu_1093_p2;
wire    ap_CS_fsm_state47;
wire   [0:0] tmp_24_fu_1085_p3;
wire   [8:0] cnt_2_fu_1211_p2;
wire   [31:0] zext_ln25_2_fu_1217_p1;
reg   [31:0] zext_ln25_2_reg_2630;
wire    ap_CS_fsm_state48;
wire   [31:0] zext_ln36_8_fu_1225_p1;
reg   [31:0] zext_ln36_8_reg_2638;
wire   [31:0] zext_ln36_9_fu_1233_p1;
reg   [31:0] zext_ln36_9_reg_2646;
wire   [31:0] zext_ln36_10_fu_1241_p1;
reg   [31:0] zext_ln36_10_reg_2654;
wire   [31:0] zext_ln36_11_fu_1249_p1;
reg   [31:0] zext_ln36_11_reg_2662;
wire   [31:0] zext_ln36_12_fu_1257_p1;
reg   [31:0] zext_ln36_12_reg_2670;
wire   [31:0] zext_ln36_13_fu_1265_p1;
reg   [31:0] zext_ln36_13_reg_2678;
wire   [1:0] add_ln34_fu_1269_p2;
wire    ap_CS_fsm_state49;
wire   [31:0] max_dist_id_2_fu_1312_p3;
wire   [0:0] icmp_ln34_fu_1275_p2;
wire   [31:0] max_dist_2_fu_1320_p3;
wire   [1:0] add_ln555_fu_1378_p2;
wire   [2:0] add_ln369_fu_1383_p2;
reg   [2:0] add_ln369_reg_2712;
wire    ap_CS_fsm_state50;
wire   [1:0] select_ln369_2_fu_1467_p3;
reg   [1:0] select_ln369_2_reg_2720;
wire   [0:0] icmp_ln369_fu_1411_p2;
wire   [2:0] p_t_fu_1479_p2;
reg   [2:0] p_t_reg_2725;
wire   [1:0] add_ln371_fu_1485_p2;
reg   [1:0] add_ln371_reg_2730;
wire   [31:0] min_distance_list_2_fu_1491_p8;
reg   [31:0] min_distance_list_2_reg_2735;
wire    ap_CS_fsm_state51;
wire   [5:0] select_ln379_fu_1536_p3;
reg   [5:0] select_ln379_reg_2743;
wire   [0:0] icmp_ln378_2_fu_1544_p2;
reg   [0:0] icmp_ln378_2_reg_2748;
reg   [3:0] tmp_25_reg_2753;
wire   [31:0] select_ln379_2_fu_1613_p3;
wire    ap_CS_fsm_state52;
wire   [31:0] min_distance_list_0_3_fu_1629_p3;
wire   [31:0] select_ln393_fu_1668_p3;
wire   [31:0] min_distance_list_0_5_fu_1684_p3;
wire   [31:0] select_ln393_2_fu_1699_p3;
wire   [31:0] min_distance_list_0_7_fu_1715_p3;
wire   [31:0] select_ln388_6_fu_1722_p3;
wire   [31:0] min_distance_list_1_5_fu_1730_p3;
wire   [31:0] select_ln388_8_fu_1737_p3;
wire   [1:0] add_ln433_fu_1845_p2;
wire    ap_CS_fsm_state54;
wire   [0:0] icmp_ln446_fu_2041_p2;
reg   [0:0] icmp_ln446_reg_2960;
wire    ap_CS_fsm_state55;
wire   [1:0] max_vote_1_fu_2077_p3;
reg   [1:0] max_vote_1_reg_2968;
wire    ap_CS_fsm_state56;
wire   [31:0] phi_ln_fu_2089_p18;
reg   [31:0] phi_ln_reg_2973;
wire   [1:0] max_vote_2_fu_2142_p3;
reg   [1:0] max_vote_2_reg_2984;
wire    ap_CS_fsm_state57;
wire   [0:0] icmp_ln446_3_fu_2188_p2;
reg   [0:0] icmp_ln446_3_reg_2989;
wire   [2:0] max_vote_4_fu_2251_p3;
reg   [2:0] max_vote_4_reg_2997;
wire    ap_CS_fsm_state58;
wire   [31:0] phi_ln446_3_fu_2263_p18;
reg   [31:0] phi_ln446_3_reg_3002;
wire   [2:0] max_vote_5_fu_2313_p3;
reg   [2:0] max_vote_5_reg_3013;
wire    ap_CS_fsm_state59;
wire   [0:0] icmp_ln446_6_fu_2356_p2;
reg   [0:0] icmp_ln446_6_reg_3018;
wire   [3:0] max_vote_7_fu_2415_p3;
reg   [3:0] max_vote_7_reg_3023;
wire    ap_CS_fsm_state60;
wire   [31:0] phi_ln446_6_fu_2423_p18;
reg   [31:0] phi_ln446_6_reg_3028;
wire   [31:0] p_Result_22_fu_2478_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage7_subdone;
reg   [9:0] ap_phi_mux_i_phi_fu_342_p4;
reg   [8:0] knn_set10_5_load_reg_349;
reg   [8:0] ap_phi_mux_knn_set10_5_load29_phi_fu_508_p14;
reg   [8:0] knn_set10_4_load_reg_360;
reg   [8:0] ap_phi_mux_knn_set10_4_load26_phi_fu_530_p14;
reg   [8:0] knn_set10_3_load_reg_371;
reg   [8:0] ap_phi_mux_knn_set10_3_load23_phi_fu_552_p14;
reg   [8:0] knn_set10_2_load_reg_382;
reg   [8:0] ap_phi_mux_knn_set10_2_load20_phi_fu_574_p14;
reg   [8:0] knn_set10_1_load_reg_393;
reg   [8:0] ap_phi_mux_knn_set10_1_load17_phi_fu_596_p14;
reg   [8:0] knn_set10_0_load_reg_404;
reg   [8:0] ap_phi_mux_knn_set10_0_load14_phi_fu_618_p14;
reg   [9:0] indvar_flatten_reg_415;
reg   [8:0] i_5_reg_426;
reg   [1:0] j_reg_437;
reg   [8:0] dist_reg_448;
reg   [8:0] i_10_reg_460;
reg   [1:0] k_reg_471;
reg   [31:0] max_dist_reg_482;
reg   [31:0] max_dist_id_reg_493;
wire   [0:0] icmp_ln44_fu_1328_p2;
wire   [2:0] add_ln45_fu_1337_p2;
reg   [2:0] indvar_flatten10_reg_636;
reg   [1:0] i_6_reg_647;
reg   [31:0] label_list_2_1_reg_658;
reg   [31:0] label_list_1_1_reg_668;
reg   [31:0] label_list_0_1_reg_678;
reg   [31:0] min_distance_list_2_1_reg_688;
reg   [31:0] min_distance_list_1_1_reg_698;
reg   [31:0] min_distance_list_1_3_reg_708;
reg   [1:0] j_2_reg_718;
reg   [31:0] label_list_1_2_reg_729;
reg   [31:0] label_list_2_2_reg_739;
reg   [31:0] min_distance_list_2_3_reg_749;
reg   [1:0] i_15_reg_759;
wire   [0:0] icmp_ln433_fu_1851_p2;
wire    ap_CS_fsm_state53;
wire   [63:0] zext_ln414_fu_847_p1;
wire   [63:0] zext_ln557_1_fu_1051_p1;
reg    ap_block_state12;
reg    ap_block_state12_io;
reg   [31:0] vote_list_9_fu_202;
wire   [31:0] vote_list_0_fu_1929_p2;
wire   [3:0] trunc_ln436_fu_1899_p1;
reg   [31:0] vote_list_9_1_fu_206;
reg   [31:0] vote_list_9_2_fu_210;
reg   [31:0] vote_list_9_3_fu_214;
reg   [31:0] vote_list_9_4_fu_218;
reg   [31:0] vote_list_9_5_fu_222;
reg   [31:0] vote_list_9_6_fu_226;
reg   [31:0] vote_list_9_7_fu_230;
reg   [31:0] vote_list_9_8_fu_234;
reg   [31:0] vote_list_9_9_fu_238;
reg   [31:0] vote_list_9_10_fu_242;
reg   [31:0] vote_list_9_11_fu_246;
reg   [31:0] vote_list_9_12_fu_250;
reg   [31:0] vote_list_9_13_fu_254;
reg   [31:0] vote_list_9_14_fu_258;
reg   [31:0] vote_list_9_15_fu_262;
reg   [31:0] vote_list_9_16_fu_266;
reg   [31:0] vote_list_9_17_fu_270;
reg   [31:0] vote_list_9_18_fu_274;
reg   [31:0] vote_list_9_19_fu_278;
wire   [255:0] p_Result_s_fu_852_p9;
wire   [8:0] empty_fu_817_p1;
wire   [8:0] add_ln414_fu_833_p2;
wire   [0:0] icmp_ln555_fu_948_p2;
wire   [8:0] add_ln553_1_fu_962_p2;
wire   [1:0] mul_ln557_fu_1007_p0;
wire   [15:0] mul_ln557_fu_1007_p2;
wire   [32:0] grp_fu_2487_p2;
wire   [8:0] trunc_ln_fu_1020_p4;
wire   [9:0] zext_ln557_fu_1029_p1;
wire   [9:0] zext_ln553_fu_1017_p1;
wire   [9:0] grp_fu_1039_p2;
wire   [2:0] shl_ln_fu_1067_p3;
wire   [2:0] zext_ln555_fu_1057_p1;
wire   [255:0] train_inst_V_fu_1060_p3;
wire   [31:0] zext_ln25_fu_1099_p1;
wire   [0:0] tmp_27_fu_1107_p3;
wire   [7:0] trunc_ln25_fu_1103_p1;
wire   [7:0] i_11_fu_1118_p2;
wire   [31:0] zext_ln8_fu_1124_p1;
wire   [0:0] tmp_28_fu_1128_p3;
wire   [7:0] i_12_fu_1139_p2;
wire   [31:0] zext_ln8_3_fu_1145_p1;
wire   [0:0] tmp_29_fu_1149_p3;
wire   [7:0] i_13_fu_1160_p2;
wire   [31:0] zext_ln8_4_fu_1166_p1;
wire   [0:0] tmp_30_fu_1170_p3;
wire   [1:0] zext_ln8_6_fu_1114_p1;
wire   [1:0] zext_ln8_7_fu_1135_p1;
wire   [1:0] add_ln11_fu_1181_p2;
wire   [1:0] zext_ln8_8_fu_1156_p1;
wire   [1:0] zext_ln11_fu_1177_p1;
wire   [1:0] add_ln11_4_fu_1191_p2;
wire   [2:0] zext_ln11_5_fu_1197_p1;
wire   [2:0] zext_ln11_4_fu_1187_p1;
wire   [2:0] add_ln11_5_fu_1201_p2;
wire   [8:0] zext_ln11_6_fu_1207_p1;
wire   [2:0] zext_ln36_fu_1281_p1;
wire   [2:0] tmp_fu_1290_p7;
wire   [31:0] tmp_fu_1290_p8;
wire   [0:0] icmp_ln36_fu_1302_p2;
wire   [31:0] zext_ln36_2_fu_1308_p1;
wire   [2:0] trunc_ln45_fu_1333_p1;
wire   [0:0] empty_34_fu_1393_p1;
wire   [2:0] p_shl4_fu_1397_p3;
wire   [2:0] zext_ln369_fu_1389_p1;
wire   [0:0] icmp_ln371_fu_1417_p2;
wire   [1:0] add_ln369_1_fu_1431_p2;
wire   [0:0] empty_37_fu_1441_p1;
wire   [2:0] p_shl4_mid1_fu_1445_p3;
wire   [2:0] zext_ln369_1_fu_1437_p1;
wire   [2:0] p_mid1_fu_1453_p2;
wire   [2:0] empty_35_fu_1405_p2;
wire   [1:0] select_ln369_fu_1423_p3;
wire   [2:0] select_ln369_1_fu_1459_p3;
wire   [2:0] j_2_cast_fu_1475_p1;
wire   [0:0] icmp_ln378_fu_1502_p2;
wire   [0:0] icmp_ln378_1_fu_1508_p2;
wire   [0:0] xor_ln380_fu_1514_p2;
wire   [0:0] and_ln379_fu_1520_p2;
wire   [0:0] or_ln379_fu_1530_p2;
wire   [5:0] zext_ln379_fu_1526_p1;
wire   [0:0] icmp_ln380_fu_1560_p2;
wire   [0:0] and_ln379_1_fu_1565_p2;
wire   [5:0] select_ln379_1_fu_1570_p3;
wire   [4:0] tmp_26_fu_1577_p4;
wire   [0:0] icmp_ln388_fu_1587_p2;
wire   [0:0] xor_ln388_fu_1601_p2;
wire   [0:0] and_ln379_2_fu_1607_p2;
wire   [31:0] select_ln388_fu_1593_p3;
wire   [31:0] min_distance_list_0_2_fu_1621_p3;
wire   [0:0] icmp_ln388_1_fu_1636_p2;
wire   [0:0] icmp_ln393_fu_1642_p2;
wire   [0:0] xor_ln388_1_fu_1656_p2;
wire   [0:0] and_ln393_fu_1662_p2;
wire   [31:0] select_ln388_2_fu_1648_p3;
wire   [31:0] min_distance_list_0_4_fu_1676_p3;
wire   [31:0] select_ln388_4_fu_1691_p3;
wire   [31:0] min_distance_list_0_6_fu_1707_p3;
wire   [31:0] tmp_s_fu_1887_p5;
wire   [3:0] tmp_1_fu_1903_p11;
wire   [31:0] tmp_1_fu_1903_p12;
wire   [0:0] max_vote_fu_2050_p2;
wire   [31:0] select_ln446_fu_2059_p3;
wire   [0:0] icmp_ln446_1_fu_2065_p2;
wire   [0:0] xor_ln446_fu_2071_p2;
wire   [1:0] zext_ln439_fu_2055_p1;
wire   [3:0] phi_ln_fu_2089_p17;
wire   [0:0] icmp_ln446_2_fu_2131_p2;
wire   [0:0] xor_ln446_1_fu_2136_p2;
wire   [3:0] phi_ln446_1_fu_2153_p17;
wire   [31:0] phi_ln446_1_fu_2153_p18;
wire   [0:0] xor_ln446_2_fu_2200_p2;
wire   [2:0] zext_ln439_1_fu_2197_p1;
wire   [2:0] max_vote_3_fu_2205_p3;
wire   [3:0] phi_ln446_2_fu_2217_p17;
wire   [31:0] phi_ln446_2_fu_2217_p18;
wire   [0:0] icmp_ln446_4_fu_2239_p2;
wire   [0:0] xor_ln446_3_fu_2245_p2;
wire   [3:0] phi_ln446_3_fu_2263_p17;
wire   [0:0] icmp_ln446_5_fu_2302_p2;
wire   [0:0] xor_ln446_4_fu_2307_p2;
wire   [3:0] phi_ln446_4_fu_2324_p17;
wire   [31:0] phi_ln446_4_fu_2324_p18;
wire   [0:0] xor_ln446_5_fu_2365_p2;
wire   [2:0] max_vote_6_fu_2370_p3;
wire   [3:0] zext_ln439_2_fu_2377_p1;
wire   [31:0] phi_ln446_5_fu_2381_p18;
wire   [0:0] icmp_ln446_7_fu_2403_p2;
wire   [0:0] xor_ln446_6_fu_2409_p2;
wire   [3:0] phi_ln446_6_fu_2423_p17;
wire   [0:0] icmp_ln446_8_fu_2456_p2;
wire   [0:0] xor_ln446_7_fu_2461_p2;
wire   [3:0] max_vote_8_fu_2467_p3;
wire   [7:0] zext_ln439_3_fu_2474_p1;
wire   [15:0] grp_fu_2487_p0;
wire   [17:0] grp_fu_2487_p1;
reg    grp_fu_1039_ap_start;
wire    grp_fu_1039_ap_done;
wire    regslice_both_Output_1_V_U_apdone_blk;
reg    ap_block_state62;
reg   [60:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg   [31:0] Output_1_V_TDATA_int_regslice;
reg    Output_1_V_TVALID_int_regslice;
wire    Output_1_V_TREADY_int_regslice;
wire    regslice_both_Output_1_V_U_vld_out;
wire   [32:0] grp_fu_2487_p00;
wire   [15:0] mul_ln557_fu_1007_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 61'd1;
#0 index10 = 1'd0;
#0 knn_set10_0 = 9'd0;
#0 knn_set10_1 = 9'd0;
#0 knn_set10_2 = 9'd0;
#0 knn_set10_3 = 9'd0;
#0 knn_set10_4 = 9'd0;
#0 knn_set10_5 = 9'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

update_knn5_update_knn9_sub_training_set9_V_0 #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set10_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set10_V_0_address0),
    .ce0(training_set10_V_0_ce0),
    .we0(training_set10_V_0_we0),
    .d0(p_Result_s_fu_852_p9),
    .q0(training_set10_V_0_q0)
);

update_knn5_update_knn9_sub_training_set9_V_0 #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set10_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set10_V_1_address0),
    .ce0(training_set10_V_1_ce0),
    .we0(training_set10_V_1_we0),
    .d0(p_Result_s_fu_852_p9),
    .q0(training_set10_V_1_q0)
);

update_knn5_mul_2ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_2ns_16ns_16_1_1_U14(
    .din0(mul_ln557_fu_1007_p0),
    .din1(16'd18000),
    .dout(mul_ln557_fu_1007_p2)
);

update_knn5_urem_10ns_10ns_10_14_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
urem_10ns_10ns_10_14_seq_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1039_ap_start),
    .done(grp_fu_1039_ap_done),
    .din0(add_ln557_fu_1033_p2),
    .din1(10'd450),
    .ce(1'b1),
    .dout(grp_fu_1039_p2)
);

update_knn5_mux_63_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_63_32_1_1_U16(
    .din0(zext_ln36_8_reg_2638),
    .din1(zext_ln36_9_reg_2646),
    .din2(zext_ln36_10_reg_2654),
    .din3(zext_ln36_11_reg_2662),
    .din4(zext_ln36_12_reg_2670),
    .din5(zext_ln36_13_reg_2678),
    .din6(tmp_fu_1290_p7),
    .dout(tmp_fu_1290_p8)
);

update_knn5_mux_63_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_63_32_1_1_U17(
    .din0(p_cast32_reg_2548),
    .din1(p_cast33_reg_2553),
    .din2(p_cast34_reg_2558),
    .din3(p_cast35_reg_2563),
    .din4(p_cast36_reg_2568),
    .din5(p_cast37_reg_2573),
    .din6(p_t_reg_2725),
    .dout(min_distance_list_2_fu_1491_p8)
);

update_knn5_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U18(
    .din0(label_list_0_1_reg_678),
    .din1(label_list_1_1_reg_668),
    .din2(label_list_2_1_reg_658),
    .din3(i_15_reg_759),
    .dout(tmp_s_fu_1887_p5)
);

update_knn5_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_104_32_1_1_U19(
    .din0(vote_list_9_10_fu_242),
    .din1(vote_list_9_11_fu_246),
    .din2(vote_list_9_12_fu_250),
    .din3(vote_list_9_13_fu_254),
    .din4(vote_list_9_14_fu_258),
    .din5(vote_list_9_15_fu_262),
    .din6(vote_list_9_16_fu_266),
    .din7(vote_list_9_17_fu_270),
    .din8(vote_list_9_18_fu_274),
    .din9(vote_list_9_19_fu_278),
    .din10(tmp_1_fu_1903_p11),
    .dout(tmp_1_fu_1903_p12)
);

update_knn5_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U20(
    .din0(vote_list_9_1_fu_206),
    .din1(vote_list_9_fu_202),
    .din2(vote_list_9_2_fu_210),
    .din3(vote_list_9_2_fu_210),
    .din4(vote_list_9_2_fu_210),
    .din5(vote_list_9_2_fu_210),
    .din6(vote_list_9_2_fu_210),
    .din7(vote_list_9_2_fu_210),
    .din8(vote_list_9_2_fu_210),
    .din9(vote_list_9_2_fu_210),
    .din10(vote_list_9_2_fu_210),
    .din11(vote_list_9_2_fu_210),
    .din12(vote_list_9_2_fu_210),
    .din13(vote_list_9_2_fu_210),
    .din14(vote_list_9_2_fu_210),
    .din15(vote_list_9_2_fu_210),
    .din16(phi_ln_fu_2089_p17),
    .dout(phi_ln_fu_2089_p18)
);

update_knn5_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U21(
    .din0(vote_list_9_1_fu_206),
    .din1(vote_list_9_fu_202),
    .din2(vote_list_9_2_fu_210),
    .din3(vote_list_9_3_fu_214),
    .din4(vote_list_9_3_fu_214),
    .din5(vote_list_9_3_fu_214),
    .din6(vote_list_9_3_fu_214),
    .din7(vote_list_9_3_fu_214),
    .din8(vote_list_9_3_fu_214),
    .din9(vote_list_9_3_fu_214),
    .din10(vote_list_9_3_fu_214),
    .din11(vote_list_9_3_fu_214),
    .din12(vote_list_9_3_fu_214),
    .din13(vote_list_9_3_fu_214),
    .din14(vote_list_9_3_fu_214),
    .din15(vote_list_9_3_fu_214),
    .din16(phi_ln446_1_fu_2153_p17),
    .dout(phi_ln446_1_fu_2153_p18)
);

update_knn5_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U22(
    .din0(vote_list_9_1_fu_206),
    .din1(vote_list_9_fu_202),
    .din2(vote_list_9_2_fu_210),
    .din3(vote_list_9_3_fu_214),
    .din4(vote_list_9_4_fu_218),
    .din5(vote_list_9_4_fu_218),
    .din6(vote_list_9_4_fu_218),
    .din7(vote_list_9_4_fu_218),
    .din8(vote_list_9_4_fu_218),
    .din9(vote_list_9_4_fu_218),
    .din10(vote_list_9_4_fu_218),
    .din11(vote_list_9_4_fu_218),
    .din12(vote_list_9_4_fu_218),
    .din13(vote_list_9_4_fu_218),
    .din14(vote_list_9_4_fu_218),
    .din15(vote_list_9_4_fu_218),
    .din16(phi_ln446_2_fu_2217_p17),
    .dout(phi_ln446_2_fu_2217_p18)
);

update_knn5_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U23(
    .din0(vote_list_9_1_fu_206),
    .din1(vote_list_9_fu_202),
    .din2(vote_list_9_2_fu_210),
    .din3(vote_list_9_3_fu_214),
    .din4(vote_list_9_4_fu_218),
    .din5(vote_list_9_5_fu_222),
    .din6(vote_list_9_5_fu_222),
    .din7(vote_list_9_5_fu_222),
    .din8(vote_list_9_5_fu_222),
    .din9(vote_list_9_5_fu_222),
    .din10(vote_list_9_5_fu_222),
    .din11(vote_list_9_5_fu_222),
    .din12(vote_list_9_5_fu_222),
    .din13(vote_list_9_5_fu_222),
    .din14(vote_list_9_5_fu_222),
    .din15(vote_list_9_5_fu_222),
    .din16(phi_ln446_3_fu_2263_p17),
    .dout(phi_ln446_3_fu_2263_p18)
);

update_knn5_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U24(
    .din0(vote_list_9_1_fu_206),
    .din1(vote_list_9_fu_202),
    .din2(vote_list_9_2_fu_210),
    .din3(vote_list_9_3_fu_214),
    .din4(vote_list_9_4_fu_218),
    .din5(vote_list_9_5_fu_222),
    .din6(vote_list_9_6_fu_226),
    .din7(vote_list_9_6_fu_226),
    .din8(vote_list_9_6_fu_226),
    .din9(vote_list_9_6_fu_226),
    .din10(vote_list_9_6_fu_226),
    .din11(vote_list_9_6_fu_226),
    .din12(vote_list_9_6_fu_226),
    .din13(vote_list_9_6_fu_226),
    .din14(vote_list_9_6_fu_226),
    .din15(vote_list_9_6_fu_226),
    .din16(phi_ln446_4_fu_2324_p17),
    .dout(phi_ln446_4_fu_2324_p18)
);

update_knn5_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U25(
    .din0(vote_list_9_1_fu_206),
    .din1(vote_list_9_fu_202),
    .din2(vote_list_9_2_fu_210),
    .din3(vote_list_9_3_fu_214),
    .din4(vote_list_9_4_fu_218),
    .din5(vote_list_9_5_fu_222),
    .din6(vote_list_9_6_fu_226),
    .din7(vote_list_9_7_fu_230),
    .din8(vote_list_9_7_fu_230),
    .din9(vote_list_9_7_fu_230),
    .din10(vote_list_9_7_fu_230),
    .din11(vote_list_9_7_fu_230),
    .din12(vote_list_9_7_fu_230),
    .din13(vote_list_9_7_fu_230),
    .din14(vote_list_9_7_fu_230),
    .din15(vote_list_9_7_fu_230),
    .din16(zext_ln439_2_fu_2377_p1),
    .dout(phi_ln446_5_fu_2381_p18)
);

update_knn5_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U26(
    .din0(vote_list_9_1_fu_206),
    .din1(vote_list_9_fu_202),
    .din2(vote_list_9_2_fu_210),
    .din3(vote_list_9_3_fu_214),
    .din4(vote_list_9_4_fu_218),
    .din5(vote_list_9_5_fu_222),
    .din6(vote_list_9_6_fu_226),
    .din7(vote_list_9_7_fu_230),
    .din8(vote_list_9_8_fu_234),
    .din9(vote_list_9_8_fu_234),
    .din10(vote_list_9_8_fu_234),
    .din11(vote_list_9_8_fu_234),
    .din12(vote_list_9_8_fu_234),
    .din13(vote_list_9_8_fu_234),
    .din14(vote_list_9_8_fu_234),
    .din15(vote_list_9_8_fu_234),
    .din16(phi_ln446_6_fu_2423_p17),
    .dout(phi_ln446_6_fu_2423_p18)
);

update_knn5_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2487_p0),
    .din1(grp_fu_2487_p1),
    .ce(1'b1),
    .dout(grp_fu_2487_p2)
);

update_knn5_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(Output_1_V_TDATA_int_regslice),
    .vld_in(Output_1_V_TVALID_int_regslice),
    .ack_in(Output_1_V_TREADY_int_regslice),
    .data_out(Output_1_V_TDATA),
    .vld_out(regslice_both_Output_1_V_U_vld_out),
    .ack_out(Output_1_V_TREADY),
    .apdone_blk(regslice_both_Output_1_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b0 == Output_1_V_TREADY_int_regslice) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state62))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (index10_load_load_fu_807_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (index10_load_load_fu_807_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_fu_1085_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        dist_reg_448 <= cnt_2_fu_1211_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        dist_reg_448 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_fu_1085_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        i_10_reg_460 <= i_14_fu_1093_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i_10_reg_460 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        i_15_reg_759 <= 2'd0;
    end else if (((icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        i_15_reg_759 <= add_ln433_fu_1845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        i_5_reg_426 <= select_ln553_1_reg_2537;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        i_5_reg_426 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_6_reg_647 <= select_ln369_2_reg_2720;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        i_6_reg_647 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (index10_load_load_fu_807_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_338 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_338 <= add_ln477_reg_2498;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        indvar_flatten10_reg_636 <= add_ln369_reg_2712;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        indvar_flatten10_reg_636 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        indvar_flatten_reg_415 <= add_ln553_reg_2521;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        indvar_flatten_reg_415 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        j_2_reg_718 <= add_ln371_reg_2730;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        j_2_reg_718 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        j_reg_437 <= add_ln555_fu_1378_p2;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        j_reg_437 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        k_reg_471 <= 2'd0;
    end else if (((icmp_ln34_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        k_reg_471 <= add_ln34_fu_1269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12))) begin
        knn_set10_0 <= 9'd256;
    end else if (((3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_0 <= dist_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_0_load_reg_404 <= ap_phi_mux_knn_set10_0_load14_phi_fu_618_p14;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        knn_set10_0_load_reg_404 <= 9'd256;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12))) begin
        knn_set10_1 <= 9'd256;
    end else if (((3'd1 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_1 <= dist_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_1_load_reg_393 <= ap_phi_mux_knn_set10_1_load17_phi_fu_596_p14;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        knn_set10_1_load_reg_393 <= 9'd256;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12))) begin
        knn_set10_2 <= 9'd256;
    end else if (((3'd2 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_2 <= dist_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_2_load_reg_382 <= ap_phi_mux_knn_set10_2_load20_phi_fu_574_p14;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        knn_set10_2_load_reg_382 <= 9'd256;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12))) begin
        knn_set10_3 <= 9'd256;
    end else if (((3'd3 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_3 <= dist_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_3_load_reg_371 <= ap_phi_mux_knn_set10_3_load23_phi_fu_552_p14;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        knn_set10_3_load_reg_371 <= 9'd256;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12))) begin
        knn_set10_4 <= 9'd256;
    end else if (((3'd4 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_4 <= dist_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_4_load_reg_360 <= ap_phi_mux_knn_set10_4_load26_phi_fu_530_p14;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        knn_set10_4_load_reg_360 <= 9'd256;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12))) begin
        knn_set10_5 <= 9'd256;
    end else if ((~(3'd4 == add_ln45_fu_1337_p2) & ~(3'd3 == add_ln45_fu_1337_p2) & ~(3'd2 == add_ln45_fu_1337_p2) & ~(3'd1 == add_ln45_fu_1337_p2) & ~(3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_5 <= dist_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        knn_set10_5_load_reg_349 <= ap_phi_mux_knn_set10_5_load29_phi_fu_508_p14;
    end else if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
        knn_set10_5_load_reg_349 <= 9'd256;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        label_list_0_1_reg_678 <= select_ln388_6_fu_1722_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        label_list_0_1_reg_678 <= reg_797;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        label_list_1_1_reg_668 <= select_ln393_fu_1668_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        label_list_1_1_reg_668 <= reg_791;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        label_list_1_2_reg_729 <= select_ln388_8_fu_1737_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        label_list_1_2_reg_729 <= reg_797;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        label_list_2_1_reg_658 <= select_ln379_2_fu_1613_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        label_list_2_1_reg_658 <= reg_786;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        label_list_2_2_reg_739 <= select_ln393_2_fu_1699_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        label_list_2_2_reg_739 <= reg_791;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        max_dist_id_reg_493 <= 32'd0;
    end else if (((icmp_ln34_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        max_dist_id_reg_493 <= max_dist_id_2_fu_1312_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        max_dist_reg_482 <= 32'd0;
    end else if (((icmp_ln34_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        max_dist_reg_482 <= max_dist_2_fu_1320_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        min_distance_list_1_1_reg_698 <= min_distance_list_0_5_fu_1684_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        min_distance_list_1_1_reg_698 <= reg_775;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        min_distance_list_1_3_reg_708 <= min_distance_list_1_5_fu_1730_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        min_distance_list_1_3_reg_708 <= reg_781;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        min_distance_list_2_1_reg_688 <= min_distance_list_0_3_fu_1629_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        min_distance_list_2_1_reg_688 <= reg_770;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        min_distance_list_2_3_reg_749 <= min_distance_list_0_7_fu_1715_p3;
    end else if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        min_distance_list_2_3_reg_749 <= reg_775;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_10_fu_242 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd0) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_10_fu_242 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_11_fu_246 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd1) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_11_fu_246 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_12_fu_250 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd2) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_12_fu_250 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_13_fu_254 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd3) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_13_fu_254 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_14_fu_258 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd4) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_14_fu_258 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_15_fu_262 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd5) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_15_fu_262 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_16_fu_266 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd6) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_16_fu_266 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_17_fu_270 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd7) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_17_fu_270 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_18_fu_274 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd8) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_18_fu_274 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_19_fu_278 <= 32'd0;
    end else if ((~(trunc_ln436_fu_1899_p1 == 4'd8) & ~(trunc_ln436_fu_1899_p1 == 4'd7) & ~(trunc_ln436_fu_1899_p1 == 4'd6) & ~(trunc_ln436_fu_1899_p1 == 4'd5) & ~(trunc_ln436_fu_1899_p1 == 4'd4) & ~(trunc_ln436_fu_1899_p1 == 4'd3) & ~(trunc_ln436_fu_1899_p1 == 4'd2) & ~(trunc_ln436_fu_1899_p1 == 4'd0) & ~(trunc_ln436_fu_1899_p1 == 4'd1) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_19_fu_278 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_1_fu_206 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd0) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_1_fu_206 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_2_fu_210 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd2) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_2_fu_210 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_3_fu_214 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd3) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_3_fu_214 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_4_fu_218 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd4) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_4_fu_218 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_5_fu_222 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd5) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_5_fu_222 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_6_fu_226 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd6) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_6_fu_226 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_7_fu_230 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd7) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_7_fu_230 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_8_fu_234 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd8) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_8_fu_234 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_9_fu_238 <= 32'd0;
    end else if ((~(trunc_ln436_fu_1899_p1 == 4'd8) & ~(trunc_ln436_fu_1899_p1 == 4'd7) & ~(trunc_ln436_fu_1899_p1 == 4'd6) & ~(trunc_ln436_fu_1899_p1 == 4'd5) & ~(trunc_ln436_fu_1899_p1 == 4'd4) & ~(trunc_ln436_fu_1899_p1 == 4'd3) & ~(trunc_ln436_fu_1899_p1 == 4'd2) & ~(trunc_ln436_fu_1899_p1 == 4'd0) & ~(trunc_ln436_fu_1899_p1 == 4'd1) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_9_fu_238 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        vote_list_9_fu_202 <= 32'd0;
    end else if (((trunc_ln436_fu_1899_p1 == 4'd1) & (icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        vote_list_9_fu_202 <= vote_list_0_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        add_ln369_reg_2712 <= add_ln369_fu_1383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln369_fu_1411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        add_ln371_reg_2730 <= add_ln371_fu_1485_p2;
        p_t_reg_2725 <= p_t_fu_1479_p2;
        select_ln369_2_reg_2720 <= select_ln369_2_fu_1467_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln477_reg_2498 <= add_ln477_fu_811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln553_reg_2521 <= add_ln553_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        icmp_ln378_2_reg_2748 <= icmp_ln378_2_fu_1544_p2;
        min_distance_list_2_reg_2735 <= min_distance_list_2_fu_1491_p8;
        select_ln379_reg_2743[0] <= select_ln379_fu_1536_p3[0];
select_ln379_reg_2743[3] <= select_ln379_fu_1536_p3[3];
select_ln379_reg_2743[5] <= select_ln379_fu_1536_p3[5];
        tmp_25_reg_2753 <= {{select_ln379_fu_1536_p3[5:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln477_fu_821_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln414_reg_2507 <= icmp_ln414_fu_827_p2;
        select_ln414_reg_2511 <= select_ln414_fu_839_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        icmp_ln446_3_reg_2989 <= icmp_ln446_3_fu_2188_p2;
        max_vote_2_reg_2984 <= max_vote_2_fu_2142_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        icmp_ln446_6_reg_3018 <= icmp_ln446_6_fu_2356_p2;
        max_vote_5_reg_3013 <= max_vote_5_fu_2313_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        icmp_ln446_reg_2960 <= icmp_ln446_fu_2041_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln477_reg_2503 <= icmp_ln477_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        icmp_ln557_reg_2588 <= icmp_ln557_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (index10_load_reg_2494 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        index10 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        index10_load_reg_2494 <= index10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        max_vote_1_reg_2968 <= max_vote_1_fu_2077_p3;
        phi_ln_reg_2973 <= phi_ln_fu_2089_p18;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        max_vote_4_reg_2997 <= max_vote_4_fu_2251_p3;
        phi_ln446_3_reg_3002 <= phi_ln446_3_fu_2263_p18;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        max_vote_7_reg_3023 <= max_vote_7_fu_2415_p3;
        phi_ln446_6_reg_3028 <= phi_ln446_6_fu_2423_p18;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Result_21_reg_2516 <= p_Result_21_fu_916_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        p_Val2_s_reg_2609 <= p_Val2_s_fu_1080_p2;
        sub_ln45_reg_2603 <= sub_ln45_fu_1074_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        p_cast32_reg_2548[8 : 0] <= p_cast32_fu_980_p1[8 : 0];
        p_cast33_reg_2553[8 : 0] <= p_cast33_fu_984_p1[8 : 0];
        p_cast34_reg_2558[8 : 0] <= p_cast34_fu_988_p1[8 : 0];
        p_cast35_reg_2563[8 : 0] <= p_cast35_fu_992_p1[8 : 0];
        p_cast36_reg_2568[8 : 0] <= p_cast36_fu_996_p1[8 : 0];
        p_cast37_reg_2573[8 : 0] <= p_cast37_fu_1000_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_770 <= Input_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_775 <= Input_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_781 <= Input_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_786 <= Input_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_791 <= Input_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_797 <= Input_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_803 <= Input_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln553_fu_942_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        select_ln553_1_reg_2537 <= select_ln553_1_fu_968_p3;
        select_ln553_reg_2530 <= select_ln553_fu_954_p3;
        trunc_ln558_reg_2543 <= trunc_ln558_fu_976_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        zext_ln25_2_reg_2630[8 : 0] <= zext_ln25_2_fu_1217_p1[8 : 0];
        zext_ln36_10_reg_2654[8 : 0] <= zext_ln36_10_fu_1241_p1[8 : 0];
        zext_ln36_11_reg_2662[8 : 0] <= zext_ln36_11_fu_1249_p1[8 : 0];
        zext_ln36_12_reg_2670[8 : 0] <= zext_ln36_12_fu_1257_p1[8 : 0];
        zext_ln36_13_reg_2678[8 : 0] <= zext_ln36_13_fu_1265_p1[8 : 0];
        zext_ln36_8_reg_2638[8 : 0] <= zext_ln36_8_fu_1225_p1[8 : 0];
        zext_ln36_9_reg_2646[8 : 0] <= zext_ln36_9_fu_1233_p1[8 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        Input_1_blk_n = Input_1_empty_n;
    end else begin
        Input_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state26)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state25)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state24)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state22)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state20)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state15)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state13)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        Input_1_read = 1'b1;
    end else begin
        Input_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state11) | ((index10_load_reg_2494 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        Output_1_V_TDATA_blk_n = Output_1_V_TREADY_int_regslice;
    end else begin
        Output_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == Output_1_V_TREADY_int_regslice)) begin
        if ((1'b1 == ap_CS_fsm_state61)) begin
            Output_1_V_TDATA_int_regslice = p_Result_22_fu_2478_p3;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            Output_1_V_TDATA_int_regslice = 32'd2001;
        end else begin
            Output_1_V_TDATA_int_regslice = 'bx;
        end
    end else begin
        Output_1_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state61) & (1'b1 == Output_1_V_TREADY_int_regslice)) | ((1'b1 == ap_CS_fsm_state11) & (1'b1 == Output_1_V_TREADY_int_regslice)))) begin
        Output_1_V_TVALID_int_regslice = 1'b1;
    end else begin
        Output_1_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln477_fu_821_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Output_1_V_TREADY_int_regslice) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state62))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln477_reg_2503 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_342_p4 = add_ln477_reg_2498;
    end else begin
        ap_phi_mux_i_phi_fu_342_p4 = i_reg_338;
    end
end

always @ (*) begin
    if (((3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_phi_mux_knn_set10_0_load14_phi_fu_618_p14 = dist_reg_448;
    end else if ((((icmp_ln44_fu_1328_p2 == 1'd0) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | (~(3'd4 == add_ln45_fu_1337_p2) & ~(3'd3 == add_ln45_fu_1337_p2) & ~(3'd2 == add_ln45_fu_1337_p2) & ~(3'd1 == add_ln45_fu_1337_p2) & ~(3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd4 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd3 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd2 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd1 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        ap_phi_mux_knn_set10_0_load14_phi_fu_618_p14 = knn_set10_0;
    end else begin
        ap_phi_mux_knn_set10_0_load14_phi_fu_618_p14 = 'bx;
    end
end

always @ (*) begin
    if (((3'd1 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_phi_mux_knn_set10_1_load17_phi_fu_596_p14 = dist_reg_448;
    end else if ((((icmp_ln44_fu_1328_p2 == 1'd0) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | (~(3'd4 == add_ln45_fu_1337_p2) & ~(3'd3 == add_ln45_fu_1337_p2) & ~(3'd2 == add_ln45_fu_1337_p2) & ~(3'd1 == add_ln45_fu_1337_p2) & ~(3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd4 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd3 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd2 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        ap_phi_mux_knn_set10_1_load17_phi_fu_596_p14 = knn_set10_1;
    end else begin
        ap_phi_mux_knn_set10_1_load17_phi_fu_596_p14 = 'bx;
    end
end

always @ (*) begin
    if (((3'd2 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_phi_mux_knn_set10_2_load20_phi_fu_574_p14 = dist_reg_448;
    end else if ((((icmp_ln44_fu_1328_p2 == 1'd0) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | (~(3'd4 == add_ln45_fu_1337_p2) & ~(3'd3 == add_ln45_fu_1337_p2) & ~(3'd2 == add_ln45_fu_1337_p2) & ~(3'd1 == add_ln45_fu_1337_p2) & ~(3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd4 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd3 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd1 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        ap_phi_mux_knn_set10_2_load20_phi_fu_574_p14 = knn_set10_2;
    end else begin
        ap_phi_mux_knn_set10_2_load20_phi_fu_574_p14 = 'bx;
    end
end

always @ (*) begin
    if (((3'd3 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_phi_mux_knn_set10_3_load23_phi_fu_552_p14 = dist_reg_448;
    end else if ((((icmp_ln44_fu_1328_p2 == 1'd0) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | (~(3'd4 == add_ln45_fu_1337_p2) & ~(3'd3 == add_ln45_fu_1337_p2) & ~(3'd2 == add_ln45_fu_1337_p2) & ~(3'd1 == add_ln45_fu_1337_p2) & ~(3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd4 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd2 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd1 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        ap_phi_mux_knn_set10_3_load23_phi_fu_552_p14 = knn_set10_3;
    end else begin
        ap_phi_mux_knn_set10_3_load23_phi_fu_552_p14 = 'bx;
    end
end

always @ (*) begin
    if (((3'd4 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_phi_mux_knn_set10_4_load26_phi_fu_530_p14 = dist_reg_448;
    end else if ((((icmp_ln44_fu_1328_p2 == 1'd0) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | (~(3'd4 == add_ln45_fu_1337_p2) & ~(3'd3 == add_ln45_fu_1337_p2) & ~(3'd2 == add_ln45_fu_1337_p2) & ~(3'd1 == add_ln45_fu_1337_p2) & ~(3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd3 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd2 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd1 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        ap_phi_mux_knn_set10_4_load26_phi_fu_530_p14 = knn_set10_4;
    end else begin
        ap_phi_mux_knn_set10_4_load26_phi_fu_530_p14 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln44_fu_1328_p2 == 1'd0) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd4 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd3 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd2 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd1 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        ap_phi_mux_knn_set10_5_load29_phi_fu_508_p14 = knn_set10_5;
    end else if ((~(3'd4 == add_ln45_fu_1337_p2) & ~(3'd3 == add_ln45_fu_1337_p2) & ~(3'd2 == add_ln45_fu_1337_p2) & ~(3'd1 == add_ln45_fu_1337_p2) & ~(3'd0 == add_ln45_fu_1337_p2) & (icmp_ln44_fu_1328_p2 == 1'd1) & (icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_phi_mux_knn_set10_5_load29_phi_fu_508_p14 = dist_reg_448;
    end else begin
        ap_phi_mux_knn_set10_5_load29_phi_fu_508_p14 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b0 == Output_1_V_TREADY_int_regslice) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state62))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1039_ap_start = 1'b1;
    end else begin
        grp_fu_1039_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        training_set10_V_0_address0 = zext_ln557_1_fu_1051_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        training_set10_V_0_address0 = zext_ln414_fu_847_p1;
    end else begin
        training_set10_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        training_set10_V_0_ce0 = 1'b1;
    end else begin
        training_set10_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln414_reg_2507 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_set10_V_0_we0 = 1'b1;
    end else begin
        training_set10_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        training_set10_V_1_address0 = zext_ln557_1_fu_1051_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        training_set10_V_1_address0 = zext_ln414_fu_847_p1;
    end else begin
        training_set10_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        training_set10_V_1_ce0 = 1'b1;
    end else begin
        training_set10_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln414_reg_2507 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_set10_V_1_we0 = 1'b1;
    end else begin
        training_set10_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (index10_load_load_fu_807_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (index10_load_load_fu_807_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln477_fu_821_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln477_fu_821_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'b1 == Output_1_V_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((1'b1 == ap_block_state12_io) | (1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == Input_1_empty_n) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln553_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((tmp_24_fu_1085_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln34_fu_1275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln369_fu_1411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln433_fu_1851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((1'b1 == ap_CS_fsm_state61) & (1'b1 == Output_1_V_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if ((~((1'b0 == Output_1_V_TREADY_int_regslice) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Output_1_V_TVALID = regslice_both_Output_1_V_U_vld_out;

assign add_ln11_4_fu_1191_p2 = (zext_ln8_8_fu_1156_p1 + zext_ln11_fu_1177_p1);

assign add_ln11_5_fu_1201_p2 = (zext_ln11_5_fu_1197_p1 + zext_ln11_4_fu_1187_p1);

assign add_ln11_fu_1181_p2 = (zext_ln8_6_fu_1114_p1 + zext_ln8_7_fu_1135_p1);

assign add_ln34_fu_1269_p2 = (k_reg_471 + 2'd1);

assign add_ln369_1_fu_1431_p2 = (i_6_reg_647 + 2'd1);

assign add_ln369_fu_1383_p2 = (indvar_flatten10_reg_636 + 3'd1);

assign add_ln371_fu_1485_p2 = (select_ln369_fu_1423_p3 + 2'd1);

assign add_ln414_fu_833_p2 = (empty_fu_817_p1 + 9'd62);

assign add_ln433_fu_1845_p2 = (i_15_reg_759 + 2'd1);

assign add_ln45_fu_1337_p2 = (trunc_ln45_fu_1333_p1 + sub_ln45_reg_2603);

assign add_ln477_fu_811_p2 = (ap_phi_mux_i_phi_fu_342_p4 + 10'd1);

assign add_ln553_1_fu_962_p2 = (i_5_reg_426 + 9'd1);

assign add_ln553_fu_936_p2 = (indvar_flatten_reg_415 + 10'd1);

assign add_ln555_fu_1378_p2 = (select_ln553_reg_2530 + 2'd1);

assign add_ln557_fu_1033_p2 = (zext_ln557_fu_1029_p1 + zext_ln553_fu_1017_p1);

assign and_ln379_1_fu_1565_p2 = (icmp_ln380_fu_1560_p2 & icmp_ln378_2_reg_2748);

assign and_ln379_2_fu_1607_p2 = (xor_ln388_fu_1601_p2 & and_ln379_1_fu_1565_p2);

assign and_ln379_fu_1520_p2 = (xor_ln380_fu_1514_p2 & icmp_ln378_1_fu_1508_p2);

assign and_ln393_fu_1662_p2 = (xor_ln388_1_fu_1656_p2 & icmp_ln393_fu_1642_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd60];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == Input_1_empty_n) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == Input_1_empty_n) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = (1'b0 == Input_1_empty_n);
end

always @ (*) begin
    ap_block_state12 = ((1'b0 == Input_1_empty_n) | ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice)));
end

always @ (*) begin
    ap_block_state12_io = ((index10_load_reg_2494 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0));
end

always @ (*) begin
    ap_block_state62 = ((1'b0 == Output_1_V_TREADY_int_regslice) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0));
end

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = ((1'b0 == Input_1_empty_n) & (icmp_ln477_reg_2503 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cnt_2_fu_1211_p2 = (dist_reg_448 + zext_ln11_6_fu_1207_p1);

assign empty_34_fu_1393_p1 = i_6_reg_647[0:0];

assign empty_35_fu_1405_p2 = (p_shl4_fu_1397_p3 - zext_ln369_fu_1389_p1);

assign empty_37_fu_1441_p1 = add_ln369_1_fu_1431_p2[0:0];

assign empty_fu_817_p1 = ap_phi_mux_i_phi_fu_342_p4[8:0];

assign grp_fu_2487_p0 = grp_fu_2487_p00;

assign grp_fu_2487_p00 = mul_ln557_fu_1007_p2;

assign grp_fu_2487_p1 = 33'd104858;

assign i_11_fu_1118_p2 = (trunc_ln25_fu_1103_p1 | 8'd1);

assign i_12_fu_1139_p2 = (trunc_ln25_fu_1103_p1 | 8'd2);

assign i_13_fu_1160_p2 = (trunc_ln25_fu_1103_p1 | 8'd3);

assign i_14_fu_1093_p2 = (i_10_reg_460 + 9'd4);

assign icmp_ln34_fu_1275_p2 = ((k_reg_471 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln369_fu_1411_p2 = ((indvar_flatten10_reg_636 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_1302_p2 = (($signed(tmp_fu_1290_p8) > $signed(max_dist_reg_482)) ? 1'b1 : 1'b0);

assign icmp_ln371_fu_1417_p2 = ((j_2_reg_718 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln378_1_fu_1508_p2 = (($signed(min_distance_list_2_fu_1491_p8) < $signed(min_distance_list_1_1_reg_698)) ? 1'b1 : 1'b0);

assign icmp_ln378_2_fu_1544_p2 = (($signed(min_distance_list_2_fu_1491_p8) < $signed(min_distance_list_2_1_reg_688)) ? 1'b1 : 1'b0);

assign icmp_ln378_fu_1502_p2 = (($signed(min_distance_list_2_fu_1491_p8) < $signed(min_distance_list_1_3_reg_708)) ? 1'b1 : 1'b0);

assign icmp_ln380_fu_1560_p2 = ((tmp_25_reg_2753 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln388_1_fu_1636_p2 = ((select_ln379_1_fu_1570_p3 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln388_fu_1587_p2 = ((tmp_26_fu_1577_p4 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln393_fu_1642_p2 = ((select_ln379_1_fu_1570_p3 == 6'd1) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_827_p2 = ((ap_phi_mux_i_phi_fu_342_p4 < 10'd450) ? 1'b1 : 1'b0);

assign icmp_ln433_fu_1851_p2 = ((i_15_reg_759 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln446_1_fu_2065_p2 = (($signed(vote_list_9_2_fu_210) < $signed(select_ln446_fu_2059_p3)) ? 1'b1 : 1'b0);

assign icmp_ln446_2_fu_2131_p2 = (($signed(vote_list_9_3_fu_214) < $signed(phi_ln_reg_2973)) ? 1'b1 : 1'b0);

assign icmp_ln446_3_fu_2188_p2 = (($signed(vote_list_9_4_fu_218) < $signed(phi_ln446_1_fu_2153_p18)) ? 1'b1 : 1'b0);

assign icmp_ln446_4_fu_2239_p2 = (($signed(vote_list_9_5_fu_222) < $signed(phi_ln446_2_fu_2217_p18)) ? 1'b1 : 1'b0);

assign icmp_ln446_5_fu_2302_p2 = (($signed(vote_list_9_6_fu_226) < $signed(phi_ln446_3_reg_3002)) ? 1'b1 : 1'b0);

assign icmp_ln446_6_fu_2356_p2 = (($signed(vote_list_9_7_fu_230) < $signed(phi_ln446_4_fu_2324_p18)) ? 1'b1 : 1'b0);

assign icmp_ln446_7_fu_2403_p2 = (($signed(vote_list_9_8_fu_234) < $signed(phi_ln446_5_fu_2381_p18)) ? 1'b1 : 1'b0);

assign icmp_ln446_8_fu_2456_p2 = (($signed(vote_list_9_9_fu_238) < $signed(phi_ln446_6_reg_3028)) ? 1'b1 : 1'b0);

assign icmp_ln446_fu_2041_p2 = (($signed(vote_list_9_fu_202) < $signed(vote_list_9_1_fu_206)) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_1328_p2 = (($signed(zext_ln25_2_reg_2630) < $signed(max_dist_reg_482)) ? 1'b1 : 1'b0);

assign icmp_ln477_fu_821_p2 = ((ap_phi_mux_i_phi_fu_342_p4 == 10'd900) ? 1'b1 : 1'b0);

assign icmp_ln553_fu_942_p2 = ((indvar_flatten_reg_415 == 10'd900) ? 1'b1 : 1'b0);

assign icmp_ln555_fu_948_p2 = ((j_reg_437 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln557_fu_1045_p2 = ((add_ln557_fu_1033_p2 < 10'd450) ? 1'b1 : 1'b0);

assign index10_load_load_fu_807_p1 = index10;

assign j_2_cast_fu_1475_p1 = select_ln369_fu_1423_p3;

assign max_dist_2_fu_1320_p3 = ((icmp_ln36_fu_1302_p2[0:0] == 1'b1) ? tmp_fu_1290_p8 : max_dist_reg_482);

assign max_dist_id_2_fu_1312_p3 = ((icmp_ln36_fu_1302_p2[0:0] == 1'b1) ? zext_ln36_2_fu_1308_p1 : max_dist_id_reg_493);

assign max_vote_1_fu_2077_p3 = ((xor_ln446_fu_2071_p2[0:0] == 1'b1) ? 2'd2 : zext_ln439_fu_2055_p1);

assign max_vote_2_fu_2142_p3 = ((xor_ln446_1_fu_2136_p2[0:0] == 1'b1) ? 2'd3 : max_vote_1_reg_2968);

assign max_vote_3_fu_2205_p3 = ((xor_ln446_2_fu_2200_p2[0:0] == 1'b1) ? 3'd4 : zext_ln439_1_fu_2197_p1);

assign max_vote_4_fu_2251_p3 = ((xor_ln446_3_fu_2245_p2[0:0] == 1'b1) ? 3'd5 : max_vote_3_fu_2205_p3);

assign max_vote_5_fu_2313_p3 = ((xor_ln446_4_fu_2307_p2[0:0] == 1'b1) ? 3'd6 : max_vote_4_reg_2997);

assign max_vote_6_fu_2370_p3 = ((xor_ln446_5_fu_2365_p2[0:0] == 1'b1) ? 3'd7 : max_vote_5_reg_3013);

assign max_vote_7_fu_2415_p3 = ((xor_ln446_6_fu_2409_p2[0:0] == 1'b1) ? 4'd8 : zext_ln439_2_fu_2377_p1);

assign max_vote_8_fu_2467_p3 = ((xor_ln446_7_fu_2461_p2[0:0] == 1'b1) ? 4'd9 : max_vote_7_reg_3023);

assign max_vote_fu_2050_p2 = (icmp_ln446_reg_2960 ^ 1'd1);

assign min_distance_list_0_2_fu_1621_p3 = ((icmp_ln388_fu_1587_p2[0:0] == 1'b1) ? min_distance_list_2_3_reg_749 : min_distance_list_2_1_reg_688);

assign min_distance_list_0_3_fu_1629_p3 = ((and_ln379_2_fu_1607_p2[0:0] == 1'b1) ? min_distance_list_2_reg_2735 : min_distance_list_0_2_fu_1621_p3);

assign min_distance_list_0_4_fu_1676_p3 = ((icmp_ln388_1_fu_1636_p2[0:0] == 1'b1) ? min_distance_list_1_3_reg_708 : min_distance_list_1_1_reg_698);

assign min_distance_list_0_5_fu_1684_p3 = ((and_ln393_fu_1662_p2[0:0] == 1'b1) ? min_distance_list_2_reg_2735 : min_distance_list_0_4_fu_1676_p3);

assign min_distance_list_0_6_fu_1707_p3 = ((icmp_ln388_1_fu_1636_p2[0:0] == 1'b1) ? min_distance_list_1_3_reg_708 : min_distance_list_2_3_reg_749);

assign min_distance_list_0_7_fu_1715_p3 = ((and_ln393_fu_1662_p2[0:0] == 1'b1) ? min_distance_list_2_reg_2735 : min_distance_list_0_6_fu_1707_p3);

assign min_distance_list_1_5_fu_1730_p3 = ((icmp_ln388_1_fu_1636_p2[0:0] == 1'b1) ? min_distance_list_2_reg_2735 : min_distance_list_1_3_reg_708);

assign mul_ln557_fu_1007_p0 = mul_ln557_fu_1007_p00;

assign mul_ln557_fu_1007_p00 = select_ln553_reg_2530;

assign or_ln379_fu_1530_p2 = (icmp_ln378_fu_1502_p2 | and_ln379_fu_1520_p2);

assign p_Result_21_fu_916_p9 = {{{{{{{{reg_770}, {reg_775}}, {reg_781}}, {reg_786}}, {reg_791}}, {reg_797}}, {reg_803}}, {Input_1_dout}};

assign p_Result_22_fu_2478_p3 = {{24'd0}, {zext_ln439_3_fu_2474_p1}};

assign p_Result_s_fu_852_p9 = {{{{{{{{reg_770}, {reg_775}}, {reg_781}}, {reg_786}}, {reg_791}}, {reg_797}}, {reg_803}}, {Input_1_dout}};

assign p_Val2_s_fu_1080_p2 = (train_inst_V_fu_1060_p3 ^ p_Result_21_reg_2516);

assign p_cast32_fu_980_p1 = knn_set10_0_load_reg_404;

assign p_cast33_fu_984_p1 = knn_set10_1_load_reg_393;

assign p_cast34_fu_988_p1 = knn_set10_2_load_reg_382;

assign p_cast35_fu_992_p1 = knn_set10_3_load_reg_371;

assign p_cast36_fu_996_p1 = knn_set10_4_load_reg_360;

assign p_cast37_fu_1000_p1 = knn_set10_5_load_reg_349;

assign p_mid1_fu_1453_p2 = (p_shl4_mid1_fu_1445_p3 - zext_ln369_1_fu_1437_p1);

assign p_shl4_fu_1397_p3 = {{empty_34_fu_1393_p1}, {2'd0}};

assign p_shl4_mid1_fu_1445_p3 = {{empty_37_fu_1441_p1}, {2'd0}};

assign p_t_fu_1479_p2 = (select_ln369_1_fu_1459_p3 + j_2_cast_fu_1475_p1);

assign phi_ln446_1_fu_2153_p17 = max_vote_2_fu_2142_p3;

assign phi_ln446_2_fu_2217_p17 = max_vote_3_fu_2205_p3;

assign phi_ln446_3_fu_2263_p17 = max_vote_4_fu_2251_p3;

assign phi_ln446_4_fu_2324_p17 = max_vote_5_fu_2313_p3;

assign phi_ln446_6_fu_2423_p17 = ((xor_ln446_6_fu_2409_p2[0:0] == 1'b1) ? 4'd8 : zext_ln439_2_fu_2377_p1);

assign phi_ln_fu_2089_p17 = max_vote_1_fu_2077_p3;

assign select_ln369_1_fu_1459_p3 = ((icmp_ln371_fu_1417_p2[0:0] == 1'b1) ? p_mid1_fu_1453_p2 : empty_35_fu_1405_p2);

assign select_ln369_2_fu_1467_p3 = ((icmp_ln371_fu_1417_p2[0:0] == 1'b1) ? add_ln369_1_fu_1431_p2 : i_6_reg_647);

assign select_ln369_fu_1423_p3 = ((icmp_ln371_fu_1417_p2[0:0] == 1'b1) ? 2'd0 : j_2_reg_718);

assign select_ln379_1_fu_1570_p3 = ((and_ln379_1_fu_1565_p2[0:0] == 1'b1) ? 6'd2 : select_ln379_reg_2743);

assign select_ln379_2_fu_1613_p3 = ((and_ln379_2_fu_1607_p2[0:0] == 1'b1) ? 32'd9 : select_ln388_fu_1593_p3);

assign select_ln379_fu_1536_p3 = ((or_ln379_fu_1530_p2[0:0] == 1'b1) ? zext_ln379_fu_1526_p1 : 6'd40);

assign select_ln388_2_fu_1648_p3 = ((icmp_ln388_1_fu_1636_p2[0:0] == 1'b1) ? label_list_1_2_reg_729 : label_list_1_1_reg_668);

assign select_ln388_4_fu_1691_p3 = ((icmp_ln388_1_fu_1636_p2[0:0] == 1'b1) ? label_list_1_2_reg_729 : label_list_2_2_reg_739);

assign select_ln388_6_fu_1722_p3 = ((icmp_ln388_1_fu_1636_p2[0:0] == 1'b1) ? 32'd9 : label_list_0_1_reg_678);

assign select_ln388_8_fu_1737_p3 = ((icmp_ln388_1_fu_1636_p2[0:0] == 1'b1) ? 32'd9 : label_list_1_2_reg_729);

assign select_ln388_fu_1593_p3 = ((icmp_ln388_fu_1587_p2[0:0] == 1'b1) ? label_list_2_2_reg_739 : label_list_2_1_reg_658);

assign select_ln393_2_fu_1699_p3 = ((and_ln393_fu_1662_p2[0:0] == 1'b1) ? 32'd9 : select_ln388_4_fu_1691_p3);

assign select_ln393_fu_1668_p3 = ((and_ln393_fu_1662_p2[0:0] == 1'b1) ? 32'd9 : select_ln388_2_fu_1648_p3);

assign select_ln414_fu_839_p3 = ((icmp_ln414_fu_827_p2[0:0] == 1'b1) ? empty_fu_817_p1 : add_ln414_fu_833_p2);

assign select_ln446_fu_2059_p3 = ((max_vote_fu_2050_p2[0:0] == 1'b1) ? vote_list_9_fu_202 : vote_list_9_1_fu_206);

assign select_ln553_1_fu_968_p3 = ((icmp_ln555_fu_948_p2[0:0] == 1'b1) ? add_ln553_1_fu_962_p2 : i_5_reg_426);

assign select_ln553_fu_954_p3 = ((icmp_ln555_fu_948_p2[0:0] == 1'b1) ? 2'd0 : j_reg_437);

assign shl_ln_fu_1067_p3 = {{trunc_ln558_reg_2543}, {2'd0}};

assign sub_ln45_fu_1074_p2 = (shl_ln_fu_1067_p3 - zext_ln555_fu_1057_p1);

assign tmp_1_fu_1903_p11 = tmp_s_fu_1887_p5[3:0];

assign tmp_24_fu_1085_p3 = i_10_reg_460[32'd8];

assign tmp_26_fu_1577_p4 = {{select_ln379_1_fu_1570_p3[5:1]}};

assign tmp_27_fu_1107_p3 = p_Val2_s_reg_2609[zext_ln25_fu_1099_p1];

assign tmp_28_fu_1128_p3 = p_Val2_s_reg_2609[zext_ln8_fu_1124_p1];

assign tmp_29_fu_1149_p3 = p_Val2_s_reg_2609[zext_ln8_3_fu_1145_p1];

assign tmp_30_fu_1170_p3 = p_Val2_s_reg_2609[zext_ln8_4_fu_1166_p1];

assign tmp_fu_1290_p7 = (sub_ln45_reg_2603 + zext_ln36_fu_1281_p1);

assign train_inst_V_fu_1060_p3 = ((icmp_ln557_reg_2588[0:0] == 1'b1) ? training_set10_V_0_q0 : training_set10_V_1_q0);

assign trunc_ln25_fu_1103_p1 = i_10_reg_460[7:0];

assign trunc_ln436_fu_1899_p1 = tmp_s_fu_1887_p5[3:0];

assign trunc_ln45_fu_1333_p1 = max_dist_id_reg_493[2:0];

assign trunc_ln558_fu_976_p1 = select_ln553_fu_954_p3[0:0];

assign trunc_ln_fu_1020_p4 = {{grp_fu_2487_p2[30:22]}};

assign vote_list_0_fu_1929_p2 = (tmp_1_fu_1903_p12 + 32'd1);

assign xor_ln380_fu_1514_p2 = (icmp_ln378_fu_1502_p2 ^ 1'd1);

assign xor_ln388_1_fu_1656_p2 = (icmp_ln388_1_fu_1636_p2 ^ 1'd1);

assign xor_ln388_fu_1601_p2 = (icmp_ln388_fu_1587_p2 ^ 1'd1);

assign xor_ln446_1_fu_2136_p2 = (icmp_ln446_2_fu_2131_p2 ^ 1'd1);

assign xor_ln446_2_fu_2200_p2 = (icmp_ln446_3_reg_2989 ^ 1'd1);

assign xor_ln446_3_fu_2245_p2 = (icmp_ln446_4_fu_2239_p2 ^ 1'd1);

assign xor_ln446_4_fu_2307_p2 = (icmp_ln446_5_fu_2302_p2 ^ 1'd1);

assign xor_ln446_5_fu_2365_p2 = (icmp_ln446_6_reg_3018 ^ 1'd1);

assign xor_ln446_6_fu_2409_p2 = (icmp_ln446_7_fu_2403_p2 ^ 1'd1);

assign xor_ln446_7_fu_2461_p2 = (icmp_ln446_8_fu_2456_p2 ^ 1'd1);

assign xor_ln446_fu_2071_p2 = (icmp_ln446_1_fu_2065_p2 ^ 1'd1);

assign zext_ln11_4_fu_1187_p1 = add_ln11_fu_1181_p2;

assign zext_ln11_5_fu_1197_p1 = add_ln11_4_fu_1191_p2;

assign zext_ln11_6_fu_1207_p1 = add_ln11_5_fu_1201_p2;

assign zext_ln11_fu_1177_p1 = tmp_30_fu_1170_p3;

assign zext_ln25_2_fu_1217_p1 = dist_reg_448;

assign zext_ln25_fu_1099_p1 = i_10_reg_460;

assign zext_ln369_1_fu_1437_p1 = add_ln369_1_fu_1431_p2;

assign zext_ln369_fu_1389_p1 = i_6_reg_647;

assign zext_ln36_10_fu_1241_p1 = knn_set10_2;

assign zext_ln36_11_fu_1249_p1 = knn_set10_3;

assign zext_ln36_12_fu_1257_p1 = knn_set10_4;

assign zext_ln36_13_fu_1265_p1 = knn_set10_5;

assign zext_ln36_2_fu_1308_p1 = k_reg_471;

assign zext_ln36_8_fu_1225_p1 = knn_set10_0;

assign zext_ln36_9_fu_1233_p1 = knn_set10_1;

assign zext_ln36_fu_1281_p1 = k_reg_471;

assign zext_ln379_fu_1526_p1 = and_ln379_fu_1520_p2;

assign zext_ln414_fu_847_p1 = select_ln414_reg_2511;

assign zext_ln439_1_fu_2197_p1 = max_vote_2_reg_2984;

assign zext_ln439_2_fu_2377_p1 = max_vote_6_fu_2370_p3;

assign zext_ln439_3_fu_2474_p1 = max_vote_8_fu_2467_p3;

assign zext_ln439_fu_2055_p1 = max_vote_fu_2050_p2;

assign zext_ln553_fu_1017_p1 = select_ln553_1_reg_2537;

assign zext_ln555_fu_1057_p1 = select_ln553_reg_2530;

assign zext_ln557_1_fu_1051_p1 = grp_fu_1039_p2;

assign zext_ln557_fu_1029_p1 = trunc_ln_fu_1020_p4;

assign zext_ln8_3_fu_1145_p1 = i_12_fu_1139_p2;

assign zext_ln8_4_fu_1166_p1 = i_13_fu_1160_p2;

assign zext_ln8_6_fu_1114_p1 = tmp_27_fu_1107_p3;

assign zext_ln8_7_fu_1135_p1 = tmp_28_fu_1128_p3;

assign zext_ln8_8_fu_1156_p1 = tmp_29_fu_1149_p3;

assign zext_ln8_fu_1124_p1 = i_11_fu_1118_p2;

always @ (posedge ap_clk) begin
    p_cast32_reg_2548[31:9] <= 23'b00000000000000000000000;
    p_cast33_reg_2553[31:9] <= 23'b00000000000000000000000;
    p_cast34_reg_2558[31:9] <= 23'b00000000000000000000000;
    p_cast35_reg_2563[31:9] <= 23'b00000000000000000000000;
    p_cast36_reg_2568[31:9] <= 23'b00000000000000000000000;
    p_cast37_reg_2573[31:9] <= 23'b00000000000000000000000;
    zext_ln25_2_reg_2630[31:9] <= 23'b00000000000000000000000;
    zext_ln36_8_reg_2638[31:9] <= 23'b00000000000000000000000;
    zext_ln36_9_reg_2646[31:9] <= 23'b00000000000000000000000;
    zext_ln36_10_reg_2654[31:9] <= 23'b00000000000000000000000;
    zext_ln36_11_reg_2662[31:9] <= 23'b00000000000000000000000;
    zext_ln36_12_reg_2670[31:9] <= 23'b00000000000000000000000;
    zext_ln36_13_reg_2678[31:9] <= 23'b00000000000000000000000;
    select_ln379_reg_2743[2:1] <= 2'b00;
    select_ln379_reg_2743[4] <= 1'b0;
end

endmodule //update_knn5_update_knn10_sub
