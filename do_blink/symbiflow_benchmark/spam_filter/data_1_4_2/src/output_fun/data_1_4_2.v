// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="data_1_4_2_data_1_4_2,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-sbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.702000,HLS_SYN_LAT=590020,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=305,HLS_SYN_LUT=679,HLS_VERSION=2021_1}" *)

module data_1_4_2 (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_TDATA,
        Input_1_V_TVALID,
        Input_1_V_TREADY,
        Input_2_V_TDATA,
        Input_2_V_TVALID,
        Input_2_V_TREADY,
        Input_3_V_TDATA,
        Input_3_V_TVALID,
        Input_3_V_TREADY,
        Output_1_V_TDATA,
        Output_1_V_TVALID,
        Output_1_V_TREADY,
        Output_2_V_TDATA,
        Output_2_V_TVALID,
        Output_2_V_TREADY
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_TDATA;
input   Input_1_V_TVALID;
output   Input_1_V_TREADY;
input  [31:0] Input_2_V_TDATA;
input   Input_2_V_TVALID;
output   Input_2_V_TREADY;
input  [31:0] Input_3_V_TDATA;
input   Input_3_V_TVALID;
output   Input_3_V_TREADY;
output  [31:0] Output_1_V_TDATA;
output   Output_1_V_TVALID;
input   Output_1_V_TREADY;
output  [31:0] Output_2_V_TDATA;
output   Output_2_V_TVALID;
input   Output_2_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] epoch;
reg    Input_1_V_TDATA_blk_n;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln26_fu_139_p2;
reg    Output_1_V_TDATA_blk_n;
wire   [0:0] icmp_ln22_fu_125_p2;
wire    ap_CS_fsm_state2;
reg    Output_2_V_TDATA_blk_n;
wire    ap_CS_fsm_state10;
wire   [12:0] training_id_2_fu_145_p2;
reg   [12:0] training_id_2_reg_182;
wire   [31:0] add_ln40_fu_151_p2;
reg   [31:0] add_ln40_reg_192;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_done;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_idle;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_ready;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TREADY;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Input_3_V_TREADY;
wire   [31:0] grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TDATA;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TVALID;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_done;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_idle;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_ready;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TREADY;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Input_2_V_TREADY;
wire   [31:0] grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TDATA;
wire    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TVALID;
wire    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start;
wire    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_done;
wire    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_idle;
wire    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_ready;
wire    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TREADY;
wire    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Input_1_V_TREADY;
wire   [31:0] grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TDATA;
wire    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TVALID;
reg   [31:0] storemerge_reg_86;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
reg    grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    regslice_both_Output_1_V_U_apdone_blk;
wire    regslice_both_Output_2_V_U_apdone_blk;
reg    ap_block_state14;
reg   [12:0] training_id_fu_60;
wire    ap_CS_fsm_state8;
reg    ap_block_state1;
reg    ap_block_state1_io;
reg    ap_block_state9;
reg    ap_block_state9_io;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    regslice_both_Input_1_V_U_apdone_blk;
wire   [31:0] Input_1_V_TDATA_int_regslice;
wire    Input_1_V_TVALID_int_regslice;
reg    Input_1_V_TREADY_int_regslice;
wire    regslice_both_Input_1_V_U_ack_in;
wire    regslice_both_Input_2_V_U_apdone_blk;
wire   [31:0] Input_2_V_TDATA_int_regslice;
wire    Input_2_V_TVALID_int_regslice;
reg    Input_2_V_TREADY_int_regslice;
wire    regslice_both_Input_2_V_U_ack_in;
wire    regslice_both_Input_3_V_U_apdone_blk;
wire   [31:0] Input_3_V_TDATA_int_regslice;
wire    Input_3_V_TVALID_int_regslice;
reg    Input_3_V_TREADY_int_regslice;
wire    regslice_both_Input_3_V_U_ack_in;
reg   [31:0] Output_1_V_TDATA_int_regslice;
reg    Output_1_V_TVALID_int_regslice;
wire    Output_1_V_TREADY_int_regslice;
wire    regslice_both_Output_1_V_U_vld_out;
reg   [31:0] Output_2_V_TDATA_int_regslice;
reg    Output_2_V_TVALID_int_regslice;
wire    Output_2_V_TREADY_int_regslice;
wire    regslice_both_Output_2_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 epoch = 32'd0;
#0 training_id_2_reg_182 = 13'd0;
#0 add_ln40_reg_192 = 32'd0;
#0 storemerge_reg_86 = 32'd0;
#0 grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start_reg = 1'b0;
#0 grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start_reg = 1'b0;
#0 grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start_reg = 1'b0;
#0 training_id_fu_60 = 13'd0;
end

data_1_4_2_data_1_4_2_Pipeline_STREAM_OUT_1 grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start),
    .ap_done(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_done),
    .ap_idle(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_idle),
    .ap_ready(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_ready),
    .Input_3_V_TVALID(Input_3_V_TVALID_int_regslice),
    .Output_1_V_TREADY(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TREADY),
    .Input_3_V_TDATA(Input_3_V_TDATA_int_regslice),
    .Input_3_V_TREADY(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Input_3_V_TREADY),
    .Output_1_V_TDATA(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TDATA),
    .Output_1_V_TVALID(grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TVALID)
);

data_1_4_2_data_1_4_2_Pipeline_STREAM_OUT_2 grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start),
    .ap_done(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_done),
    .ap_idle(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_idle),
    .ap_ready(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_ready),
    .Input_2_V_TVALID(Input_2_V_TVALID_int_regslice),
    .Output_1_V_TREADY(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TREADY),
    .Input_2_V_TDATA(Input_2_V_TDATA_int_regslice),
    .Input_2_V_TREADY(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Input_2_V_TREADY),
    .Output_1_V_TDATA(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TDATA),
    .Output_1_V_TVALID(grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TVALID)
);

data_1_4_2_data_1_4_2_Pipeline_READ_TRAINING_DATA_1 grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start),
    .ap_done(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_done),
    .ap_idle(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_idle),
    .ap_ready(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_ready),
    .Input_1_V_TVALID(Input_1_V_TVALID_int_regslice),
    .Output_2_V_TREADY(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TREADY),
    .Input_1_V_TDATA(Input_1_V_TDATA_int_regslice),
    .Input_1_V_TREADY(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Input_1_V_TREADY),
    .Output_2_V_TDATA(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TDATA),
    .Output_2_V_TVALID(grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TVALID)
);

data_1_4_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_1_V_TDATA),
    .vld_in(Input_1_V_TVALID),
    .ack_in(regslice_both_Input_1_V_U_ack_in),
    .data_out(Input_1_V_TDATA_int_regslice),
    .vld_out(Input_1_V_TVALID_int_regslice),
    .ack_out(Input_1_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_1_V_U_apdone_blk)
);

data_1_4_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_2_V_TDATA),
    .vld_in(Input_2_V_TVALID),
    .ack_in(regslice_both_Input_2_V_U_ack_in),
    .data_out(Input_2_V_TDATA_int_regslice),
    .vld_out(Input_2_V_TVALID_int_regslice),
    .ack_out(Input_2_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_2_V_U_apdone_blk)
);

data_1_4_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_3_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_3_V_TDATA),
    .vld_in(Input_3_V_TVALID),
    .ack_in(regslice_both_Input_3_V_U_ack_in),
    .data_out(Input_3_V_TDATA_int_regslice),
    .vld_out(Input_3_V_TVALID_int_regslice),
    .ack_out(Input_3_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_3_V_U_apdone_blk)
);

data_1_4_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Output_1_V_TDATA_int_regslice),
    .vld_in(Output_1_V_TVALID_int_regslice),
    .ack_in(Output_1_V_TREADY_int_regslice),
    .data_out(Output_1_V_TDATA),
    .vld_out(regslice_both_Output_1_V_U_vld_out),
    .ack_out(Output_1_V_TREADY),
    .apdone_blk(regslice_both_Output_1_V_U_apdone_blk)
);

data_1_4_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Output_2_V_TDATA_int_regslice),
    .vld_in(Output_2_V_TVALID_int_regslice),
    .ack_in(Output_2_V_TREADY_int_regslice),
    .data_out(Output_2_V_TDATA),
    .vld_out(regslice_both_Output_2_V_U_vld_out),
    .ack_out(Output_2_V_TREADY),
    .apdone_blk(regslice_both_Output_2_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln40_reg_192 <= 32'd0;
    end else begin
        if (((icmp_ln26_fu_139_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
            add_ln40_reg_192 <= add_ln40_fu_151_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        epoch <= 32'd0;
    end else begin
        if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state14))) begin
            epoch <= storemerge_reg_86;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start_reg <= 1'b1;
        end else if ((grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_ready == 1'b1)) begin
            grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start_reg <= 1'b1;
        end else if ((grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_ready == 1'b1)) begin
            grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start_reg <= 1'b1;
        end else if ((grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_ready == 1'b1)) begin
            grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        storemerge_reg_86 <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) & (grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_done == 1'b1))) begin
            storemerge_reg_86 <= 32'd0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            storemerge_reg_86 <= add_ln40_reg_192;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        training_id_2_reg_182 <= 13'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            training_id_2_reg_182 <= training_id_2_fu_145_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        training_id_fu_60 <= 13'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            training_id_fu_60 <= 13'd0;
        end else if (((1'b1 == ap_CS_fsm_state10) & (1'b1 == Output_2_V_TREADY_int_regslice))) begin
            training_id_fu_60 <= training_id_2_reg_182;
        end
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_139_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        Input_1_V_TDATA_blk_n = Input_1_V_TVALID_int_regslice;
    end else begin
        Input_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state9_io) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice)) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (icmp_ln26_fu_139_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        Input_1_V_TREADY_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Input_1_V_TREADY_int_regslice = grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Input_1_V_TREADY;
    end else begin
        Input_1_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Input_2_V_TREADY_int_regslice = grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Input_2_V_TREADY;
    end else begin
        Input_2_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Input_3_V_TREADY_int_regslice = grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Input_3_V_TREADY;
    end else begin
        Input_3_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln22_fu_125_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Output_1_V_TDATA_blk_n = Output_1_V_TREADY_int_regslice;
    end else begin
        Output_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((icmp_ln22_fu_125_p2 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (icmp_ln22_fu_125_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        Output_1_V_TDATA_int_regslice = 32'd1025;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TVALID == 1'b1))) begin
        Output_1_V_TDATA_int_regslice = grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TDATA;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TVALID == 1'b1))) begin
        Output_1_V_TDATA_int_regslice = grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TDATA;
    end else begin
        Output_1_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((icmp_ln22_fu_125_p2 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (icmp_ln22_fu_125_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        Output_1_V_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Output_1_V_TVALID_int_regslice = grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TVALID;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Output_1_V_TVALID_int_regslice = grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TVALID;
    end else begin
        Output_1_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        Output_2_V_TDATA_blk_n = Output_2_V_TREADY_int_regslice;
    end else begin
        Output_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice)) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (icmp_ln26_fu_139_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        Output_2_V_TDATA_int_regslice = Input_1_V_TDATA_int_regslice;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TVALID == 1'b1))) begin
        Output_2_V_TDATA_int_regslice = grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TDATA;
    end else begin
        Output_2_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state9_io) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice)) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (icmp_ln26_fu_139_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        Output_2_V_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Output_2_V_TVALID_int_regslice = grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TVALID;
    end else begin
        Output_2_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Output_2_V_TREADY_int_regslice)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if (((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((icmp_ln22_fu_125_p2 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice)))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Output_1_V_TREADY_int_regslice)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state9_io) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice)) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice)))) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((icmp_ln22_fu_125_p2 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (icmp_ln22_fu_125_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((icmp_ln22_fu_125_p2 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice))) & (icmp_ln22_fu_125_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == Output_1_V_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if ((~((1'b1 == ap_block_state9_io) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice)) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (icmp_ln26_fu_139_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if ((~((1'b1 == ap_block_state9_io) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice)) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (icmp_ln26_fu_139_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b1 == Output_2_V_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input_1_V_TREADY = regslice_both_Input_1_V_U_ack_in;

assign Input_2_V_TREADY = regslice_both_Input_2_V_U_ack_in;

assign Input_3_V_TREADY = regslice_both_Input_3_V_U_ack_in;

assign Output_1_V_TVALID = regslice_both_Output_1_V_U_vld_out;

assign Output_2_V_TVALID = regslice_both_Output_2_V_U_vld_out;

assign add_ln40_fu_151_p2 = (epoch + 32'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | ((icmp_ln22_fu_125_p2 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice)));
end

always @ (*) begin
    ap_block_state14 = ((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state1_io = ((icmp_ln22_fu_125_p2 == 1'd0) & (1'b0 == Output_1_V_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state9 = (((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice)) | ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice)));
end

always @ (*) begin
    ap_block_state9_io = ((icmp_ln26_fu_139_p2 == 1'd0) & (1'b0 == Output_2_V_TREADY_int_regslice));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_Output_2_V_TREADY = (ap_CS_fsm_state12 & Output_2_V_TREADY_int_regslice);

assign grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start = grp_data_1_4_2_Pipeline_READ_TRAINING_DATA_1_fu_113_ap_start_reg;

assign grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_Output_1_V_TREADY = (ap_CS_fsm_state4 & Output_1_V_TREADY_int_regslice);

assign grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start = grp_data_1_4_2_Pipeline_STREAM_OUT_1_fu_97_ap_start_reg;

assign grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_Output_1_V_TREADY = (ap_CS_fsm_state7 & Output_1_V_TREADY_int_regslice);

assign grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start = grp_data_1_4_2_Pipeline_STREAM_OUT_2_fu_105_ap_start_reg;

assign icmp_ln22_fu_125_p2 = (($signed(epoch) < $signed(32'd5)) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_139_p2 = ((training_id_fu_60 == 13'd4500) ? 1'b1 : 1'b0);

assign training_id_2_fu_145_p2 = (training_id_fu_60 + 13'd1);

endmodule //data_1_4_2
