// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="data_1_4_2,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.416000,HLS_SYN_LAT=587510,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=373,HLS_SYN_LUT=620,HLS_VERSION=2018_2}" *)

module data_1_4_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Input_2_V_V,
        Input_2_V_V_ap_vld,
        Input_2_V_V_ap_ack,
        Input_3_V_V,
        Input_3_V_V_ap_vld,
        Input_3_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack,
        Output_3_V_V,
        Output_3_V_V_ap_vld,
        Output_3_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_pp0_stage0 = 16'd2;
parameter    ap_ST_fsm_pp0_stage1 = 16'd4;
parameter    ap_ST_fsm_state5 = 16'd8;
parameter    ap_ST_fsm_pp1_stage0 = 16'd16;
parameter    ap_ST_fsm_pp1_stage1 = 16'd32;
parameter    ap_ST_fsm_state9 = 16'd64;
parameter    ap_ST_fsm_state10 = 16'd128;
parameter    ap_ST_fsm_pp2_stage0 = 16'd256;
parameter    ap_ST_fsm_pp2_stage1 = 16'd512;
parameter    ap_ST_fsm_state14 = 16'd1024;
parameter    ap_ST_fsm_pp3_stage0 = 16'd2048;
parameter    ap_ST_fsm_pp3_stage1 = 16'd4096;
parameter    ap_ST_fsm_state18 = 16'd8192;
parameter    ap_ST_fsm_state19 = 16'd16384;
parameter    ap_ST_fsm_state20 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
input  [31:0] Input_2_V_V;
input   Input_2_V_V_ap_vld;
output   Input_2_V_V_ap_ack;
input  [31:0] Input_3_V_V;
input   Input_3_V_V_ap_vld;
output   Input_3_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;
output  [31:0] Output_3_V_V;
output   Output_3_V_V_ap_vld;
input   Output_3_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg Input_2_V_V_ap_ack;
reg Input_3_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg Output_2_V_V_ap_vld;
reg[31:0] Output_3_V_V;
reg Output_3_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] epoch;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state10;
wire   [0:0] exitcond1_fu_242_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
wire   [0:0] exitcond3_fu_259_p2;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_pp2_stage1;
reg   [0:0] exitcond3_reg_330;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire   [0:0] exitcond4_fu_271_p2;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_pp3_stage1;
reg   [0:0] exitcond4_reg_339;
reg    Input_2_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] exitcond2_fu_218_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond2_reg_298;
reg    Input_3_V_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] exitcond_fu_230_p2;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond_reg_307;
reg    Output_1_V_V_blk_n;
reg    ap_enable_reg_pp2_iter1;
reg    Output_2_V_V_blk_n;
wire    ap_CS_fsm_state14;
reg    ap_enable_reg_pp3_iter1;
reg    Output_3_V_V_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp1_iter1;
reg   [7:0] i2_reg_122;
reg   [7:0] i3_reg_133;
reg   [6:0] i1_reg_155;
reg   [6:0] i4_reg_166;
reg   [31:0] reg_188;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_sig_ioackin_Output_3_V_V_ap_ack;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] reg_193;
reg    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
reg    ap_block_state8_io;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_state7_pp1_stage1_iter0;
reg    ap_block_state7_io;
reg    ap_block_pp1_stage1_11001;
reg   [31:0] reg_198;
reg    ap_block_state10;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state10_io;
reg    ap_block_state15_pp3_stage0_iter0;
wire    ap_block_state17_pp3_stage0_iter1;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state17_io;
reg    ap_block_pp3_stage0_11001;
reg    ap_block_state16_pp3_stage1_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp3_stage1_11001;
reg   [31:0] reg_203;
reg    ap_block_state11_pp2_stage0_iter0;
wire    ap_block_state13_pp2_stage0_iter1;
reg    ap_block_state13_io;
reg    ap_block_pp2_stage0_11001;
reg    ap_block_state12_pp2_stage1_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp2_stage1_11001;
reg   [31:0] epoch_load_reg_289;
wire   [0:0] tmp_fu_212_p2;
wire   [7:0] i_fu_224_p2;
reg   [7:0] i_reg_302;
wire   [7:0] i_2_fu_236_p2;
reg   [7:0] i_2_reg_311;
wire   [12:0] training_id_1_fu_248_p2;
reg   [12:0] training_id_1_reg_320;
wire   [31:0] tmp_1_fu_254_p2;
reg   [31:0] tmp_1_reg_325;
wire   [6:0] i_1_fu_265_p2;
reg   [6:0] i_1_reg_334;
wire   [6:0] i_3_fu_277_p2;
reg   [6:0] i_3_reg_343;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_state5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state11;
reg    ap_block_pp2_stage1_subdone;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state15;
reg    ap_block_pp3_stage1_subdone;
reg   [7:0] ap_phi_mux_i2_phi_fu_126_p4;
reg   [7:0] ap_phi_mux_i3_phi_fu_137_p4;
reg   [12:0] training_id_reg_144;
wire    ap_CS_fsm_state18;
reg   [6:0] ap_phi_mux_i1_phi_fu_159_p4;
reg   [6:0] ap_phi_mux_i4_phi_fu_170_p4;
reg   [31:0] storemerge_reg_177;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state20;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp1_stage0_01001;
reg    ap_reg_ioackin_Output_3_V_V_ap_ack;
reg    ap_block_pp2_stage1_01001;
reg    ap_block_pp2_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_pp3_stage1_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 epoch = 32'd0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_reg_ioackin_Output_3_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_fu_212_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((tmp_fu_212_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state6) & (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state11))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state11) & (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state11);
        end else if ((((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state15))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state15) & (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0))))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state15);
        end else if ((((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | (~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage1_01001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == Output_1_V_V_ap_ack)) | ((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp2_iter1 == 1'b1)) | (~((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (1'b1 == Output_1_V_V_ap_ack)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state14)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage1_01001) & (1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage0_01001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp3_iter1 == 1'b1)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_3_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_reg_ioackin_Output_3_V_V_ap_ack <= 1'b0;
        end else if ((((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage1_01001) & (1'b1 == Output_3_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == Output_3_V_V_ap_ack) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == Output_3_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == Output_3_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_reg_ioackin_Output_3_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        i1_reg_155 <= i_1_reg_334;
    end else if ((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        i1_reg_155 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_212_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i2_reg_122 <= 8'd0;
    end else if (((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i2_reg_122 <= i_reg_302;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i3_reg_133 <= 8'd0;
    end else if (((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i3_reg_133 <= i_2_reg_311;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        i4_reg_166 <= i_3_reg_343;
    end else if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        i4_reg_166 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        storemerge_reg_177 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        storemerge_reg_177 <= tmp_1_reg_325;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_212_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        training_id_reg_144 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        training_id_reg_144 <= training_id_1_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        epoch <= storemerge_reg_177;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        epoch_load_reg_289 <= epoch;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond2_reg_298 <= exitcond2_fu_218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond3_reg_330 <= exitcond3_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond4_reg_339 <= exitcond4_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_reg_307 <= exitcond_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_1_reg_334 <= i_1_fu_265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_2_reg_311 <= i_2_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        i_3_reg_343 <= i_3_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_302 <= i_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_fu_218_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_188 <= Input_2_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond_fu_230_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        reg_193 <= Input_3_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((exitcond4_fu_271_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        reg_198 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond3_fu_259_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_203 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_1_reg_325 <= tmp_1_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state10))) begin
        training_id_1_reg_320 <= training_id_1_fu_248_p2;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond3_fu_259_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | (~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((exitcond4_fu_271_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage1) & (exitcond3_reg_330 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0) & (exitcond3_fu_259_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((exitcond4_reg_339 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((exitcond4_fu_271_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_fu_218_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_2_V_V_ap_ack = 1'b1;
    end else begin
        Input_2_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond2_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((exitcond2_fu_218_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        Input_2_V_V_blk_n = Input_2_V_V_ap_vld;
    end else begin
        Input_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond_fu_230_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        Input_3_V_V_ap_ack = 1'b1;
    end else begin
        Input_3_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1)) | ((exitcond_fu_230_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)))) begin
        Input_3_V_V_blk_n = Input_3_V_V_ap_vld;
    end else begin
        Input_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage1_01001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        Output_1_V_V = reg_203;
    end else if ((~((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        Output_1_V_V = Input_1_V_V;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond3_reg_330 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | (~((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_242_p2 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state10)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage1) & (exitcond3_reg_330 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0) & (exitcond3_reg_330 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state14)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage1_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == ap_block_pp3_stage0_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((exitcond4_reg_339 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((exitcond4_reg_339 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage1_01001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        Output_3_V_V = reg_193;
    end else if ((((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Output_3_V_V = reg_188;
    end else begin
        Output_3_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage1_01001) & (ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond_reg_307 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Output_3_V_V_ap_vld = 1'b1;
    end else begin
        Output_3_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_reg_307 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1)) | ((exitcond_reg_307 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((exitcond2_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((exitcond2_reg_298 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        Output_3_V_V_blk_n = Output_3_V_V_ap_ack;
    end else begin
        Output_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond2_fu_218_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_230_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_259_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_271_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond3_reg_330 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_i1_phi_fu_159_p4 = i_1_reg_334;
    end else begin
        ap_phi_mux_i1_phi_fu_159_p4 = i1_reg_155;
    end
end

always @ (*) begin
    if (((exitcond2_reg_298 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i2_phi_fu_126_p4 = i_reg_302;
    end else begin
        ap_phi_mux_i2_phi_fu_126_p4 = i2_reg_122;
    end
end

always @ (*) begin
    if (((exitcond_reg_307 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_i3_phi_fu_137_p4 = i_2_reg_311;
    end else begin
        ap_phi_mux_i3_phi_fu_137_p4 = i3_reg_133;
    end
end

always @ (*) begin
    if (((exitcond4_reg_339 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_i4_phi_fu_170_p4 = i_3_reg_343;
    end else begin
        ap_phi_mux_i4_phi_fu_170_p4 = i4_reg_166;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_3_V_V_ap_ack = Output_3_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_3_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_fu_212_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((tmp_fu_212_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_218_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_218_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_230_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_230_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state10 : begin
            if ((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((~((1'b1 == ap_block_state10_io) | ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond1_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((exitcond3_fu_259_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((exitcond3_fu_259_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond4_fu_271_p2 == 1'd1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond4_fu_271_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Output_2_V_V = reg_198;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((exitcond2_fu_218_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond2_fu_218_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond2_fu_218_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((exitcond2_reg_298 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((exitcond2_reg_298 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((exitcond_fu_230_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((exitcond_fu_230_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((exitcond_fu_230_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((exitcond_reg_307 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((exitcond_reg_307 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((exitcond_reg_307 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld))));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((exitcond3_fu_259_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((exitcond3_fu_259_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((exitcond3_fu_259_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_01001 = ((exitcond3_reg_330 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage1_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond3_reg_330 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond3_reg_330 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((exitcond4_fu_271_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((exitcond4_fu_271_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((exitcond4_fu_271_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1)));
end

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage1_01001 = ((exitcond4_reg_339 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage1_11001 = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp3_stage1_subdone = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((exitcond4_reg_339 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_state10 = ((exitcond1_fu_242_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state10_io = ((exitcond1_fu_242_p2 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp2_stage0_iter0 = ((exitcond3_fu_259_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state12_io = ((exitcond3_reg_330 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp2_stage1_iter0 = ((exitcond3_reg_330 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state13_io = ((exitcond3_reg_330 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state13_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp3_stage0_iter0 = ((exitcond4_fu_271_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state16_io = ((exitcond4_reg_339 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp3_stage1_iter0 = ((exitcond4_reg_339 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state17_io = ((exitcond4_reg_339 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0));
end

assign ap_block_state17_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((exitcond2_fu_218_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state3_io = ((exitcond2_reg_298 == 1'd0) & (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((exitcond2_reg_298 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state4_io = ((exitcond2_reg_298 == 1'd0) & (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter0 = ((exitcond_fu_230_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state7_io = ((exitcond_reg_307 == 1'd0) & (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp1_stage1_iter0 = ((exitcond_reg_307 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state8_io = ((exitcond_reg_307 == 1'd0) & (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0));
end

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign exitcond1_fu_242_p2 = ((training_id_reg_144 == 13'd4500) ? 1'b1 : 1'b0);

assign exitcond2_fu_218_p2 = ((ap_phi_mux_i2_phi_fu_126_p4 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond3_fu_259_p2 = ((ap_phi_mux_i1_phi_fu_159_p4 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond4_fu_271_p2 = ((ap_phi_mux_i4_phi_fu_170_p4 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_230_p2 = ((ap_phi_mux_i3_phi_fu_137_p4 == 8'd128) ? 1'b1 : 1'b0);

assign i_1_fu_265_p2 = (ap_phi_mux_i1_phi_fu_159_p4 + 7'd1);

assign i_2_fu_236_p2 = (ap_phi_mux_i3_phi_fu_137_p4 + 8'd1);

assign i_3_fu_277_p2 = (ap_phi_mux_i4_phi_fu_170_p4 + 7'd1);

assign i_fu_224_p2 = (ap_phi_mux_i2_phi_fu_126_p4 + 8'd1);

assign tmp_1_fu_254_p2 = (epoch_load_reg_289 + 32'd1);

assign tmp_fu_212_p2 = (($signed(epoch) < $signed(32'd5)) ? 1'b1 : 1'b0);

assign training_id_1_fu_248_p2 = (training_id_reg_144 + 13'd1);

endmodule //data_1_4_2
