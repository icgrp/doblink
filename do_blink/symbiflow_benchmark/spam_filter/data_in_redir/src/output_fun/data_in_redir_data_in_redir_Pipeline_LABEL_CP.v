// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module data_in_redir_data_in_redir_Pipeline_LABEL_CP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_TVALID,
        Input_1_V_TDATA,
        Input_1_V_TREADY,
        label_local_V_0_address0,
        label_local_V_0_ce0,
        label_local_V_0_we0,
        label_local_V_0_d0,
        label_local_V_1_address0,
        label_local_V_1_ce0,
        label_local_V_1_we0,
        label_local_V_1_d0,
        label_local_V_2_address0,
        label_local_V_2_ce0,
        label_local_V_2_we0,
        label_local_V_2_d0,
        label_local_V_3_address0,
        label_local_V_3_ce0,
        label_local_V_3_we0,
        label_local_V_3_d0,
        label_local_V_4_address0,
        label_local_V_4_ce0,
        label_local_V_4_we0,
        label_local_V_4_d0,
        label_local_V_5_address0,
        label_local_V_5_ce0,
        label_local_V_5_we0,
        label_local_V_5_d0,
        label_local_V_6_address0,
        label_local_V_6_ce0,
        label_local_V_6_we0,
        label_local_V_6_d0,
        label_local_V_7_address0,
        label_local_V_7_ce0,
        label_local_V_7_we0,
        label_local_V_7_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   Input_1_V_TVALID;
input  [31:0] Input_1_V_TDATA;
output   Input_1_V_TREADY;
output  [9:0] label_local_V_0_address0;
output   label_local_V_0_ce0;
output   label_local_V_0_we0;
output  [7:0] label_local_V_0_d0;
output  [9:0] label_local_V_1_address0;
output   label_local_V_1_ce0;
output   label_local_V_1_we0;
output  [7:0] label_local_V_1_d0;
output  [9:0] label_local_V_2_address0;
output   label_local_V_2_ce0;
output   label_local_V_2_we0;
output  [7:0] label_local_V_2_d0;
output  [9:0] label_local_V_3_address0;
output   label_local_V_3_ce0;
output   label_local_V_3_we0;
output  [7:0] label_local_V_3_d0;
output  [9:0] label_local_V_4_address0;
output   label_local_V_4_ce0;
output   label_local_V_4_we0;
output  [7:0] label_local_V_4_d0;
output  [9:0] label_local_V_5_address0;
output   label_local_V_5_ce0;
output   label_local_V_5_we0;
output  [7:0] label_local_V_5_d0;
output  [9:0] label_local_V_6_address0;
output   label_local_V_6_ce0;
output   label_local_V_6_we0;
output  [7:0] label_local_V_6_d0;
output  [9:0] label_local_V_7_address0;
output   label_local_V_7_ce0;
output   label_local_V_7_we0;
output  [7:0] label_local_V_7_d0;

reg ap_idle;
reg Input_1_V_TREADY;
reg[9:0] label_local_V_0_address0;
reg label_local_V_0_ce0;
reg label_local_V_0_we0;
reg[7:0] label_local_V_0_d0;
reg[9:0] label_local_V_1_address0;
reg label_local_V_1_ce0;
reg label_local_V_1_we0;
reg[7:0] label_local_V_1_d0;
reg[9:0] label_local_V_2_address0;
reg label_local_V_2_ce0;
reg label_local_V_2_we0;
reg[7:0] label_local_V_2_d0;
reg[9:0] label_local_V_3_address0;
reg label_local_V_3_ce0;
reg label_local_V_3_we0;
reg[7:0] label_local_V_3_d0;
reg[9:0] label_local_V_4_address0;
reg label_local_V_4_ce0;
reg label_local_V_4_we0;
reg[7:0] label_local_V_4_d0;
reg[9:0] label_local_V_5_address0;
reg label_local_V_5_ce0;
reg label_local_V_5_we0;
reg[9:0] label_local_V_6_address0;
reg label_local_V_6_ce0;
reg label_local_V_6_we0;
reg[9:0] label_local_V_7_address0;
reg label_local_V_7_ce0;
reg label_local_V_7_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln36_fu_294_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    Input_1_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [8:0] i_reg_368;
wire   [8:0] add_ln36_fu_300_p2;
reg   [8:0] add_ln36_reg_376;
wire   [7:0] trunc_ln674_fu_306_p1;
reg   [7:0] trunc_ln674_reg_381;
reg   [7:0] p_Result_1_reg_386;
reg   [7:0] p_Result_2_reg_391;
reg   [7:0] p_Result_3_reg_396;
wire   [9:0] shl_ln_fu_310_p3;
reg   [9:0] shl_ln_reg_401;
reg    ap_block_state2_pp0_stage1_iter0;
wire   [63:0] zext_ln414_1_fu_348_p1;
reg   [63:0] zext_ln414_1_reg_406;
reg    ap_block_state3_pp0_stage2_iter0;
wire   [63:0] zext_ln414_fu_317_p1;
reg   [8:0] i_2_fu_72;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i;
wire   [7:0] trunc_ln674_2_fu_338_p1;
wire   [7:0] trunc_ln674_1_fu_329_p1;
wire   [7:0] trunc_ln674_3_fu_356_p1;
wire   [9:0] or_ln414_fu_343_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 i_reg_368 = 9'd0;
#0 add_ln36_reg_376 = 9'd0;
#0 trunc_ln674_reg_381 = 8'd0;
#0 p_Result_1_reg_386 = 8'd0;
#0 p_Result_2_reg_391 = 8'd0;
#0 p_Result_3_reg_396 = 8'd0;
#0 shl_ln_reg_401 = 10'd0;
#0 zext_ln414_1_reg_406 = 64'd0;
#0 i_2_fu_72 = 9'd0;
#0 ap_done_reg = 1'b0;
end

data_in_redir_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        add_ln36_reg_376 <= 9'd0;
    end else begin
        if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
            add_ln36_reg_376 <= add_ln36_fu_300_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_2_fu_72 <= 9'd0;
    end else begin
        if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
            i_2_fu_72 <= 9'd0;
        end else if (((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2))) begin
            i_2_fu_72 <= add_ln36_reg_376;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_reg_368 <= 9'd0;
    end else begin
        if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
            i_reg_368 <= ap_sig_allocacmp_i;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_1_reg_386 <= 8'd0;
    end else begin
        if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (icmp_ln36_fu_294_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            p_Result_1_reg_386 <= {{Input_1_V_TDATA[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_2_reg_391 <= 8'd0;
    end else begin
        if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (icmp_ln36_fu_294_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            p_Result_2_reg_391 <= {{Input_1_V_TDATA[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_3_reg_396 <= 8'd0;
    end else begin
        if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (icmp_ln36_fu_294_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            p_Result_3_reg_396 <= {{Input_1_V_TDATA[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                shl_ln_reg_401[1] <= 1'b0;
        shl_ln_reg_401[2] <= 1'b0;
        shl_ln_reg_401[3] <= 1'b0;
        shl_ln_reg_401[4] <= 1'b0;
        shl_ln_reg_401[5] <= 1'b0;
        shl_ln_reg_401[6] <= 1'b0;
        shl_ln_reg_401[7] <= 1'b0;
        shl_ln_reg_401[8] <= 1'b0;
        shl_ln_reg_401[9] <= 1'b0;
    end else begin
        if (((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2))) begin
                        shl_ln_reg_401[9 : 1] <= shl_ln_fu_310_p3[9 : 1];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        trunc_ln674_reg_381 <= 8'd0;
    end else begin
        if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (icmp_ln36_fu_294_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            trunc_ln674_reg_381 <= trunc_ln674_fu_306_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                zext_ln414_1_reg_406[1] <= 1'b0;
        zext_ln414_1_reg_406[2] <= 1'b0;
        zext_ln414_1_reg_406[3] <= 1'b0;
        zext_ln414_1_reg_406[4] <= 1'b0;
        zext_ln414_1_reg_406[5] <= 1'b0;
        zext_ln414_1_reg_406[6] <= 1'b0;
        zext_ln414_1_reg_406[7] <= 1'b0;
        zext_ln414_1_reg_406[8] <= 1'b0;
        zext_ln414_1_reg_406[9] <= 1'b0;
    end else begin
        if (((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3))) begin
                        zext_ln414_1_reg_406[9 : 1] <= zext_ln414_1_fu_348_p1[9 : 1];
        end
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln36_fu_294_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Input_1_V_TDATA_blk_n = Input_1_V_TVALID;
    end else begin
        Input_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)) | (~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (icmp_ln36_fu_294_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        Input_1_V_TREADY = 1'b1;
    end else begin
        Input_1_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0)))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Input_1_V_TVALID)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Input_1_V_TVALID)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Input_1_V_TVALID)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (icmp_ln36_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 9'd0;
    end else begin
        ap_sig_allocacmp_i = i_2_fu_72;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_0_address0 = zext_ln414_1_fu_348_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_0_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_0_ce0 = 1'b1;
    end else begin
        label_local_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_0_d0 = trunc_ln674_2_fu_338_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_0_d0 = trunc_ln674_reg_381;
    end else begin
        label_local_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_0_we0 = 1'b1;
    end else begin
        label_local_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_1_address0 = zext_ln414_1_fu_348_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_1_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_1_ce0 = 1'b1;
    end else begin
        label_local_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_1_d0 = {{Input_1_V_TDATA[15:8]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_1_d0 = p_Result_1_reg_386;
    end else begin
        label_local_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_1_we0 = 1'b1;
    end else begin
        label_local_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_2_address0 = zext_ln414_1_fu_348_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_2_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_2_ce0 = 1'b1;
    end else begin
        label_local_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_2_d0 = {{Input_1_V_TDATA[23:16]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_2_d0 = p_Result_2_reg_391;
    end else begin
        label_local_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_2_we0 = 1'b1;
    end else begin
        label_local_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_3_address0 = zext_ln414_1_fu_348_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_3_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_3_ce0 = 1'b1;
    end else begin
        label_local_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_3_d0 = {{Input_1_V_TDATA[31:24]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_3_d0 = p_Result_3_reg_396;
    end else begin
        label_local_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)))) begin
        label_local_V_3_we0 = 1'b1;
    end else begin
        label_local_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        label_local_V_4_address0 = zext_ln414_1_reg_406;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_4_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_4_ce0 = 1'b1;
    end else begin
        label_local_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        label_local_V_4_d0 = trunc_ln674_3_fu_356_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_4_d0 = trunc_ln674_1_fu_329_p1;
    end else begin
        label_local_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_4_we0 = 1'b1;
    end else begin
        label_local_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        label_local_V_5_address0 = zext_ln414_1_reg_406;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_5_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_5_ce0 = 1'b1;
    end else begin
        label_local_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_5_we0 = 1'b1;
    end else begin
        label_local_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        label_local_V_6_address0 = zext_ln414_1_reg_406;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_6_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_6_ce0 = 1'b1;
    end else begin
        label_local_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_6_we0 = 1'b1;
    end else begin
        label_local_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        label_local_V_7_address0 = zext_ln414_1_reg_406;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        label_local_V_7_address0 = zext_ln414_fu_317_p1;
    end else begin
        label_local_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_7_ce0 = 1'b1;
    end else begin
        label_local_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID)))) begin
        label_local_V_7_we0 = 1'b1;
    end else begin
        label_local_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (icmp_ln36_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == Input_1_V_TVALID) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == Input_1_V_TVALID))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln36_fu_300_p2 = (ap_sig_allocacmp_i + 9'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((1'b0 == Input_1_V_TVALID) & (icmp_ln36_fu_294_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (1'b0 == Input_1_V_TVALID);
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (1'b0 == Input_1_V_TVALID);
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (1'b0 == Input_1_V_TVALID);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln36_fu_294_p2 = ((ap_sig_allocacmp_i == 9'd282) ? 1'b1 : 1'b0);

assign label_local_V_5_d0 = {{Input_1_V_TDATA[15:8]}};

assign label_local_V_6_d0 = {{Input_1_V_TDATA[23:16]}};

assign label_local_V_7_d0 = {{Input_1_V_TDATA[31:24]}};

assign or_ln414_fu_343_p2 = (shl_ln_reg_401 | 10'd1);

assign shl_ln_fu_310_p3 = {{i_reg_368}, {1'd0}};

assign trunc_ln674_1_fu_329_p1 = Input_1_V_TDATA[7:0];

assign trunc_ln674_2_fu_338_p1 = Input_1_V_TDATA[7:0];

assign trunc_ln674_3_fu_356_p1 = Input_1_V_TDATA[7:0];

assign trunc_ln674_fu_306_p1 = Input_1_V_TDATA[7:0];

assign zext_ln414_1_fu_348_p1 = or_ln414_fu_343_p2;

assign zext_ln414_fu_317_p1 = shl_ln_fu_310_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_401[0] <= 1'b0;
    zext_ln414_1_reg_406[0] <= 1'b1;
    zext_ln414_1_reg_406[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //data_in_redir_data_in_redir_Pipeline_LABEL_CP
