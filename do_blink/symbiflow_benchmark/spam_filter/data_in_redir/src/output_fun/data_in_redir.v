// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="data_in_redir,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.416000,HLS_SYN_LAT=2337040,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=332,HLS_SYN_LUT=772,HLS_VERSION=2018_2}" *)

module data_in_redir (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 21'd2048;
parameter    ap_ST_fsm_pp2_stage1 = 21'd4096;
parameter    ap_ST_fsm_pp2_stage2 = 21'd8192;
parameter    ap_ST_fsm_pp2_stage3 = 21'd16384;
parameter    ap_ST_fsm_state17 = 21'd32768;
parameter    ap_ST_fsm_pp3_stage0 = 21'd65536;
parameter    ap_ST_fsm_pp3_stage1 = 21'd131072;
parameter    ap_ST_fsm_pp3_stage2 = 21'd262144;
parameter    ap_ST_fsm_pp3_stage3 = 21'd524288;
parameter    ap_ST_fsm_state23 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] epoch;
reg   [9:0] label_local_V_0_address0;
reg    label_local_V_0_ce0;
reg    label_local_V_0_we0;
reg   [7:0] label_local_V_0_d0;
wire   [7:0] label_local_V_0_q0;
reg   [9:0] label_local_V_1_address0;
reg    label_local_V_1_ce0;
reg    label_local_V_1_we0;
wire   [7:0] label_local_V_1_q0;
reg   [9:0] label_local_V_2_address0;
reg    label_local_V_2_ce0;
reg    label_local_V_2_we0;
wire   [7:0] label_local_V_2_q0;
reg   [9:0] label_local_V_3_address0;
reg    label_local_V_3_ce0;
reg    label_local_V_3_we0;
wire   [7:0] label_local_V_3_q0;
reg   [9:0] label_local_V_4_address0;
reg    label_local_V_4_ce0;
reg    label_local_V_4_we0;
reg   [7:0] label_local_V_4_d0;
wire   [7:0] label_local_V_4_q0;
reg   [9:0] label_local_V_5_address0;
reg    label_local_V_5_ce0;
reg    label_local_V_5_we0;
wire   [7:0] label_local_V_5_d0;
wire   [7:0] label_local_V_5_q0;
reg   [9:0] label_local_V_6_address0;
reg    label_local_V_6_ce0;
reg    label_local_V_6_we0;
wire   [7:0] label_local_V_6_d0;
wire   [7:0] label_local_V_6_q0;
reg   [9:0] label_local_V_7_address0;
reg    label_local_V_7_ce0;
reg    label_local_V_7_we0;
wire   [7:0] label_local_V_7_d0;
wire   [7:0] label_local_V_7_q0;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_501_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond2_fu_513_p2;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
wire   [0:0] exitcond5_fu_650_p2;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_pp2_stage1;
reg   [0:0] exitcond5_reg_813;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_pp2_stage2;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_pp2_stage3;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire   [0:0] exitcond_fu_662_p2;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_pp3_stage1;
reg   [0:0] exitcond_reg_822;
wire    ap_CS_fsm_pp3_stage2;
wire    ap_block_pp3_stage2;
wire    ap_CS_fsm_pp3_stage3;
wire    ap_block_pp3_stage3;
reg    Output_1_V_V_blk_n;
wire    ap_CS_fsm_state11;
reg    ap_enable_reg_pp2_iter1;
reg    Output_2_V_V_blk_n;
wire    ap_CS_fsm_state17;
reg    ap_enable_reg_pp3_iter1;
reg   [6:0] i2_reg_415;
reg   [6:0] i3_reg_426;
reg   [7:0] reg_470;
reg    ap_block_state4;
reg   [7:0] reg_475;
reg   [7:0] reg_480;
reg   [31:0] reg_485;
reg    ap_block_state12_pp2_stage0_iter0;
wire    ap_block_state16_pp2_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state16_io;
reg    ap_block_pp2_stage0_11001;
reg    ap_block_state13_pp2_stage1_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp2_stage1_11001;
reg    ap_block_state14_pp2_stage2_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp2_stage2_11001;
reg    ap_block_state15_pp2_stage3_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp2_stage3_11001;
reg    ap_block_state18_pp3_stage0_iter0;
wire    ap_block_state22_pp3_stage0_iter1;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state22_io;
reg    ap_block_pp3_stage0_11001;
reg    ap_block_state19_pp3_stage1_iter0;
reg    ap_block_state19_io;
reg    ap_block_pp3_stage1_11001;
reg    ap_block_state20_pp3_stage2_iter0;
reg    ap_block_state20_io;
reg    ap_block_pp3_stage2_11001;
reg    ap_block_state21_pp3_stage3_iter0;
reg    ap_block_state21_io;
reg    ap_block_pp3_stage3_11001;
reg   [31:0] epoch_load_reg_674;
wire   [0:0] tmp_4_fu_495_p2;
wire   [10:0] i_1_fu_507_p2;
reg    ap_block_state2;
wire   [8:0] i_2_fu_519_p2;
reg   [8:0] i_2_reg_694;
wire   [7:0] tmp_5_fu_525_p1;
reg   [7:0] tmp_5_reg_699;
wire   [9:0] tmp_2_fu_529_p3;
reg   [9:0] tmp_2_reg_704;
wire   [7:0] tmp_9_fu_553_p1;
reg   [7:0] tmp_9_reg_710;
wire   [12:0] training_id_1_fu_585_p2;
reg   [12:0] training_id_1_reg_718;
wire    ap_CS_fsm_state9;
wire   [2:0] tmp_11_fu_591_p1;
reg   [2:0] tmp_11_reg_723;
wire   [0:0] exitcond4_fu_579_p2;
reg   [7:0] label_local_V_0_load_reg_768;
wire    ap_CS_fsm_state10;
reg   [7:0] label_local_V_1_load_reg_773;
reg   [7:0] label_local_V_2_load_reg_778;
reg   [7:0] label_local_V_3_load_reg_783;
reg   [7:0] label_local_V_4_load_reg_788;
reg   [7:0] label_local_V_5_load_reg_793;
reg   [7:0] label_local_V_6_load_reg_798;
reg   [7:0] label_local_V_7_load_reg_803;
wire   [31:0] tmp_data_V_fu_645_p1;
reg   [31:0] tmp_data_V_reg_808;
wire   [6:0] i_3_fu_656_p2;
reg   [6:0] i_3_reg_817;
wire   [6:0] i_4_fu_668_p2;
reg   [6:0] i_4_reg_826;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_block_pp2_stage3_subdone;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state18;
reg    ap_block_pp3_stage3_subdone;
reg   [10:0] i_reg_382;
reg   [8:0] i1_reg_393;
wire    ap_CS_fsm_state3;
reg   [12:0] training_id_reg_404;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state23;
reg   [6:0] ap_phi_mux_i2_phi_fu_419_p4;
reg   [6:0] ap_phi_mux_i3_phi_fu_430_p4;
wire   [63:0] newIndex1_fu_537_p1;
wire   [63:0] newIndex3_fu_562_p1;
wire   [63:0] newIndex5_fu_605_p1;
wire   [31:0] tmp_s_fu_617_p2;
reg    ap_block_pp2_stage1_01001;
reg    ap_block_pp2_stage2_01001;
reg    ap_block_pp2_stage3_01001;
reg    ap_block_pp2_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_pp3_stage1_01001;
reg    ap_block_pp3_stage2_01001;
reg    ap_block_pp3_stage3_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
wire   [7:0] tmp_8_fu_548_p1;
wire   [7:0] tmp_10_fu_574_p1;
wire   [9:0] newIndex2_fu_557_p2;
wire   [9:0] newIndex4_fu_595_p4;
wire   [31:0] p_Val2_s_fu_631_p9;
wire   [7:0] p_Val2_s_fu_631_p10;
reg   [20:0] ap_NS_fsm;
reg    ap_block_pp2_stage1_subdone;
reg    ap_block_pp2_stage2_subdone;
reg    ap_block_pp3_stage1_subdone;
reg    ap_block_pp3_stage2_subdone;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 epoch = 32'd0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_0_address0),
    .ce0(label_local_V_0_ce0),
    .we0(label_local_V_0_we0),
    .d0(label_local_V_0_d0),
    .q0(label_local_V_0_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_1_address0),
    .ce0(label_local_V_1_ce0),
    .we0(label_local_V_1_we0),
    .d0(reg_470),
    .q0(label_local_V_1_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_2_address0),
    .ce0(label_local_V_2_ce0),
    .we0(label_local_V_2_we0),
    .d0(reg_475),
    .q0(label_local_V_2_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_3_address0),
    .ce0(label_local_V_3_ce0),
    .we0(label_local_V_3_we0),
    .d0(reg_480),
    .q0(label_local_V_3_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_4_address0),
    .ce0(label_local_V_4_ce0),
    .we0(label_local_V_4_we0),
    .d0(label_local_V_4_d0),
    .q0(label_local_V_4_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_5_address0),
    .ce0(label_local_V_5_ce0),
    .we0(label_local_V_5_we0),
    .d0(label_local_V_5_d0),
    .q0(label_local_V_5_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_6_address0),
    .ce0(label_local_V_6_ce0),
    .we0(label_local_V_6_we0),
    .d0(label_local_V_6_d0),
    .q0(label_local_V_6_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 564 ),
    .AddressWidth( 10 ))
label_local_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_7_address0),
    .ce0(label_local_V_7_ce0),
    .we0(label_local_V_7_we0),
    .d0(label_local_V_7_d0),
    .q0(label_local_V_7_q0)
);

data_in_redir_muxjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
data_in_redir_muxjbC_U1(
    .din0(label_local_V_0_load_reg_768),
    .din1(label_local_V_1_load_reg_773),
    .din2(label_local_V_2_load_reg_778),
    .din3(label_local_V_3_load_reg_783),
    .din4(label_local_V_4_load_reg_788),
    .din5(label_local_V_5_load_reg_793),
    .din6(label_local_V_6_load_reg_798),
    .din7(label_local_V_7_load_reg_803),
    .din8(p_Val2_s_fu_631_p9),
    .dout(p_Val2_s_fu_631_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state12) & (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
        end else if ((((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state18) & (((1'b0 == ap_block_pp3_stage3_subdone) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0))))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state18);
        end else if ((((1'b0 == ap_block_pp3_stage3_subdone) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond5_reg_813 == 1'd0)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_pp2_stage3_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage1_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_01001) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond5_reg_813 == 1'd0)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_reg_822 == 1'd0)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_pp3_stage3_01001) & (1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2_01001) & (1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1_01001) & (1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_01001) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_reg_822 == 1'd0)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_reg_393 <= 9'd0;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7))) begin
        i1_reg_393 <= i_2_reg_694;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond5_reg_813 == 1'd0))) begin
        i2_reg_415 <= i_3_reg_817;
    end else if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        i2_reg_415 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_reg_822 == 1'd0))) begin
        i3_reg_426 <= i_4_reg_826;
    end else if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        i3_reg_426 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_fu_495_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_382 <= 11'd0;
    end else if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_501_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_501_p2 == 1'd0))) begin
        i_reg_382 <= i_1_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        training_id_reg_404 <= training_id_1_reg_718;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        training_id_reg_404 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        epoch <= tmp_s_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        epoch_load_reg_674 <= epoch;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond5_reg_813 <= exitcond5_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond_reg_822 <= exitcond_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond2_fu_513_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state4))) begin
        i_2_reg_694 <= i_2_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_3_reg_817 <= i_3_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_4_reg_826 <= i_4_fu_668_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        label_local_V_0_load_reg_768 <= label_local_V_0_q0;
        label_local_V_1_load_reg_773 <= label_local_V_1_q0;
        label_local_V_2_load_reg_778 <= label_local_V_2_q0;
        label_local_V_3_load_reg_783 <= label_local_V_3_q0;
        label_local_V_4_load_reg_788 <= label_local_V_4_q0;
        label_local_V_5_load_reg_793 <= label_local_V_5_q0;
        label_local_V_6_load_reg_798 <= label_local_V_6_q0;
        label_local_V_7_load_reg_803 <= label_local_V_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond2_fu_513_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_513_p2 == 1'd0)))) begin
        reg_470 <= {{Input_1_V_V[15:8]}};
        reg_475 <= {{Input_1_V_V[23:16]}};
        reg_480 <= {{Input_1_V_V[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_fu_662_p2 == 1'd0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond5_fu_650_p2 == 1'd0)))) begin
        reg_485 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond4_fu_579_p2 == 1'd0))) begin
        tmp_11_reg_723 <= tmp_11_fu_591_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond2_fu_513_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_513_p2 == 1'd0))) begin
        tmp_2_reg_704[9 : 1] <= tmp_2_fu_529_p3[9 : 1];
        tmp_5_reg_699 <= tmp_5_fu_525_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_9_reg_710 <= tmp_9_fu_553_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_data_V_reg_808[7 : 0] <= tmp_data_V_fu_645_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        training_id_1_reg_718 <= training_id_1_fu_585_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_fu_662_p2 == 1'd0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond5_fu_650_p2 == 1'd0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond2_fu_513_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_513_p2 == 1'd0)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_501_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_501_p2 == 1'd0)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp3_stage3) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_fu_662_p2 == 1'd0)) | ((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2) & (exitcond5_reg_813 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (exitcond5_reg_813 == 1'd0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (exitcond5_fu_650_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_513_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_501_p2 == 1'd0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_01001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_01001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage1_01001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_01001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond5_reg_813 == 1'd0)))) begin
        Output_1_V_V = reg_485;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Output_1_V_V = tmp_data_V_fu_645_p1;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_pp2_stage3_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond5_reg_813 == 1'd0)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2) & (exitcond5_reg_813 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (exitcond5_reg_813 == 1'd0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (exitcond5_reg_813 == 1'd0)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage3_01001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2_01001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1_01001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_01001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_reg_822 == 1'd0)))) begin
        Output_2_V_V = reg_485;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Output_2_V_V = tmp_data_V_reg_808;
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_pp3_stage3_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_reg_822 == 1'd0)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp3_stage3) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage2) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_reg_822 == 1'd0)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond5_fu_650_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_662_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (exitcond5_reg_813 == 1'd0))) begin
        ap_phi_mux_i2_phi_fu_419_p4 = i_3_reg_817;
    end else begin
        ap_phi_mux_i2_phi_fu_419_p4 = i2_reg_415;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_reg_822 == 1'd0))) begin
        ap_phi_mux_i3_phi_fu_430_p4 = i_4_reg_826;
    end else begin
        ap_phi_mux_i3_phi_fu_430_p4 = i3_reg_426;
    end
end

always @ (*) begin
    if (((exitcond4_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_0_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_0_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_0_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_0_ce0 = 1'b1;
    end else begin
        label_local_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_0_d0 = tmp_9_reg_710;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_0_d0 = tmp_5_reg_699;
    end else begin
        label_local_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_0_we0 = 1'b1;
    end else begin
        label_local_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_1_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_1_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_1_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_1_ce0 = 1'b1;
    end else begin
        label_local_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_1_we0 = 1'b1;
    end else begin
        label_local_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_2_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_2_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_2_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_2_ce0 = 1'b1;
    end else begin
        label_local_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_2_we0 = 1'b1;
    end else begin
        label_local_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_3_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_3_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_3_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_3_ce0 = 1'b1;
    end else begin
        label_local_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_3_we0 = 1'b1;
    end else begin
        label_local_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_4_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_4_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_4_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_4_ce0 = 1'b1;
    end else begin
        label_local_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_4_d0 = tmp_10_fu_574_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_4_d0 = tmp_8_fu_548_p1;
    end else begin
        label_local_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_4_we0 = 1'b1;
    end else begin
        label_local_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_5_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_5_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_5_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_5_ce0 = 1'b1;
    end else begin
        label_local_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_5_we0 = 1'b1;
    end else begin
        label_local_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_6_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_6_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_6_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_6_ce0 = 1'b1;
    end else begin
        label_local_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_6_we0 = 1'b1;
    end else begin
        label_local_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        label_local_V_7_address0 = newIndex5_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_local_V_7_address0 = newIndex3_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_7_address0 = newIndex1_fu_537_p1;
    end else begin
        label_local_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_7_ce0 = 1'b1;
    end else begin
        label_local_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)))) begin
        label_local_V_7_we0 = 1'b1;
    end else begin
        label_local_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_4_fu_495_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_495_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_501_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_501_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_501_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_501_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond2_fu_513_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_513_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond2_fu_513_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_513_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond4_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_fu_650_p2 == 1'd1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_fu_650_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_fu_662_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_fu_662_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_fu_650_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_fu_650_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_fu_650_p2 == 1'd0)));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage1_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0))));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0))));
end

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage2_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage2_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0))));
end

always @ (*) begin
    ap_block_pp2_stage2_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0))));
end

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage3_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage3_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0))));
end

always @ (*) begin
    ap_block_pp2_stage3_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0))));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_fu_662_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_fu_662_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_fu_662_p2 == 1'd0)));
end

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage1_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage1_11001 = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage1_subdone = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0))));
end

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage2_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage2_11001 = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage2_subdone = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0))));
end

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage3_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage3_11001 = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage3_subdone = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0))));
end

always @ (*) begin
    ap_block_state12_pp2_stage0_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_fu_650_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp2_stage1_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp2_stage2_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp2_stage3_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond5_reg_813 == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond5_reg_813 == 1'd0));
end

assign ap_block_state16_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp3_stage0_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_fu_662_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state19_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp3_stage1_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_state2 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_501_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state20_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_state20_pp3_stage2_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_state21_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_state21_pp3_stage3_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond_reg_822 == 1'd0));
end

always @ (*) begin
    ap_block_state22_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (exitcond_reg_822 == 1'd0));
end

assign ap_block_state22_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond2_fu_513_p2 == 1'd0));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign exitcond1_fu_501_p2 = ((i_reg_382 == 11'd1944) ? 1'b1 : 1'b0);

assign exitcond2_fu_513_p2 = ((i1_reg_393 == 9'd282) ? 1'b1 : 1'b0);

assign exitcond4_fu_579_p2 = ((training_id_reg_404 == 13'd4500) ? 1'b1 : 1'b0);

assign exitcond5_fu_650_p2 = ((ap_phi_mux_i2_phi_fu_419_p4 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_662_p2 = ((ap_phi_mux_i3_phi_fu_430_p4 == 7'd64) ? 1'b1 : 1'b0);

assign i_1_fu_507_p2 = (i_reg_382 + 11'd1);

assign i_2_fu_519_p2 = (i1_reg_393 + 9'd1);

assign i_3_fu_656_p2 = (ap_phi_mux_i2_phi_fu_419_p4 + 7'd1);

assign i_4_fu_668_p2 = (ap_phi_mux_i3_phi_fu_430_p4 + 7'd1);

assign label_local_V_5_d0 = {{Input_1_V_V[15:8]}};

assign label_local_V_6_d0 = {{Input_1_V_V[23:16]}};

assign label_local_V_7_d0 = {{Input_1_V_V[31:24]}};

assign newIndex1_fu_537_p1 = tmp_2_reg_704;

assign newIndex2_fu_557_p2 = (tmp_2_reg_704 | 10'd1);

assign newIndex3_fu_562_p1 = newIndex2_fu_557_p2;

assign newIndex4_fu_595_p4 = {{training_id_reg_404[12:3]}};

assign newIndex5_fu_605_p1 = newIndex4_fu_595_p4;

assign p_Val2_s_fu_631_p9 = tmp_11_reg_723;

assign tmp_10_fu_574_p1 = Input_1_V_V[7:0];

assign tmp_11_fu_591_p1 = training_id_reg_404[2:0];

assign tmp_2_fu_529_p3 = {{i1_reg_393}, {1'd0}};

assign tmp_4_fu_495_p2 = ((epoch == 32'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_525_p1 = Input_1_V_V[7:0];

assign tmp_8_fu_548_p1 = Input_1_V_V[7:0];

assign tmp_9_fu_553_p1 = Input_1_V_V[7:0];

assign tmp_data_V_fu_645_p1 = p_Val2_s_fu_631_p10;

assign tmp_s_fu_617_p2 = (epoch_load_reg_674 + 32'd1);

assign training_id_1_fu_585_p2 = (training_id_reg_404 + 13'd1);

always @ (posedge ap_clk) begin
    tmp_2_reg_704[0] <= 1'b0;
    tmp_data_V_reg_808[31:8] <= 24'b000000000000000000000000;
end

endmodule //data_in_redir
