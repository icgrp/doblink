// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dotProduct_2_dotProduct_2,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-sbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.872000,HLS_SYN_LAT=1820,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=2823,HLS_SYN_LUT=2172,HLS_VERSION=2021_1}" *)

module dotProduct_2 (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_TDATA,
        Input_1_V_TVALID,
        Input_1_V_TREADY,
        Input_2_V_TDATA,
        Input_2_V_TVALID,
        Input_2_V_TREADY,
        Output_1_V_TDATA,
        Output_1_V_TVALID,
        Output_1_V_TREADY,
        Output_2_V_TDATA,
        Output_2_V_TVALID,
        Output_2_V_TREADY
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_TDATA;
input   Input_1_V_TVALID;
output   Input_1_V_TREADY;
input  [31:0] Input_2_V_TDATA;
input   Input_2_V_TVALID;
output   Input_2_V_TREADY;
output  [31:0] Output_1_V_TDATA;
output   Output_1_V_TVALID;
input   Output_1_V_TREADY;
output  [31:0] Output_2_V_TDATA;
output   Output_2_V_TVALID;
input   Output_2_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] odd_even;
reg   [7:0] training_label_V;
reg   [7:0] feature_V_0_address0;
reg    feature_V_0_ce0;
reg    feature_V_0_we0;
wire   [15:0] feature_V_0_q0;
reg   [7:0] feature_V_1_address0;
reg    feature_V_1_ce0;
reg    feature_V_1_we0;
wire   [15:0] feature_V_1_q0;
reg   [8:0] param_V_address0;
reg    param_V_ce0;
reg    param_V_we0;
wire   [31:0] param_V_q0;
reg   [31:0] num_train;
reg   [31:0] epoch;
reg    Input_1_V_TDATA_blk_n;
reg    Input_2_V_TDATA_blk_n;
reg    Output_1_V_TDATA_blk_n;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [31:0] scale_V_fu_215_p2;
reg   [31:0] scale_V_reg_284;
wire   [31:0] add_ln87_fu_230_p2;
reg   [31:0] add_ln87_reg_292;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln88_fu_236_p2;
reg   [0:0] icmp_ln88_reg_298;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [31:0] add_ln90_fu_245_p2;
reg   [31:0] add_ln90_reg_307;
wire   [0:0] icmp_ln92_fu_257_p2;
reg   [0:0] icmp_ln92_reg_312;
wire    ap_CS_fsm_state12;
reg   [8:0] grad_V_address0;
reg    grad_V_ce0;
reg    grad_V_we0;
wire   [31:0] grad_V_q0;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_done;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_idle;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_ready;
wire   [8:0] grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_address0;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_ce0;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_we0;
wire   [31:0] grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_d0;
wire   [7:0] grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_1_address0;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_1_ce0;
wire   [7:0] grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_0_address0;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_0_ce0;
wire  signed [22:0] grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_din0;
wire  signed [31:0] grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_din1;
wire    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_ce;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_done;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_idle;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_ready;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_Input_1_V_TREADY;
wire   [7:0] grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_address0;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_ce0;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_we0;
wire   [15:0] grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_d0;
wire   [7:0] grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_address0;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_ce0;
wire    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_we0;
wire   [15:0] grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_d0;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_done;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_idle;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_ready;
wire   [31:0] grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_result_V_1_out;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_result_V_1_out_ap_vld;
wire   [7:0] grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_1_address0;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_1_ce0;
wire   [7:0] grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_0_address0;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_0_ce0;
wire   [8:0] grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_param_V_address0;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_param_V_ce0;
wire  signed [31:0] grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_din0;
wire  signed [22:0] grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_din1;
wire    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_ce;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_idle;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_ready;
wire   [8:0] grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grad_V_address0;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grad_V_ce0;
wire   [8:0] grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_address0;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_ce0;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_we0;
wire   [31:0] grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_d0;
wire  signed [31:0] grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_din0;
wire  signed [31:0] grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_din1;
wire    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_ce;
wire    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start;
wire    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_done;
wire    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_idle;
wire    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_ready;
wire    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TREADY;
wire   [31:0] grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TDATA;
wire    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TVALID;
wire   [8:0] grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_param_V_address0;
wire    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_param_V_ce0;
reg   [31:0] num_train_new_0_reg_105;
wire    ap_CS_fsm_state11;
reg   [31:0] empty_18_reg_116;
reg   [0:0] storemerge_reg_125;
wire    ap_CS_fsm_state14;
reg    ap_block_state14_on_subcall_done;
reg    grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start_reg;
reg    ap_block_state1_ignore_call5;
reg    grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start_reg;
reg    grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
wire    regslice_both_Output_1_V_U_apdone_blk;
wire    regslice_both_Output_2_V_U_apdone_blk;
reg    ap_block_state15;
wire   [7:0] tmp_3_fu_189_p1;
reg    ap_block_state1;
wire   [26:0] shl_ln_fu_203_p3;
wire   [31:0] zext_ln712_fu_211_p1;
wire   [50:0] grp_fu_316_p2;
reg    grp_fu_316_ce;
wire   [50:0] grp_fu_320_p2;
reg    grp_fu_320_ce;
wire   [50:0] grp_fu_324_p2;
reg    grp_fu_324_ce;
reg   [14:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    regslice_both_Input_1_V_U_apdone_blk;
wire   [31:0] Input_1_V_TDATA_int_regslice;
wire    Input_1_V_TVALID_int_regslice;
reg    Input_1_V_TREADY_int_regslice;
wire    regslice_both_Input_1_V_U_ack_in;
wire    regslice_both_Input_2_V_U_apdone_blk;
wire   [31:0] Input_2_V_TDATA_int_regslice;
wire    Input_2_V_TVALID_int_regslice;
reg    Input_2_V_TREADY_int_regslice;
wire    regslice_both_Input_2_V_U_ack_in;
reg    Output_1_V_TVALID_int_regslice;
wire    Output_1_V_TREADY_int_regslice;
wire    regslice_both_Output_1_V_U_vld_out;
wire    Output_2_V_TREADY_int_regslice;
wire    regslice_both_Output_2_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 odd_even = 1'd0;
#0 training_label_V = 8'd0;
#0 num_train = 32'd0;
#0 epoch = 32'd0;
#0 scale_V_reg_284 = 32'd0;
#0 add_ln87_reg_292 = 32'd0;
#0 icmp_ln88_reg_298 = 1'd0;
#0 add_ln90_reg_307 = 32'd0;
#0 icmp_ln92_reg_312 = 1'd0;
#0 num_train_new_0_reg_105 = 32'd0;
#0 empty_18_reg_116 = 32'd0;
#0 storemerge_reg_125 = 1'd0;
#0 grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start_reg = 1'b0;
#0 grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start_reg = 1'b0;
#0 grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start_reg = 1'b0;
#0 grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start_reg = 1'b0;
#0 grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start_reg = 1'b0;
end

dotProduct_2_feature_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
feature_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(feature_V_0_address0),
    .ce0(feature_V_0_ce0),
    .we0(feature_V_0_we0),
    .d0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_d0),
    .q0(feature_V_0_q0)
);

dotProduct_2_feature_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
feature_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(feature_V_1_address0),
    .ce0(feature_V_1_ce0),
    .we0(feature_V_1_we0),
    .d0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_d0),
    .q0(feature_V_1_q0)
);

dotProduct_2_param_V #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
param_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(param_V_address0),
    .ce0(param_V_ce0),
    .we0(param_V_we0),
    .d0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_d0),
    .q0(param_V_q0)
);

dotProduct_2_grad_V #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
grad_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grad_V_address0),
    .ce0(grad_V_ce0),
    .we0(grad_V_we0),
    .d0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_d0),
    .q0(grad_V_q0)
);

dotProduct_2_dotProduct_2_Pipeline_GRAD_GRAD_INNER grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start),
    .ap_done(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_done),
    .ap_idle(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_idle),
    .ap_ready(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_ready),
    .sext_ln69(scale_V_reg_284),
    .grad_V_address0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_address0),
    .grad_V_ce0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_ce0),
    .grad_V_we0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_we0),
    .grad_V_d0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_d0),
    .feature_V_1_address0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_1_address0),
    .feature_V_1_ce0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_1_ce0),
    .feature_V_1_q0(feature_V_1_q0),
    .feature_V_0_address0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_0_address0),
    .feature_V_0_ce0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_0_ce0),
    .feature_V_0_q0(feature_V_0_q0),
    .grp_fu_320_p_din0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_din0),
    .grp_fu_320_p_din1(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_din1),
    .grp_fu_320_p_dout0(grp_fu_320_p2),
    .grp_fu_320_p_ce(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_ce)
);

dotProduct_2_dotProduct_2_Pipeline_READ_TRAINING_DATA grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start),
    .ap_done(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_done),
    .ap_idle(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_idle),
    .ap_ready(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_ready),
    .Input_1_V_TVALID(Input_1_V_TVALID_int_regslice),
    .Input_1_V_TDATA(Input_1_V_TDATA_int_regslice),
    .Input_1_V_TREADY(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_Input_1_V_TREADY),
    .feature_V_0_address0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_address0),
    .feature_V_0_ce0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_ce0),
    .feature_V_0_we0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_we0),
    .feature_V_0_d0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_d0),
    .feature_V_1_address0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_address0),
    .feature_V_1_ce0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_ce0),
    .feature_V_1_we0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_we0),
    .feature_V_1_d0(grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_d0)
);

dotProduct_2_dotProduct_2_Pipeline_DOT_DOT_INNER grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start),
    .ap_done(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_done),
    .ap_idle(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_idle),
    .ap_ready(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_ready),
    .result_V_1_out(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_result_V_1_out),
    .result_V_1_out_ap_vld(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_result_V_1_out_ap_vld),
    .feature_V_1_address0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_1_address0),
    .feature_V_1_ce0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_1_ce0),
    .feature_V_1_q0(feature_V_1_q0),
    .feature_V_0_address0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_0_address0),
    .feature_V_0_ce0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_0_ce0),
    .feature_V_0_q0(feature_V_0_q0),
    .param_V_address0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_param_V_address0),
    .param_V_ce0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_param_V_ce0),
    .param_V_q0(param_V_q0),
    .grp_fu_316_p_din0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_din0),
    .grp_fu_316_p_din1(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_din1),
    .grp_fu_316_p_dout0(grp_fu_316_p2),
    .grp_fu_316_p_ce(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_ce)
);

dotProduct_2_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start),
    .ap_done(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done),
    .ap_idle(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_idle),
    .ap_ready(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_ready),
    .grad_V_address0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grad_V_address0),
    .grad_V_ce0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grad_V_ce0),
    .grad_V_q0(grad_V_q0),
    .param_V_address0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_address0),
    .param_V_ce0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_ce0),
    .param_V_we0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_we0),
    .param_V_d0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_d0),
    .param_V_q0(param_V_q0),
    .grp_fu_324_p_din0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_din0),
    .grp_fu_324_p_din1(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_din1),
    .grp_fu_324_p_dout0(grp_fu_324_p2),
    .grp_fu_324_p_ce(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_ce)
);

dotProduct_2_dotProduct_2_Pipeline_STREAM_OUT grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start),
    .ap_done(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_done),
    .ap_idle(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_idle),
    .ap_ready(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_ready),
    .Output_2_V_TREADY(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TREADY),
    .Output_2_V_TDATA(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TDATA),
    .Output_2_V_TVALID(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TVALID),
    .param_V_address0(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_param_V_address0),
    .param_V_ce0(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_param_V_ce0),
    .param_V_q0(param_V_q0)
);

dotProduct_2_mul_32s_23s_51_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 23 ),
    .dout_WIDTH( 51 ))
mul_32s_23s_51_5_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_din0),
    .din1(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_din1),
    .ce(grp_fu_316_ce),
    .dout(grp_fu_316_p2)
);

dotProduct_2_mul_23s_32s_51_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_5_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_din0),
    .din1(grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_din1),
    .ce(grp_fu_320_ce),
    .dout(grp_fu_320_p2)
);

dotProduct_2_mul_32s_32s_51_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_5_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_din0),
    .din1(grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_din1),
    .ce(grp_fu_324_ce),
    .dout(grp_fu_324_p2)
);

dotProduct_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_1_V_TDATA),
    .vld_in(Input_1_V_TVALID),
    .ack_in(regslice_both_Input_1_V_U_ack_in),
    .data_out(Input_1_V_TDATA_int_regslice),
    .vld_out(Input_1_V_TVALID_int_regslice),
    .ack_out(Input_1_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_1_V_U_apdone_blk)
);

dotProduct_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_2_V_TDATA),
    .vld_in(Input_2_V_TVALID),
    .ack_in(regslice_both_Input_2_V_U_ack_in),
    .data_out(Input_2_V_TDATA_int_regslice),
    .vld_out(Input_2_V_TVALID_int_regslice),
    .ack_out(Input_2_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_2_V_U_apdone_blk)
);

dotProduct_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_result_V_1_out),
    .vld_in(Output_1_V_TVALID_int_regslice),
    .ack_in(Output_1_V_TREADY_int_regslice),
    .data_out(Output_1_V_TDATA),
    .vld_out(regslice_both_Output_1_V_U_vld_out),
    .ack_out(Output_1_V_TREADY),
    .apdone_blk(regslice_both_Output_1_V_U_apdone_blk)
);

dotProduct_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TDATA),
    .vld_in(grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TVALID),
    .ack_in(Output_2_V_TREADY_int_regslice),
    .data_out(Output_2_V_TDATA),
    .vld_out(regslice_both_Output_2_V_U_vld_out),
    .ack_out(Output_2_V_TREADY),
    .apdone_blk(regslice_both_Output_2_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln87_reg_292 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            add_ln87_reg_292 <= add_ln87_fu_230_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln90_reg_307 <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln88_reg_298 == 1'd1))) begin
            add_ln90_reg_307 <= add_ln90_fu_245_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        empty_18_reg_116 <= 32'd0;
    end else begin
        if (((grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln88_reg_298 == 1'd0))) begin
            empty_18_reg_116 <= epoch;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            empty_18_reg_116 <= add_ln90_reg_307;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        epoch <= 32'd0;
    end else begin
        if (((grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln88_reg_298 == 1'd1))) begin
            epoch <= add_ln90_fu_245_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start_reg <= 1'b1;
        end else if ((grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_ready == 1'b1)) begin
            grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (odd_even == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start_reg <= 1'b1;
        end else if ((grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_ready == 1'b1)) begin
            grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start_reg <= 1'b1;
        end else if ((grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_ready == 1'b1)) begin
            grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start_reg <= 1'b1;
        end else if ((grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_ready == 1'b1)) begin
            grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start_reg <= 1'b1;
        end else if ((grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_ready == 1'b1)) begin
            grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln88_reg_298 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            icmp_ln88_reg_298 <= icmp_ln88_fu_236_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln92_reg_312 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            icmp_ln92_reg_312 <= icmp_ln92_fu_257_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        num_train <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            num_train <= num_train_new_0_reg_105;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        num_train_new_0_reg_105 <= 32'd0;
    end else begin
        if (((grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln88_reg_298 == 1'd0))) begin
            num_train_new_0_reg_105 <= add_ln87_reg_292;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            num_train_new_0_reg_105 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        odd_even <= 1'd0;
    end else begin
        if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state15))) begin
            odd_even <= storemerge_reg_125;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        scale_V_reg_284 <= 32'd0;
    end else begin
        if (((odd_even == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            scale_V_reg_284 <= scale_V_fu_215_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        storemerge_reg_125 <= 1'd0;
    end else begin
        if (((1'b1 == Output_1_V_TREADY_int_regslice) & (1'b1 == ap_CS_fsm_state7))) begin
            storemerge_reg_125 <= 1'd1;
        end else if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
            storemerge_reg_125 <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        training_label_V <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            training_label_V <= tmp_3_fu_189_p1;
        end
    end
end

always @ (*) begin
    if (((odd_even == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Input_1_V_TDATA_blk_n = Input_1_V_TVALID_int_regslice;
    end else begin
        Input_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        Input_1_V_TREADY_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Input_1_V_TREADY_int_regslice = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_Input_1_V_TREADY;
    end else begin
        Input_1_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((odd_even == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Input_2_V_TDATA_blk_n = Input_2_V_TVALID_int_regslice;
    end else begin
        Input_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (odd_even == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        Input_2_V_TREADY_int_regslice = 1'b1;
    end else begin
        Input_2_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        Output_1_V_TDATA_blk_n = Output_1_V_TREADY_int_regslice;
    end else begin
        Output_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == Output_1_V_TREADY_int_regslice))) begin
        Output_1_V_TVALID_int_regslice = 1'b1;
    end else begin
        Output_1_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14_on_subcall_done)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice)))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Output_1_V_TREADY_int_regslice)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Output_1_V_TREADY_int_regslice)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        feature_V_0_address0 = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        feature_V_0_address0 = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        feature_V_0_address0 = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_0_address0;
    end else begin
        feature_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        feature_V_0_ce0 = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        feature_V_0_ce0 = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        feature_V_0_ce0 = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_0_ce0;
    end else begin
        feature_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        feature_V_0_we0 = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_0_we0;
    end else begin
        feature_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        feature_V_1_address0 = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        feature_V_1_address0 = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        feature_V_1_address0 = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_1_address0;
    end else begin
        feature_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        feature_V_1_ce0 = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_feature_V_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        feature_V_1_ce0 = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        feature_V_1_ce0 = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_feature_V_1_ce0;
    end else begin
        feature_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        feature_V_1_we0 = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_feature_V_1_we0;
    end else begin
        feature_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grad_V_address0 = grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grad_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grad_V_address0 = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_address0;
    end else begin
        grad_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grad_V_ce0 = grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grad_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grad_V_ce0 = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_ce0;
    end else begin
        grad_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grad_V_we0 = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grad_V_we0;
    end else begin
        grad_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_316_ce = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_grp_fu_316_p_ce;
    end else begin
        grp_fu_316_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_320_ce = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_grp_fu_320_p_ce;
    end else begin
        grp_fu_320_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_324_ce = grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_grp_fu_324_p_ce;
    end else begin
        grp_fu_324_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln92_reg_312 == 1'd1))) begin
        param_V_address0 = grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_param_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        param_V_address0 = grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        param_V_address0 = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_param_V_address0;
    end else begin
        param_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln92_reg_312 == 1'd1))) begin
        param_V_ce0 = grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_param_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        param_V_ce0 = grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        param_V_ce0 = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_param_V_ce0;
    end else begin
        param_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        param_V_we0 = grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_param_V_we0;
    end else begin
        param_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (odd_even == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice))) & (odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == Output_1_V_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == Output_1_V_TREADY_int_regslice) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln88_reg_298 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln88_reg_298 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln92_fu_257_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input_1_V_TREADY = regslice_both_Input_1_V_U_ack_in;

assign Input_2_V_TREADY = regslice_both_Input_2_V_U_ack_in;

assign Output_1_V_TVALID = regslice_both_Output_1_V_U_vld_out;

assign Output_2_V_TVALID = regslice_both_Output_2_V_U_vld_out;

assign add_ln87_fu_230_p2 = (num_train + 32'd1);

assign add_ln90_fu_245_p2 = (epoch + 32'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice)));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_done == 1'b0) & (icmp_ln92_reg_312 == 1'd1));
end

always @ (*) begin
    ap_block_state15 = ((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call5 = ((ap_start == 1'b0) | ((odd_even == 1'd1) & (1'b0 == Input_2_V_TVALID_int_regslice)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_TVALID_int_regslice)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start = grp_dotProduct_2_Pipeline_DOT_DOT_INNER_fu_159_ap_start_reg;

assign grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start = grp_dotProduct_2_Pipeline_GRAD_GRAD_INNER_fu_138_ap_start_reg;

assign grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start = grp_dotProduct_2_Pipeline_READ_TRAINING_DATA_fu_149_ap_start_reg;

assign grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_Output_2_V_TREADY = (ap_CS_fsm_state14 & Output_2_V_TREADY_int_regslice);

assign grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start = grp_dotProduct_2_Pipeline_STREAM_OUT_fu_177_ap_start_reg;

assign grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start = grp_dotProduct_2_Pipeline_UPDATE_UPDATE_INNER_fu_170_ap_start_reg;

assign icmp_ln88_fu_236_p2 = ((add_ln87_reg_292 == 32'd4500) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_257_p2 = ((empty_18_reg_116 == 32'd5) ? 1'b1 : 1'b0);

assign scale_V_fu_215_p2 = (Input_2_V_TDATA_int_regslice - zext_ln712_fu_211_p1);

assign shl_ln_fu_203_p3 = {{training_label_V}, {19'd0}};

assign tmp_3_fu_189_p1 = Input_1_V_TDATA_int_regslice[7:0];

assign zext_ln712_fu_211_p1 = shl_ln_fu_203_p3;

endmodule //dotProduct_2
