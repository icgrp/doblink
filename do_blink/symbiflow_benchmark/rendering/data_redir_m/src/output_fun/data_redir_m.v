// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="data_redir_m_data_redir_m,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-sbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.813500,HLS_SYN_LAT=11,HLS_SYN_TPT=7,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1591,HLS_SYN_LUT=1924,HLS_VERSION=2021_1}" *)

module data_redir_m (
        Input_1_V_TDATA,
        Output_1_V_TDATA,
        Output_2_V_TDATA,
        ap_clk,
        ap_rst_n,
        Input_1_V_TVALID,
        Input_1_V_TREADY,
        ap_start,
        Output_1_V_TVALID,
        Output_1_V_TREADY,
        Output_2_V_TVALID,
        Output_2_V_TREADY,
        ap_done,
        ap_ready,
        ap_idle
);


input  [31:0] Input_1_V_TDATA;
output  [31:0] Output_1_V_TDATA;
output  [31:0] Output_2_V_TDATA;
input   ap_clk;
input   ap_rst_n;
input   Input_1_V_TVALID;
output   Input_1_V_TREADY;
input   ap_start;
output   Output_1_V_TVALID;
input   Output_1_V_TREADY;
output   Output_2_V_TVALID;
input   Output_2_V_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    Block_split12_proc4_U0_ap_start;
wire    Block_split12_proc4_U0_ap_done;
wire    Block_split12_proc4_U0_ap_continue;
wire    Block_split12_proc4_U0_ap_idle;
wire    Block_split12_proc4_U0_ap_ready;
wire    Block_split12_proc4_U0_Input_1_V_TREADY;
wire   [31:0] Block_split12_proc4_U0_ap_return_0;
wire   [31:0] Block_split12_proc4_U0_ap_return_1;
wire   [31:0] Block_split12_proc4_U0_ap_return_2;
wire    ap_channel_done_tmp_2_loc_channel;
wire    tmp_2_loc_channel_full_n;
reg    ap_sync_reg_channel_write_tmp_2_loc_channel;
wire    ap_sync_channel_write_tmp_2_loc_channel;
wire    ap_channel_done_tmp_1_loc_channel;
wire    tmp_1_loc_channel_full_n;
reg    ap_sync_reg_channel_write_tmp_1_loc_channel;
wire    ap_sync_channel_write_tmp_1_loc_channel;
wire    ap_channel_done_tmp_loc_channel;
wire    tmp_loc_channel_full_n;
reg    ap_sync_reg_channel_write_tmp_loc_channel;
wire    ap_sync_channel_write_tmp_loc_channel;
wire    projection_U0_ap_start;
wire    projection_U0_ap_done;
wire    projection_U0_ap_continue;
wire    projection_U0_ap_idle;
wire    projection_U0_ap_ready;
wire   [7:0] projection_U0_ap_return_0;
wire   [7:0] projection_U0_ap_return_1;
wire   [7:0] projection_U0_ap_return_2;
wire   [7:0] projection_U0_ap_return_3;
wire   [7:0] projection_U0_ap_return_4;
wire   [7:0] projection_U0_ap_return_5;
wire   [7:0] projection_U0_ap_return_6;
wire    ap_channel_done_triangle_2ds_1_z_V;
wire    triangle_2ds_1_z_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_1_z_V;
wire    ap_sync_channel_write_triangle_2ds_1_z_V;
wire    ap_channel_done_triangle_2ds_1_y2_V;
wire    triangle_2ds_1_y2_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_1_y2_V;
wire    ap_sync_channel_write_triangle_2ds_1_y2_V;
wire    ap_channel_done_triangle_2ds_1_x2_V;
wire    triangle_2ds_1_x2_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_1_x2_V;
wire    ap_sync_channel_write_triangle_2ds_1_x2_V;
wire    ap_channel_done_triangle_2ds_1_y1_V;
wire    triangle_2ds_1_y1_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_1_y1_V;
wire    ap_sync_channel_write_triangle_2ds_1_y1_V;
wire    ap_channel_done_triangle_2ds_1_x1_V;
wire    triangle_2ds_1_x1_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_1_x1_V;
wire    ap_sync_channel_write_triangle_2ds_1_x1_V;
wire    ap_channel_done_triangle_2ds_1_y0_V;
wire    triangle_2ds_1_y0_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_1_y0_V;
wire    ap_sync_channel_write_triangle_2ds_1_y0_V;
wire    ap_channel_done_triangle_2ds_1_x0_V;
wire    triangle_2ds_1_x0_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_1_x0_V;
wire    ap_sync_channel_write_triangle_2ds_1_x0_V;
wire    rasterization1_U0_ap_start;
wire    rasterization1_U0_ap_done;
wire    rasterization1_U0_ap_continue;
wire    rasterization1_U0_ap_idle;
wire    rasterization1_U0_ap_ready;
wire   [31:0] rasterization1_U0_Output_1_V_TDATA;
wire    rasterization1_U0_Output_1_V_TVALID;
wire   [31:0] rasterization1_U0_Output_2_V_TDATA;
wire    rasterization1_U0_Output_2_V_TVALID;
wire   [31:0] tmp_loc_channel_dout;
wire    tmp_loc_channel_empty_n;
wire   [31:0] tmp_1_loc_channel_dout;
wire    tmp_1_loc_channel_empty_n;
wire   [31:0] tmp_2_loc_channel_dout;
wire    tmp_2_loc_channel_empty_n;
wire   [7:0] triangle_2ds_1_x0_V_dout;
wire    triangle_2ds_1_x0_V_empty_n;
wire   [7:0] triangle_2ds_1_y0_V_dout;
wire    triangle_2ds_1_y0_V_empty_n;
wire   [7:0] triangle_2ds_1_x1_V_dout;
wire    triangle_2ds_1_x1_V_empty_n;
wire   [7:0] triangle_2ds_1_y1_V_dout;
wire    triangle_2ds_1_y1_V_empty_n;
wire   [7:0] triangle_2ds_1_x2_V_dout;
wire    triangle_2ds_1_x2_V_empty_n;
wire   [7:0] triangle_2ds_1_y2_V_dout;
wire    triangle_2ds_1_y2_V_empty_n;
wire   [7:0] triangle_2ds_1_z_V_dout;
wire    triangle_2ds_1_z_V_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_tmp_2_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_tmp_1_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_tmp_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_1_z_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_1_y2_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_1_x2_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_1_y1_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_1_x1_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_1_y0_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_1_x0_V = 1'b0;
end

data_redir_m_Block_split12_proc4 Block_split12_proc4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_split12_proc4_U0_ap_start),
    .ap_done(Block_split12_proc4_U0_ap_done),
    .ap_continue(Block_split12_proc4_U0_ap_continue),
    .ap_idle(Block_split12_proc4_U0_ap_idle),
    .ap_ready(Block_split12_proc4_U0_ap_ready),
    .Input_1_V_TDATA(Input_1_V_TDATA),
    .Input_1_V_TVALID(Input_1_V_TVALID),
    .Input_1_V_TREADY(Block_split12_proc4_U0_Input_1_V_TREADY),
    .ap_return_0(Block_split12_proc4_U0_ap_return_0),
    .ap_return_1(Block_split12_proc4_U0_ap_return_1),
    .ap_return_2(Block_split12_proc4_U0_ap_return_2)
);

data_redir_m_projection projection_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(projection_U0_ap_start),
    .ap_done(projection_U0_ap_done),
    .ap_continue(projection_U0_ap_continue),
    .ap_idle(projection_U0_ap_idle),
    .ap_ready(projection_U0_ap_ready),
    .p_read(tmp_loc_channel_dout),
    .p_read1(tmp_1_loc_channel_dout),
    .p_read2(tmp_2_loc_channel_dout),
    .ap_return_0(projection_U0_ap_return_0),
    .ap_return_1(projection_U0_ap_return_1),
    .ap_return_2(projection_U0_ap_return_2),
    .ap_return_3(projection_U0_ap_return_3),
    .ap_return_4(projection_U0_ap_return_4),
    .ap_return_5(projection_U0_ap_return_5),
    .ap_return_6(projection_U0_ap_return_6)
);

data_redir_m_rasterization1 rasterization1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rasterization1_U0_ap_start),
    .ap_done(rasterization1_U0_ap_done),
    .ap_continue(rasterization1_U0_ap_continue),
    .ap_idle(rasterization1_U0_ap_idle),
    .ap_ready(rasterization1_U0_ap_ready),
    .p_read(triangle_2ds_1_x0_V_dout),
    .p_read1(triangle_2ds_1_y0_V_dout),
    .p_read2(triangle_2ds_1_x1_V_dout),
    .p_read3(triangle_2ds_1_y1_V_dout),
    .p_read4(triangle_2ds_1_x2_V_dout),
    .p_read5(triangle_2ds_1_y2_V_dout),
    .p_read6(triangle_2ds_1_z_V_dout),
    .Output_1_V_TDATA(rasterization1_U0_Output_1_V_TDATA),
    .Output_1_V_TVALID(rasterization1_U0_Output_1_V_TVALID),
    .Output_1_V_TREADY(Output_1_V_TREADY),
    .Output_2_V_TDATA(rasterization1_U0_Output_2_V_TDATA),
    .Output_2_V_TVALID(rasterization1_U0_Output_2_V_TVALID),
    .Output_2_V_TREADY(Output_2_V_TREADY)
);

data_redir_m_fifo_w32_d2_S tmp_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split12_proc4_U0_ap_return_0),
    .if_full_n(tmp_loc_channel_full_n),
    .if_write(ap_channel_done_tmp_loc_channel),
    .if_dout(tmp_loc_channel_dout),
    .if_empty_n(tmp_loc_channel_empty_n),
    .if_read(projection_U0_ap_ready)
);

data_redir_m_fifo_w32_d2_S tmp_1_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split12_proc4_U0_ap_return_1),
    .if_full_n(tmp_1_loc_channel_full_n),
    .if_write(ap_channel_done_tmp_1_loc_channel),
    .if_dout(tmp_1_loc_channel_dout),
    .if_empty_n(tmp_1_loc_channel_empty_n),
    .if_read(projection_U0_ap_ready)
);

data_redir_m_fifo_w32_d2_S tmp_2_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split12_proc4_U0_ap_return_2),
    .if_full_n(tmp_2_loc_channel_full_n),
    .if_write(ap_channel_done_tmp_2_loc_channel),
    .if_dout(tmp_2_loc_channel_dout),
    .if_empty_n(tmp_2_loc_channel_empty_n),
    .if_read(projection_U0_ap_ready)
);

data_redir_m_fifo_w8_d2_S triangle_2ds_1_x0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_0),
    .if_full_n(triangle_2ds_1_x0_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_1_x0_V),
    .if_dout(triangle_2ds_1_x0_V_dout),
    .if_empty_n(triangle_2ds_1_x0_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

data_redir_m_fifo_w8_d2_S triangle_2ds_1_y0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_1),
    .if_full_n(triangle_2ds_1_y0_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_1_y0_V),
    .if_dout(triangle_2ds_1_y0_V_dout),
    .if_empty_n(triangle_2ds_1_y0_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

data_redir_m_fifo_w8_d2_S triangle_2ds_1_x1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_2),
    .if_full_n(triangle_2ds_1_x1_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_1_x1_V),
    .if_dout(triangle_2ds_1_x1_V_dout),
    .if_empty_n(triangle_2ds_1_x1_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

data_redir_m_fifo_w8_d2_S triangle_2ds_1_y1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_3),
    .if_full_n(triangle_2ds_1_y1_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_1_y1_V),
    .if_dout(triangle_2ds_1_y1_V_dout),
    .if_empty_n(triangle_2ds_1_y1_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

data_redir_m_fifo_w8_d2_S triangle_2ds_1_x2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_4),
    .if_full_n(triangle_2ds_1_x2_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_1_x2_V),
    .if_dout(triangle_2ds_1_x2_V_dout),
    .if_empty_n(triangle_2ds_1_x2_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

data_redir_m_fifo_w8_d2_S triangle_2ds_1_y2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_5),
    .if_full_n(triangle_2ds_1_y2_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_1_y2_V),
    .if_dout(triangle_2ds_1_y2_V_dout),
    .if_empty_n(triangle_2ds_1_y2_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

data_redir_m_fifo_w8_d2_S triangle_2ds_1_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_6),
    .if_full_n(triangle_2ds_1_z_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_1_z_V),
    .if_dout(triangle_2ds_1_z_V_dout),
    .if_empty_n(triangle_2ds_1_z_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_tmp_1_loc_channel <= 1'b0;
    end else begin
        if (((Block_split12_proc4_U0_ap_done & Block_split12_proc4_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_1_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_1_loc_channel <= ap_sync_channel_write_tmp_1_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_tmp_2_loc_channel <= 1'b0;
    end else begin
        if (((Block_split12_proc4_U0_ap_done & Block_split12_proc4_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_2_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_2_loc_channel <= ap_sync_channel_write_tmp_2_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_tmp_loc_channel <= 1'b0;
    end else begin
        if (((Block_split12_proc4_U0_ap_done & Block_split12_proc4_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_loc_channel <= ap_sync_channel_write_tmp_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_1_x0_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_1_x0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_1_x0_V <= ap_sync_channel_write_triangle_2ds_1_x0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_1_x1_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_1_x1_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_1_x1_V <= ap_sync_channel_write_triangle_2ds_1_x1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_1_x2_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_1_x2_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_1_x2_V <= ap_sync_channel_write_triangle_2ds_1_x2_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_1_y0_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_1_y0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_1_y0_V <= ap_sync_channel_write_triangle_2ds_1_y0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_1_y1_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_1_y1_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_1_y1_V <= ap_sync_channel_write_triangle_2ds_1_y1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_1_y2_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_1_y2_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_1_y2_V <= ap_sync_channel_write_triangle_2ds_1_y2_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_1_z_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_1_z_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_1_z_V <= ap_sync_channel_write_triangle_2ds_1_z_V;
        end
    end
end

assign Block_split12_proc4_U0_ap_continue = (ap_sync_channel_write_tmp_loc_channel & ap_sync_channel_write_tmp_2_loc_channel & ap_sync_channel_write_tmp_1_loc_channel);

assign Block_split12_proc4_U0_ap_start = ap_start;

assign Input_1_V_TREADY = Block_split12_proc4_U0_Input_1_V_TREADY;

assign Output_1_V_TDATA = rasterization1_U0_Output_1_V_TDATA;

assign Output_1_V_TVALID = rasterization1_U0_Output_1_V_TVALID;

assign Output_2_V_TDATA = rasterization1_U0_Output_2_V_TDATA;

assign Output_2_V_TVALID = rasterization1_U0_Output_2_V_TVALID;

assign ap_channel_done_tmp_1_loc_channel = ((ap_sync_reg_channel_write_tmp_1_loc_channel ^ 1'b1) & Block_split12_proc4_U0_ap_done);

assign ap_channel_done_tmp_2_loc_channel = ((ap_sync_reg_channel_write_tmp_2_loc_channel ^ 1'b1) & Block_split12_proc4_U0_ap_done);

assign ap_channel_done_tmp_loc_channel = ((ap_sync_reg_channel_write_tmp_loc_channel ^ 1'b1) & Block_split12_proc4_U0_ap_done);

assign ap_channel_done_triangle_2ds_1_x0_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_1_x0_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_1_x1_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_1_x1_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_1_x2_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_1_x2_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_1_y0_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_1_y0_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_1_y1_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_1_y1_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_1_y2_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_1_y2_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_1_z_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_1_z_V ^ 1'b1));

assign ap_done = rasterization1_U0_ap_done;

assign ap_idle = (rasterization1_U0_ap_idle & projection_U0_ap_idle & (triangle_2ds_1_z_V_empty_n ^ 1'b1) & (triangle_2ds_1_y2_V_empty_n ^ 1'b1) & (triangle_2ds_1_x2_V_empty_n ^ 1'b1) & (triangle_2ds_1_y1_V_empty_n ^ 1'b1) & (triangle_2ds_1_x1_V_empty_n ^ 1'b1) & (triangle_2ds_1_y0_V_empty_n ^ 1'b1) & (triangle_2ds_1_x0_V_empty_n ^ 1'b1) & (tmp_2_loc_channel_empty_n ^ 1'b1) & (tmp_1_loc_channel_empty_n ^ 1'b1) & (tmp_loc_channel_empty_n ^ 1'b1) & Block_split12_proc4_U0_ap_idle);

assign ap_ready = Block_split12_proc4_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_tmp_1_loc_channel = ((tmp_1_loc_channel_full_n & ap_channel_done_tmp_1_loc_channel) | ap_sync_reg_channel_write_tmp_1_loc_channel);

assign ap_sync_channel_write_tmp_2_loc_channel = ((tmp_2_loc_channel_full_n & ap_channel_done_tmp_2_loc_channel) | ap_sync_reg_channel_write_tmp_2_loc_channel);

assign ap_sync_channel_write_tmp_loc_channel = ((tmp_loc_channel_full_n & ap_channel_done_tmp_loc_channel) | ap_sync_reg_channel_write_tmp_loc_channel);

assign ap_sync_channel_write_triangle_2ds_1_x0_V = ((triangle_2ds_1_x0_V_full_n & ap_channel_done_triangle_2ds_1_x0_V) | ap_sync_reg_channel_write_triangle_2ds_1_x0_V);

assign ap_sync_channel_write_triangle_2ds_1_x1_V = ((triangle_2ds_1_x1_V_full_n & ap_channel_done_triangle_2ds_1_x1_V) | ap_sync_reg_channel_write_triangle_2ds_1_x1_V);

assign ap_sync_channel_write_triangle_2ds_1_x2_V = ((triangle_2ds_1_x2_V_full_n & ap_channel_done_triangle_2ds_1_x2_V) | ap_sync_reg_channel_write_triangle_2ds_1_x2_V);

assign ap_sync_channel_write_triangle_2ds_1_y0_V = ((triangle_2ds_1_y0_V_full_n & ap_channel_done_triangle_2ds_1_y0_V) | ap_sync_reg_channel_write_triangle_2ds_1_y0_V);

assign ap_sync_channel_write_triangle_2ds_1_y1_V = ((triangle_2ds_1_y1_V_full_n & ap_channel_done_triangle_2ds_1_y1_V) | ap_sync_reg_channel_write_triangle_2ds_1_y1_V);

assign ap_sync_channel_write_triangle_2ds_1_y2_V = ((triangle_2ds_1_y2_V_full_n & ap_channel_done_triangle_2ds_1_y2_V) | ap_sync_reg_channel_write_triangle_2ds_1_y2_V);

assign ap_sync_channel_write_triangle_2ds_1_z_V = ((triangle_2ds_1_z_V_full_n & ap_channel_done_triangle_2ds_1_z_V) | ap_sync_reg_channel_write_triangle_2ds_1_z_V);

assign projection_U0_ap_continue = (ap_sync_channel_write_triangle_2ds_1_z_V & ap_sync_channel_write_triangle_2ds_1_y2_V & ap_sync_channel_write_triangle_2ds_1_y1_V & ap_sync_channel_write_triangle_2ds_1_y0_V & ap_sync_channel_write_triangle_2ds_1_x2_V & ap_sync_channel_write_triangle_2ds_1_x1_V & ap_sync_channel_write_triangle_2ds_1_x0_V);

assign projection_U0_ap_start = (tmp_loc_channel_empty_n & tmp_2_loc_channel_empty_n & tmp_1_loc_channel_empty_n);

assign rasterization1_U0_ap_continue = 1'b1;

assign rasterization1_U0_ap_start = (triangle_2ds_1_z_V_empty_n & triangle_2ds_1_y2_V_empty_n & triangle_2ds_1_y1_V_empty_n & triangle_2ds_1_y0_V_empty_n & triangle_2ds_1_x2_V_empty_n & triangle_2ds_1_x1_V_empty_n & triangle_2ds_1_x0_V_empty_n);

endmodule //data_redir_m
