// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rasterization2_m_rasterization2_odd_Pipeline_RAST2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_Result_8,
        max_min_V_2_cast,
        max_min_V,
        max_min_V_1,
        triangle_2d_same_x0_V_cast,
        rhs,
        triangle_2d_same_y0_V_cast,
        rhs_1,
        triangle_2d_same_x1_V_cast,
        rhs_3,
        triangle_2d_same_y1_V_cast,
        rhs_4,
        triangle_2d_same_x2_V_cast,
        rhs_6,
        triangle_2d_same_y2_V_cast,
        rhs_7,
        triangle_2d_same_z_V,
        i_bot_V_out,
        i_bot_V_out_ap_vld,
        i_V_out,
        i_V_out_ap_vld,
        i_top_V_out,
        i_top_V_out_ap_vld,
        fragment_x_V_address1,
        fragment_x_V_ce1,
        fragment_x_V_we1,
        fragment_x_V_d1,
        fragment_y_V_address1,
        fragment_y_V_ce1,
        fragment_y_V_we1,
        fragment_y_V_d1,
        fragment_z_V_address1,
        fragment_z_V_ce1,
        fragment_z_V_we1,
        fragment_z_V_d1,
        fragment_color_V_address1,
        fragment_color_V_ce1,
        fragment_color_V_we1,
        fragment_color_V_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] p_Result_8;
input  [7:0] max_min_V_2_cast;
input  [7:0] max_min_V;
input  [7:0] max_min_V_1;
input  [7:0] triangle_2d_same_x0_V_cast;
input  [8:0] rhs;
input  [7:0] triangle_2d_same_y0_V_cast;
input  [8:0] rhs_1;
input  [7:0] triangle_2d_same_x1_V_cast;
input  [8:0] rhs_3;
input  [7:0] triangle_2d_same_y1_V_cast;
input  [8:0] rhs_4;
input  [7:0] triangle_2d_same_x2_V_cast;
input  [8:0] rhs_6;
input  [7:0] triangle_2d_same_y2_V_cast;
input  [8:0] rhs_7;
input  [7:0] triangle_2d_same_z_V;
output  [15:0] i_bot_V_out;
output   i_bot_V_out_ap_vld;
output  [15:0] i_V_out;
output   i_V_out_ap_vld;
output  [15:0] i_top_V_out;
output   i_top_V_out_ap_vld;
output  [8:0] fragment_x_V_address1;
output   fragment_x_V_ce1;
output   fragment_x_V_we1;
output  [7:0] fragment_x_V_d1;
output  [8:0] fragment_y_V_address1;
output   fragment_y_V_ce1;
output   fragment_y_V_we1;
output  [7:0] fragment_y_V_d1;
output  [8:0] fragment_z_V_address1;
output   fragment_z_V_ce1;
output   fragment_z_V_we1;
output  [7:0] fragment_z_V_d1;
output  [8:0] fragment_color_V_address1;
output   fragment_color_V_ce1;
output   fragment_color_V_we1;
output  [5:0] fragment_color_V_d1;

reg ap_idle;
reg i_bot_V_out_ap_vld;
reg i_V_out_ap_vld;
reg i_top_V_out_ap_vld;
reg fragment_x_V_ce1;
reg fragment_x_V_we1;
reg fragment_y_V_ce1;
reg fragment_y_V_we1;
reg fragment_z_V_ce1;
reg fragment_z_V_we1;
reg fragment_color_V_ce1;
reg fragment_color_V_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln98_fu_377_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [17:0] rhs_7_cast_fu_302_p1;
reg  signed [17:0] rhs_7_cast_reg_668;
wire   [8:0] triangle_2d_same_y2_V_cast_cast_fu_306_p1;
reg   [8:0] triangle_2d_same_y2_V_cast_cast_reg_673;
wire  signed [17:0] rhs_6_cast_fu_310_p1;
reg  signed [17:0] rhs_6_cast_reg_678;
wire   [8:0] triangle_2d_same_x2_V_cast_cast_fu_314_p1;
reg   [8:0] triangle_2d_same_x2_V_cast_cast_reg_683;
wire  signed [17:0] rhs_4_cast_fu_318_p1;
reg  signed [17:0] rhs_4_cast_reg_688;
wire   [8:0] triangle_2d_same_y1_V_cast_cast_fu_322_p1;
reg   [8:0] triangle_2d_same_y1_V_cast_cast_reg_693;
wire  signed [17:0] rhs_3_cast_fu_326_p1;
reg  signed [17:0] rhs_3_cast_reg_698;
wire   [8:0] triangle_2d_same_x1_V_cast_cast_fu_330_p1;
reg   [8:0] triangle_2d_same_x1_V_cast_cast_reg_703;
wire  signed [17:0] rhs_1_cast_fu_334_p1;
reg  signed [17:0] rhs_1_cast_reg_708;
wire   [8:0] triangle_2d_same_y0_V_cast_cast_fu_338_p1;
reg   [8:0] triangle_2d_same_y0_V_cast_cast_reg_713;
wire  signed [17:0] rhs_cast_fu_342_p1;
reg  signed [17:0] rhs_cast_reg_718;
wire   [8:0] triangle_2d_same_x0_V_cast_cast_fu_346_p1;
reg   [8:0] triangle_2d_same_x0_V_cast_cast_reg_723;
wire   [15:0] max_min_V_2_cast_cast_fu_350_p1;
reg   [0:0] icmp_ln98_reg_740;
reg   [0:0] icmp_ln98_reg_740_pp0_iter1_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter2_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter3_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter4_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter5_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter6_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter7_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter8_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter9_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter10_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter11_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter12_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter13_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter14_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter15_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter16_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter17_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter18_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter19_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter20_reg;
reg   [0:0] icmp_ln98_reg_740_pp0_iter21_reg;
wire   [7:0] x_V_fu_410_p2;
reg   [7:0] x_V_reg_744;
reg   [7:0] x_V_reg_744_pp0_iter20_reg;
reg   [7:0] x_V_reg_744_pp0_iter21_reg;
reg   [7:0] x_V_reg_744_pp0_iter22_reg;
wire   [7:0] y_V_fu_419_p2;
reg   [7:0] y_V_reg_750;
reg   [7:0] y_V_reg_750_pp0_iter20_reg;
reg   [7:0] y_V_reg_750_pp0_iter21_reg;
reg   [7:0] y_V_reg_750_pp0_iter22_reg;
wire   [8:0] ret_15_fu_457_p2;
reg  signed [8:0] ret_15_reg_772;
wire   [8:0] ret_19_fu_462_p2;
reg  signed [8:0] ret_19_reg_777;
wire   [8:0] ret_23_fu_467_p2;
reg  signed [8:0] ret_23_reg_782;
wire  signed [17:0] ret_16_fu_475_p2;
wire  signed [17:0] ret_20_fu_483_p2;
wire  signed [17:0] ret_24_fu_491_p2;
wire   [63:0] zext_ln573_fu_522_p1;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_fu_505_p3;
reg   [15:0] k_V_fu_94;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_k_V_1;
wire   [15:0] k_V_2_fu_383_p2;
reg   [15:0] i_top_V_fu_98;
wire   [15:0] i_top_V_2_fu_555_p3;
reg   [15:0] i_V_fu_102;
wire   [15:0] i_V_1_fu_530_p2;
reg   [15:0] i_bot_V_fu_106;
wire   [15:0] i_bot_V_2_fu_563_p3;
wire    ap_block_pp0_stage0_01001;
wire   [7:0] grp_fu_389_p1;
wire   [7:0] grp_fu_395_p1;
wire   [7:0] grp_fu_389_p2;
wire   [7:0] ret_fu_406_p1;
wire   [7:0] grp_fu_395_p2;
wire   [7:0] trunc_ln217_fu_415_p1;
wire   [8:0] zext_ln1526_1_fu_424_p1;
wire  signed [8:0] ret_17_fu_427_p2;
wire  signed [8:0] ret_21_fu_436_p2;
wire  signed [8:0] ret_25_fu_445_p2;
wire   [8:0] zext_ln1526_fu_454_p1;
wire  signed [8:0] ret_16_fu_475_p1;
wire  signed [8:0] ret_20_fu_483_p1;
wire  signed [8:0] ret_24_fu_491_p1;
wire  signed [17:0] grp_fu_598_p3;
wire  signed [17:0] grp_fu_606_p3;
wire   [17:0] or_ln12_fu_496_p2;
wire  signed [17:0] grp_fu_614_p3;
wire   [17:0] or_ln12_1_fu_500_p2;
wire   [0:0] tmp_1_fu_536_p3;
wire   [15:0] i_top_V_1_fu_543_p2;
wire   [15:0] i_bot_V_1_fu_549_p2;
wire  signed [8:0] grp_fu_598_p1;
wire  signed [8:0] grp_fu_606_p1;
wire  signed [8:0] grp_fu_614_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 rhs_7_cast_reg_668 = 18'd0;
#0 triangle_2d_same_y2_V_cast_cast_reg_673 = 9'd0;
#0 rhs_6_cast_reg_678 = 18'd0;
#0 triangle_2d_same_x2_V_cast_cast_reg_683 = 9'd0;
#0 rhs_4_cast_reg_688 = 18'd0;
#0 triangle_2d_same_y1_V_cast_cast_reg_693 = 9'd0;
#0 rhs_3_cast_reg_698 = 18'd0;
#0 triangle_2d_same_x1_V_cast_cast_reg_703 = 9'd0;
#0 rhs_1_cast_reg_708 = 18'd0;
#0 triangle_2d_same_y0_V_cast_cast_reg_713 = 9'd0;
#0 rhs_cast_reg_718 = 18'd0;
#0 triangle_2d_same_x0_V_cast_cast_reg_723 = 9'd0;
#0 icmp_ln98_reg_740 = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter1_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter2_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter3_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter4_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter5_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter6_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter7_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter8_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter9_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter10_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter11_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter12_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter13_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter14_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter15_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter16_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter17_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter18_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter19_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter20_reg = 1'd0;
#0 icmp_ln98_reg_740_pp0_iter21_reg = 1'd0;
#0 x_V_reg_744 = 8'd0;
#0 x_V_reg_744_pp0_iter20_reg = 8'd0;
#0 x_V_reg_744_pp0_iter21_reg = 8'd0;
#0 x_V_reg_744_pp0_iter22_reg = 8'd0;
#0 y_V_reg_750 = 8'd0;
#0 y_V_reg_750_pp0_iter20_reg = 8'd0;
#0 y_V_reg_750_pp0_iter21_reg = 8'd0;
#0 y_V_reg_750_pp0_iter22_reg = 8'd0;
#0 ret_15_reg_772 = 9'd0;
#0 ret_19_reg_777 = 9'd0;
#0 ret_23_reg_782 = 9'd0;
#0 k_V_fu_94 = 16'd0;
#0 i_top_V_fu_98 = 16'd0;
#0 i_V_fu_102 = 16'd0;
#0 i_bot_V_fu_106 = 16'd0;
#0 ap_done_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter1_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter2_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter3_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter4_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter5_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter6_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter7_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter8_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter9_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter10_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter11_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter12_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter13_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter14_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter15_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter16_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter17_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter18_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter19_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter20_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter21_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter22_reg = 1'b0;
end

rasterization2_m_urem_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_16ns_8ns_8_20_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_k_V_1),
    .din1(grp_fu_389_p1),
    .ce(1'b1),
    .dout(grp_fu_389_p2)
);

rasterization2_m_udiv_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_16ns_8ns_8_20_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_k_V_1),
    .din1(grp_fu_395_p1),
    .ce(1'b1),
    .dout(grp_fu_395_p2)
);

rasterization2_m_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U3(
    .din0(ret_15_reg_772),
    .din1(ret_16_fu_475_p1),
    .dout(ret_16_fu_475_p2)
);

rasterization2_m_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U4(
    .din0(ret_19_reg_777),
    .din1(ret_20_fu_483_p1),
    .dout(ret_20_fu_483_p2)
);

rasterization2_m_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U5(
    .din0(ret_23_reg_782),
    .din1(ret_24_fu_491_p1),
    .dout(ret_24_fu_491_p2)
);

rasterization2_m_mac_mulsub_9s_9s_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18s_18_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_17_fu_427_p2),
    .din1(grp_fu_598_p1),
    .din2(ret_16_fu_475_p2),
    .ce(1'b1),
    .dout(grp_fu_598_p3)
);

rasterization2_m_mac_mulsub_9s_9s_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18s_18_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_21_fu_436_p2),
    .din1(grp_fu_606_p1),
    .din2(ret_20_fu_483_p2),
    .ce(1'b1),
    .dout(grp_fu_606_p3)
);

rasterization2_m_mac_mulsub_9s_9s_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18s_18_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_25_fu_445_p2),
    .din1(grp_fu_614_p1),
    .din2(ret_24_fu_491_p2),
    .ce(1'b1),
    .dout(grp_fu_614_p3)
);

rasterization2_m_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter22_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_V_fu_102 <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                i_V_fu_102 <= 16'd0;
            end else if (((ap_enable_reg_pp0_iter23 == 1'b1) & (tmp_fu_505_p3 == 1'd0))) begin
                i_V_fu_102 <= i_V_1_fu_530_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_bot_V_fu_106 <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                i_bot_V_fu_106 <= 16'd0;
            end else if (((ap_enable_reg_pp0_iter23 == 1'b1) & (tmp_fu_505_p3 == 1'd0))) begin
                i_bot_V_fu_106 <= i_bot_V_2_fu_563_p3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_top_V_fu_98 <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                i_top_V_fu_98 <= 16'd0;
            end else if (((ap_enable_reg_pp0_iter23 == 1'b1) & (tmp_fu_505_p3 == 1'd0))) begin
                i_top_V_fu_98 <= i_top_V_2_fu_555_p3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln98_reg_740 <= icmp_ln98_fu_377_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter10_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter10_reg <= icmp_ln98_reg_740_pp0_iter9_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter11_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter11_reg <= icmp_ln98_reg_740_pp0_iter10_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter12_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter12_reg <= icmp_ln98_reg_740_pp0_iter11_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter13_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter13_reg <= icmp_ln98_reg_740_pp0_iter12_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter14_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter14_reg <= icmp_ln98_reg_740_pp0_iter13_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter15_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter15_reg <= icmp_ln98_reg_740_pp0_iter14_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter16_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter16_reg <= icmp_ln98_reg_740_pp0_iter15_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter17_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter17_reg <= icmp_ln98_reg_740_pp0_iter16_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter18_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter18_reg <= icmp_ln98_reg_740_pp0_iter17_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter19_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter19_reg <= icmp_ln98_reg_740_pp0_iter18_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln98_reg_740_pp0_iter1_reg <= icmp_ln98_reg_740;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter20_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter20_reg <= icmp_ln98_reg_740_pp0_iter19_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter21_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter21_reg <= icmp_ln98_reg_740_pp0_iter20_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter2_reg <= icmp_ln98_reg_740_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter3_reg <= icmp_ln98_reg_740_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter4_reg <= icmp_ln98_reg_740_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter5_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter5_reg <= icmp_ln98_reg_740_pp0_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter6_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter6_reg <= icmp_ln98_reg_740_pp0_iter5_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter7_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter7_reg <= icmp_ln98_reg_740_pp0_iter6_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter8_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter8_reg <= icmp_ln98_reg_740_pp0_iter7_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln98_reg_740_pp0_iter9_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            icmp_ln98_reg_740_pp0_iter9_reg <= icmp_ln98_reg_740_pp0_iter8_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        k_V_fu_94 <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln98_fu_377_p2 == 1'd0))) begin
                k_V_fu_94 <= k_V_2_fu_383_p2;
            end else if ((ap_loop_init == 1'b1)) begin
                k_V_fu_94 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_15_reg_772 <= 9'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ret_15_reg_772 <= ret_15_fu_457_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_19_reg_777 <= 9'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ret_19_reg_777 <= ret_19_fu_462_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_23_reg_782 <= 9'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ret_23_reg_782 <= ret_23_fu_467_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rhs_1_cast_reg_708 <= 18'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            rhs_1_cast_reg_708 <= rhs_1_cast_fu_334_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rhs_3_cast_reg_698 <= 18'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            rhs_3_cast_reg_698 <= rhs_3_cast_fu_326_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rhs_4_cast_reg_688 <= 18'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            rhs_4_cast_reg_688 <= rhs_4_cast_fu_318_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rhs_6_cast_reg_678 <= 18'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            rhs_6_cast_reg_678 <= rhs_6_cast_fu_310_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rhs_7_cast_reg_668 <= 18'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            rhs_7_cast_reg_668 <= rhs_7_cast_fu_302_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rhs_cast_reg_718 <= 18'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            rhs_cast_reg_718 <= rhs_cast_fu_342_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                triangle_2d_same_x0_V_cast_cast_reg_723[0] <= 1'b0;
        triangle_2d_same_x0_V_cast_cast_reg_723[1] <= 1'b0;
        triangle_2d_same_x0_V_cast_cast_reg_723[2] <= 1'b0;
        triangle_2d_same_x0_V_cast_cast_reg_723[3] <= 1'b0;
        triangle_2d_same_x0_V_cast_cast_reg_723[4] <= 1'b0;
        triangle_2d_same_x0_V_cast_cast_reg_723[5] <= 1'b0;
        triangle_2d_same_x0_V_cast_cast_reg_723[6] <= 1'b0;
        triangle_2d_same_x0_V_cast_cast_reg_723[7] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        triangle_2d_same_x0_V_cast_cast_reg_723[7 : 0] <= triangle_2d_same_x0_V_cast_cast_fu_346_p1[7 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                triangle_2d_same_x1_V_cast_cast_reg_703[0] <= 1'b0;
        triangle_2d_same_x1_V_cast_cast_reg_703[1] <= 1'b0;
        triangle_2d_same_x1_V_cast_cast_reg_703[2] <= 1'b0;
        triangle_2d_same_x1_V_cast_cast_reg_703[3] <= 1'b0;
        triangle_2d_same_x1_V_cast_cast_reg_703[4] <= 1'b0;
        triangle_2d_same_x1_V_cast_cast_reg_703[5] <= 1'b0;
        triangle_2d_same_x1_V_cast_cast_reg_703[6] <= 1'b0;
        triangle_2d_same_x1_V_cast_cast_reg_703[7] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        triangle_2d_same_x1_V_cast_cast_reg_703[7 : 0] <= triangle_2d_same_x1_V_cast_cast_fu_330_p1[7 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                triangle_2d_same_x2_V_cast_cast_reg_683[0] <= 1'b0;
        triangle_2d_same_x2_V_cast_cast_reg_683[1] <= 1'b0;
        triangle_2d_same_x2_V_cast_cast_reg_683[2] <= 1'b0;
        triangle_2d_same_x2_V_cast_cast_reg_683[3] <= 1'b0;
        triangle_2d_same_x2_V_cast_cast_reg_683[4] <= 1'b0;
        triangle_2d_same_x2_V_cast_cast_reg_683[5] <= 1'b0;
        triangle_2d_same_x2_V_cast_cast_reg_683[6] <= 1'b0;
        triangle_2d_same_x2_V_cast_cast_reg_683[7] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        triangle_2d_same_x2_V_cast_cast_reg_683[7 : 0] <= triangle_2d_same_x2_V_cast_cast_fu_314_p1[7 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                triangle_2d_same_y0_V_cast_cast_reg_713[0] <= 1'b0;
        triangle_2d_same_y0_V_cast_cast_reg_713[1] <= 1'b0;
        triangle_2d_same_y0_V_cast_cast_reg_713[2] <= 1'b0;
        triangle_2d_same_y0_V_cast_cast_reg_713[3] <= 1'b0;
        triangle_2d_same_y0_V_cast_cast_reg_713[4] <= 1'b0;
        triangle_2d_same_y0_V_cast_cast_reg_713[5] <= 1'b0;
        triangle_2d_same_y0_V_cast_cast_reg_713[6] <= 1'b0;
        triangle_2d_same_y0_V_cast_cast_reg_713[7] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        triangle_2d_same_y0_V_cast_cast_reg_713[7 : 0] <= triangle_2d_same_y0_V_cast_cast_fu_338_p1[7 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                triangle_2d_same_y1_V_cast_cast_reg_693[0] <= 1'b0;
        triangle_2d_same_y1_V_cast_cast_reg_693[1] <= 1'b0;
        triangle_2d_same_y1_V_cast_cast_reg_693[2] <= 1'b0;
        triangle_2d_same_y1_V_cast_cast_reg_693[3] <= 1'b0;
        triangle_2d_same_y1_V_cast_cast_reg_693[4] <= 1'b0;
        triangle_2d_same_y1_V_cast_cast_reg_693[5] <= 1'b0;
        triangle_2d_same_y1_V_cast_cast_reg_693[6] <= 1'b0;
        triangle_2d_same_y1_V_cast_cast_reg_693[7] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        triangle_2d_same_y1_V_cast_cast_reg_693[7 : 0] <= triangle_2d_same_y1_V_cast_cast_fu_322_p1[7 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                triangle_2d_same_y2_V_cast_cast_reg_673[0] <= 1'b0;
        triangle_2d_same_y2_V_cast_cast_reg_673[1] <= 1'b0;
        triangle_2d_same_y2_V_cast_cast_reg_673[2] <= 1'b0;
        triangle_2d_same_y2_V_cast_cast_reg_673[3] <= 1'b0;
        triangle_2d_same_y2_V_cast_cast_reg_673[4] <= 1'b0;
        triangle_2d_same_y2_V_cast_cast_reg_673[5] <= 1'b0;
        triangle_2d_same_y2_V_cast_cast_reg_673[6] <= 1'b0;
        triangle_2d_same_y2_V_cast_cast_reg_673[7] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        triangle_2d_same_y2_V_cast_cast_reg_673[7 : 0] <= triangle_2d_same_y2_V_cast_cast_fu_306_p1[7 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_reg_744 <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            x_V_reg_744 <= x_V_fu_410_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_reg_744_pp0_iter20_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            x_V_reg_744_pp0_iter20_reg <= x_V_reg_744;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_reg_744_pp0_iter21_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            x_V_reg_744_pp0_iter21_reg <= x_V_reg_744_pp0_iter20_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_reg_744_pp0_iter22_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            x_V_reg_744_pp0_iter22_reg <= x_V_reg_744_pp0_iter21_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        y_V_reg_750 <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            y_V_reg_750 <= y_V_fu_419_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        y_V_reg_750_pp0_iter20_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            y_V_reg_750_pp0_iter20_reg <= y_V_reg_750;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        y_V_reg_750_pp0_iter21_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            y_V_reg_750_pp0_iter21_reg <= y_V_reg_750_pp0_iter20_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        y_V_reg_750_pp0_iter22_reg <= 8'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            y_V_reg_750_pp0_iter22_reg <= y_V_reg_750_pp0_iter21_reg;
        end
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_fu_377_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter22_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_k_V_1 = 16'd0;
    end else begin
        ap_sig_allocacmp_k_V_1 = k_V_fu_94;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_color_V_ce1 = 1'b1;
    end else begin
        fragment_color_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (tmp_fu_505_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_color_V_we1 = 1'b1;
    end else begin
        fragment_color_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_x_V_ce1 = 1'b1;
    end else begin
        fragment_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (tmp_fu_505_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_x_V_we1 = 1'b1;
    end else begin
        fragment_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_y_V_ce1 = 1'b1;
    end else begin
        fragment_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (tmp_fu_505_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_y_V_we1 = 1'b1;
    end else begin
        fragment_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_z_V_ce1 = 1'b1;
    end else begin
        fragment_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (tmp_fu_505_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_z_V_we1 = 1'b1;
    end else begin
        fragment_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_740_pp0_iter21_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_V_out_ap_vld = 1'b1;
    end else begin
        i_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_740_pp0_iter21_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_bot_V_out_ap_vld = 1'b1;
    end else begin
        i_bot_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_740_pp0_iter21_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_top_V_out_ap_vld = 1'b1;
    end else begin
        i_top_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign fragment_color_V_address1 = zext_ln573_fu_522_p1;

assign fragment_color_V_d1 = 6'd36;

assign fragment_x_V_address1 = zext_ln573_fu_522_p1;

assign fragment_x_V_d1 = x_V_reg_744_pp0_iter22_reg;

assign fragment_y_V_address1 = zext_ln573_fu_522_p1;

assign fragment_y_V_d1 = y_V_reg_750_pp0_iter22_reg;

assign fragment_z_V_address1 = zext_ln573_fu_522_p1;

assign fragment_z_V_d1 = triangle_2d_same_z_V;

assign grp_fu_389_p1 = max_min_V_2_cast_cast_fu_350_p1;

assign grp_fu_395_p1 = max_min_V_2_cast_cast_fu_350_p1;

assign grp_fu_598_p1 = rhs_1_cast_reg_708;

assign grp_fu_606_p1 = rhs_4_cast_reg_688;

assign grp_fu_614_p1 = rhs_7_cast_reg_668;

assign i_V_1_fu_530_p2 = (i_V_fu_102 + 16'd1);

assign i_V_out = i_V_fu_102;

assign i_bot_V_1_fu_549_p2 = (i_bot_V_fu_106 + 16'd1);

assign i_bot_V_2_fu_563_p3 = ((tmp_1_fu_536_p3[0:0] == 1'b1) ? i_bot_V_fu_106 : i_bot_V_1_fu_549_p2);

assign i_bot_V_out = i_bot_V_fu_106;

assign i_top_V_1_fu_543_p2 = (i_top_V_fu_98 + 16'd1);

assign i_top_V_2_fu_555_p3 = ((tmp_1_fu_536_p3[0:0] == 1'b1) ? i_top_V_1_fu_543_p2 : i_top_V_fu_98);

assign i_top_V_out = i_top_V_fu_98;

assign icmp_ln98_fu_377_p2 = ((ap_sig_allocacmp_k_V_1 == p_Result_8) ? 1'b1 : 1'b0);

assign k_V_2_fu_383_p2 = (ap_sig_allocacmp_k_V_1 + 16'd1);

assign max_min_V_2_cast_cast_fu_350_p1 = max_min_V_2_cast;

assign or_ln12_1_fu_500_p2 = (or_ln12_fu_496_p2 | grp_fu_614_p3);

assign or_ln12_fu_496_p2 = (grp_fu_606_p3 | grp_fu_598_p3);

assign ret_15_fu_457_p2 = (zext_ln1526_fu_454_p1 - triangle_2d_same_x0_V_cast_cast_reg_723);

assign ret_16_fu_475_p1 = rhs_cast_reg_718;

assign ret_17_fu_427_p2 = (zext_ln1526_1_fu_424_p1 - triangle_2d_same_y0_V_cast_cast_reg_713);

assign ret_19_fu_462_p2 = (zext_ln1526_fu_454_p1 - triangle_2d_same_x1_V_cast_cast_reg_703);

assign ret_20_fu_483_p1 = rhs_3_cast_reg_698;

assign ret_21_fu_436_p2 = (zext_ln1526_1_fu_424_p1 - triangle_2d_same_y1_V_cast_cast_reg_693);

assign ret_23_fu_467_p2 = (zext_ln1526_fu_454_p1 - triangle_2d_same_x2_V_cast_cast_reg_683);

assign ret_24_fu_491_p1 = rhs_6_cast_reg_678;

assign ret_25_fu_445_p2 = (zext_ln1526_1_fu_424_p1 - triangle_2d_same_y2_V_cast_cast_reg_673);

assign ret_fu_406_p1 = grp_fu_389_p2[7:0];

assign rhs_1_cast_fu_334_p1 = $signed(rhs_1);

assign rhs_3_cast_fu_326_p1 = $signed(rhs_3);

assign rhs_4_cast_fu_318_p1 = $signed(rhs_4);

assign rhs_6_cast_fu_310_p1 = $signed(rhs_6);

assign rhs_7_cast_fu_302_p1 = $signed(rhs_7);

assign rhs_cast_fu_342_p1 = $signed(rhs);

assign tmp_1_fu_536_p3 = y_V_reg_750_pp0_iter22_reg[32'd7];

assign tmp_fu_505_p3 = or_ln12_1_fu_500_p2[32'd17];

assign triangle_2d_same_x0_V_cast_cast_fu_346_p1 = triangle_2d_same_x0_V_cast;

assign triangle_2d_same_x1_V_cast_cast_fu_330_p1 = triangle_2d_same_x1_V_cast;

assign triangle_2d_same_x2_V_cast_cast_fu_314_p1 = triangle_2d_same_x2_V_cast;

assign triangle_2d_same_y0_V_cast_cast_fu_338_p1 = triangle_2d_same_y0_V_cast;

assign triangle_2d_same_y1_V_cast_cast_fu_322_p1 = triangle_2d_same_y1_V_cast;

assign triangle_2d_same_y2_V_cast_cast_fu_306_p1 = triangle_2d_same_y2_V_cast;

assign trunc_ln217_fu_415_p1 = grp_fu_395_p2[7:0];

assign x_V_fu_410_p2 = (ret_fu_406_p1 + max_min_V);

assign y_V_fu_419_p2 = (trunc_ln217_fu_415_p1 + max_min_V_1);

assign zext_ln1526_1_fu_424_p1 = y_V_reg_750;

assign zext_ln1526_fu_454_p1 = x_V_reg_744_pp0_iter20_reg;

assign zext_ln573_fu_522_p1 = i_V_fu_102;

always @ (posedge ap_clk) begin
    triangle_2d_same_y2_V_cast_cast_reg_673[8] <= 1'b0;
    triangle_2d_same_x2_V_cast_cast_reg_683[8] <= 1'b0;
    triangle_2d_same_y1_V_cast_cast_reg_693[8] <= 1'b0;
    triangle_2d_same_x1_V_cast_cast_reg_703[8] <= 1'b0;
    triangle_2d_same_y0_V_cast_cast_reg_713[8] <= 1'b0;
    triangle_2d_same_x0_V_cast_cast_reg_723[8] <= 1'b0;
end

endmodule //rasterization2_m_rasterization2_odd_Pipeline_RAST2
