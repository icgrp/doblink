// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rasterization2_m_rasterization2_odd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        Input_1_V_TDATA,
        Input_1_V_TVALID,
        Input_1_V_TREADY,
        Output_1_V_TDATA,
        Output_1_V_TVALID,
        Output_1_V_TREADY,
        Output_2_V_TDATA,
        Output_2_V_TVALID,
        Output_2_V_TREADY
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_TDATA;
input   Input_1_V_TVALID;
output   Input_1_V_TREADY;
output  [31:0] Output_1_V_TDATA;
output   Output_1_V_TVALID;
input   Output_1_V_TREADY;
output  [31:0] Output_2_V_TDATA;
output   Output_2_V_TVALID;
input   Output_2_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] in_cnt;
reg   [31:0] out1_cnt;
reg   [31:0] out2_cnt;
reg    fragment_x_V_ce0;
wire   [7:0] fragment_x_V_q0;
reg    fragment_x_V_ce1;
reg    fragment_x_V_we1;
reg    fragment_y_V_ce0;
wire   [7:0] fragment_y_V_q0;
reg    fragment_y_V_ce1;
reg    fragment_y_V_we1;
reg    fragment_z_V_ce0;
wire   [7:0] fragment_z_V_q0;
reg    fragment_z_V_ce1;
reg    fragment_z_V_we1;
reg    fragment_color_V_ce0;
wire   [5:0] fragment_color_V_q0;
reg    fragment_color_V_ce1;
reg    fragment_color_V_we1;
reg    Input_1_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    Output_1_V_TDATA_blk_n;
reg   [0:0] icmp_ln80_reg_393;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    Output_2_V_TDATA_blk_n;
reg   [7:0] triangle_2d_same_x0_V_reg_375;
reg   [7:0] triangle_2d_same_y0_V_reg_381;
reg   [7:0] triangle_2d_same_x1_V_reg_387;
wire   [0:0] icmp_ln80_fu_224_p2;
wire   [7:0] triangle_2d_same_y1_V_fu_230_p1;
reg   [7:0] triangle_2d_same_y1_V_reg_397;
reg   [7:0] triangle_2d_same_x2_V_reg_403;
reg   [7:0] triangle_2d_same_y2_V_reg_409;
reg   [7:0] triangle_2d_same_z_V_reg_415;
wire   [15:0] trunc_ln674_fu_234_p1;
reg   [15:0] trunc_ln674_reg_420;
reg   [7:0] max_min_V_reg_425;
wire   [7:0] max_min_V_1_fu_238_p1;
reg   [7:0] max_min_V_1_reg_430;
reg   [7:0] max_min_V_2_reg_435;
reg   [31:0] out1_cnt_load_reg_440;
reg   [31:0] out2_cnt_load_reg_445;
wire   [8:0] ret_22_fu_271_p2;
reg   [8:0] ret_22_reg_450;
wire   [8:0] ret_25_fu_284_p2;
reg   [8:0] ret_25_reg_455;
wire   [8:0] ret_28_fu_294_p2;
reg   [8:0] ret_28_reg_460;
wire   [8:0] ret_31_fu_304_p2;
reg   [8:0] ret_31_reg_465;
wire   [8:0] ret_34_fu_311_p2;
reg   [8:0] ret_34_reg_470;
wire   [8:0] ret_37_fu_318_p2;
reg   [8:0] ret_37_reg_475;
wire   [31:0] zext_ln217_fu_331_p1;
wire   [31:0] zext_ln217_1_fu_336_p1;
wire   [31:0] grp_fu_194_p2;
reg   [31:0] add_ln119_reg_490;
wire   [31:0] grp_fu_199_p2;
reg   [31:0] add_ln122_reg_495;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_done;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_idle;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_ready;
wire   [15:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_bot_V_out;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_bot_V_out_ap_vld;
wire   [15:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_V_out;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_V_out_ap_vld;
wire   [15:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_top_V_out;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_top_V_out_ap_vld;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_address1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_ce1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_we1;
wire   [7:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_d1;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_address1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_ce1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_we1;
wire   [7:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_d1;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_address1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_ce1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_we1;
wire   [7:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_d1;
wire   [8:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_address1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_ce1;
wire    grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_we1;
wire   [5:0] grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_d1;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_done;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_idle;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_ready;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TREADY;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TREADY;
wire   [31:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TDATA;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TVALID;
wire   [31:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TDATA;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TVALID;
wire   [31:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out1_cnt;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out1_cnt_ap_vld;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_x_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_x_V_ce0;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_y_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_y_V_ce0;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_z_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_z_V_ce0;
wire   [8:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_color_V_address0;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_color_V_ce0;
wire   [31:0] grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out2_cnt;
wire    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out2_cnt_ap_vld;
reg    grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start_reg;
reg    ap_block_state4_ignore_call12;
reg    ap_block_state4_io;
wire    ap_CS_fsm_state6;
reg    grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [31:0] add_ln70_fu_212_p2;
reg    ap_block_state1;
reg    ap_block_state8;
reg    ap_block_state8_io;
reg    ap_block_state4;
reg    ap_block_state7;
reg    ap_block_state7_io;
reg   [31:0] grp_fu_194_p0;
reg   [31:0] grp_fu_199_p0;
wire   [1:0] flag_V_fu_204_p1;
wire   [8:0] triangle_2d_same_y1_V_cast_fu_265_p1;
wire   [8:0] triangle_2d_same_y0_V_cast_fu_268_p1;
wire   [8:0] triangle_2d_same_x1_V_cast_fu_278_p1;
wire   [8:0] triangle_2d_same_x0_V_cast_fu_281_p1;
wire   [8:0] triangle_2d_same_y2_V_cast_fu_291_p1;
wire   [8:0] triangle_2d_same_x2_V_cast_fu_301_p1;
wire    ap_CS_fsm_state11;
wire    regslice_both_Output_1_V_U_apdone_blk;
wire    regslice_both_Output_2_V_U_apdone_blk;
reg    ap_block_state11;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_block_state5;
reg    ap_block_state5_io;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    regslice_both_Input_1_V_U_apdone_blk;
wire   [31:0] Input_1_V_TDATA_int_regslice;
wire    Input_1_V_TVALID_int_regslice;
reg    Input_1_V_TREADY_int_regslice;
wire    regslice_both_Input_1_V_U_ack_in;
reg   [31:0] Output_1_V_TDATA_int_regslice;
reg    Output_1_V_TVALID_int_regslice;
wire    Output_1_V_TREADY_int_regslice;
wire    regslice_both_Output_1_V_U_vld_out;
reg   [31:0] Output_2_V_TDATA_int_regslice;
reg    Output_2_V_TVALID_int_regslice;
wire    Output_2_V_TREADY_int_regslice;
wire    regslice_both_Output_2_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
#0 in_cnt = 32'd0;
#0 out1_cnt = 32'd0;
#0 out2_cnt = 32'd0;
#0 icmp_ln80_reg_393 = 1'd0;
#0 triangle_2d_same_x0_V_reg_375 = 8'd0;
#0 triangle_2d_same_y0_V_reg_381 = 8'd0;
#0 triangle_2d_same_x1_V_reg_387 = 8'd0;
#0 triangle_2d_same_y1_V_reg_397 = 8'd0;
#0 triangle_2d_same_x2_V_reg_403 = 8'd0;
#0 triangle_2d_same_y2_V_reg_409 = 8'd0;
#0 triangle_2d_same_z_V_reg_415 = 8'd0;
#0 trunc_ln674_reg_420 = 16'd0;
#0 max_min_V_reg_425 = 8'd0;
#0 max_min_V_1_reg_430 = 8'd0;
#0 max_min_V_2_reg_435 = 8'd0;
#0 out1_cnt_load_reg_440 = 32'd0;
#0 out2_cnt_load_reg_445 = 32'd0;
#0 ret_22_reg_450 = 9'd0;
#0 ret_25_reg_455 = 9'd0;
#0 ret_28_reg_460 = 9'd0;
#0 ret_31_reg_465 = 9'd0;
#0 ret_34_reg_470 = 9'd0;
#0 ret_37_reg_475 = 9'd0;
#0 add_ln119_reg_490 = 32'd0;
#0 add_ln122_reg_495 = 32'd0;
#0 grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start_reg = 1'b0;
#0 grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start_reg = 1'b0;
end

rasterization2_m_rasterization2_odd_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_x_V_address0),
    .ce0(fragment_x_V_ce0),
    .q0(fragment_x_V_q0),
    .address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_address1),
    .ce1(fragment_x_V_ce1),
    .we1(fragment_x_V_we1),
    .d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_d1)
);

rasterization2_m_rasterization2_odd_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_y_V_address0),
    .ce0(fragment_y_V_ce0),
    .q0(fragment_y_V_q0),
    .address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_address1),
    .ce1(fragment_y_V_ce1),
    .we1(fragment_y_V_we1),
    .d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_d1)
);

rasterization2_m_rasterization2_odd_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_z_V_address0),
    .ce0(fragment_z_V_ce0),
    .q0(fragment_z_V_q0),
    .address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_address1),
    .ce1(fragment_z_V_ce1),
    .we1(fragment_z_V_we1),
    .d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_d1)
);

rasterization2_m_rasterization2_odd_fragment_color_V #(
    .DataWidth( 6 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_color_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_color_V_address0),
    .ce0(fragment_color_V_ce0),
    .q0(fragment_color_V_q0),
    .address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_address1),
    .ce1(fragment_color_V_ce1),
    .we1(fragment_color_V_we1),
    .d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_d1)
);

rasterization2_m_rasterization2_odd_Pipeline_RAST2 grp_rasterization2_odd_Pipeline_RAST2_fu_108(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start),
    .ap_done(grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_done),
    .ap_idle(grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_idle),
    .ap_ready(grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_ready),
    .p_Result_8(trunc_ln674_reg_420),
    .max_min_V_2_cast(max_min_V_2_reg_435),
    .max_min_V(max_min_V_reg_425),
    .max_min_V_1(max_min_V_1_reg_430),
    .triangle_2d_same_x0_V_cast(triangle_2d_same_x0_V_reg_375),
    .rhs(ret_22_reg_450),
    .triangle_2d_same_y0_V_cast(triangle_2d_same_y0_V_reg_381),
    .rhs_1(ret_25_reg_455),
    .triangle_2d_same_x1_V_cast(triangle_2d_same_x1_V_reg_387),
    .rhs_3(ret_28_reg_460),
    .triangle_2d_same_y1_V_cast(triangle_2d_same_y1_V_reg_397),
    .rhs_4(ret_31_reg_465),
    .triangle_2d_same_x2_V_cast(triangle_2d_same_x2_V_reg_403),
    .rhs_6(ret_34_reg_470),
    .triangle_2d_same_y2_V_cast(triangle_2d_same_y2_V_reg_409),
    .rhs_7(ret_37_reg_475),
    .triangle_2d_same_z_V(triangle_2d_same_z_V_reg_415),
    .i_bot_V_out(grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_bot_V_out),
    .i_bot_V_out_ap_vld(grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_bot_V_out_ap_vld),
    .i_V_out(grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_V_out),
    .i_V_out_ap_vld(grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_V_out_ap_vld),
    .i_top_V_out(grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_top_V_out),
    .i_top_V_out_ap_vld(grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_top_V_out_ap_vld),
    .fragment_x_V_address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_address1),
    .fragment_x_V_ce1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_ce1),
    .fragment_x_V_we1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_we1),
    .fragment_x_V_d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_d1),
    .fragment_y_V_address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_address1),
    .fragment_y_V_ce1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_ce1),
    .fragment_y_V_we1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_we1),
    .fragment_y_V_d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_d1),
    .fragment_z_V_address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_address1),
    .fragment_z_V_ce1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_ce1),
    .fragment_z_V_we1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_we1),
    .fragment_z_V_d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_d1),
    .fragment_color_V_address1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_address1),
    .fragment_color_V_ce1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_ce1),
    .fragment_color_V_we1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_we1),
    .fragment_color_V_d1(grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_d1)
);

rasterization2_m_rasterization2_odd_Pipeline_VITIS_LOOP_128_1 grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start),
    .ap_done(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_done),
    .ap_idle(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_idle),
    .ap_ready(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_ready),
    .Output_2_V_TREADY(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TREADY),
    .Output_1_V_TREADY(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TREADY),
    .add_ln119(add_ln119_reg_490),
    .add_ln122(add_ln122_reg_495),
    .i_V_reload(grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_V_out),
    .Output_1_V_TDATA(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TDATA),
    .Output_1_V_TVALID(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TVALID),
    .Output_2_V_TDATA(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TDATA),
    .Output_2_V_TVALID(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TVALID),
    .out1_cnt(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out1_cnt),
    .out1_cnt_ap_vld(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out1_cnt_ap_vld),
    .fragment_x_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_x_V_address0),
    .fragment_x_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_x_V_ce0),
    .fragment_x_V_q0(fragment_x_V_q0),
    .fragment_y_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_y_V_address0),
    .fragment_y_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_y_V_ce0),
    .fragment_y_V_q0(fragment_y_V_q0),
    .fragment_z_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_z_V_address0),
    .fragment_z_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_z_V_ce0),
    .fragment_z_V_q0(fragment_z_V_q0),
    .fragment_color_V_address0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_color_V_address0),
    .fragment_color_V_ce0(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_color_V_ce0),
    .fragment_color_V_q0(fragment_color_V_q0),
    .out2_cnt(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out2_cnt),
    .out2_cnt_ap_vld(grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out2_cnt_ap_vld)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(Input_1_V_TDATA),
    .vld_in(Input_1_V_TVALID),
    .ack_in(regslice_both_Input_1_V_U_ack_in),
    .data_out(Input_1_V_TDATA_int_regslice),
    .vld_out(Input_1_V_TVALID_int_regslice),
    .ack_out(Input_1_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_1_V_U_apdone_blk)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(Output_1_V_TDATA_int_regslice),
    .vld_in(Output_1_V_TVALID_int_regslice),
    .ack_in(Output_1_V_TREADY_int_regslice),
    .data_out(Output_1_V_TDATA),
    .vld_out(regslice_both_Output_1_V_U_vld_out),
    .ack_out(Output_1_V_TREADY),
    .apdone_blk(regslice_both_Output_1_V_U_apdone_blk)
);

rasterization2_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(Output_2_V_TDATA_int_regslice),
    .vld_in(Output_2_V_TVALID_int_regslice),
    .ack_in(Output_2_V_TREADY_int_regslice),
    .data_out(Output_2_V_TDATA),
    .vld_out(regslice_both_Output_2_V_U_vld_out),
    .ack_out(Output_2_V_TREADY),
    .apdone_blk(regslice_both_Output_2_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        add_ln119_reg_490 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            add_ln119_reg_490 <= grp_fu_194_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        add_ln122_reg_495 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            add_ln122_reg_495 <= grp_fu_199_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start_reg <= 1'b0;
    end else begin
        if ((~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
            grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start_reg <= 1'b1;
        end else if ((grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_ready == 1'b1)) begin
            grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start_reg <= 1'b1;
        end else if ((grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_ready == 1'b1)) begin
            grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln80_reg_393 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            icmp_ln80_reg_393 <= icmp_ln80_fu_224_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        in_cnt <= 32'd0;
    end else begin
        if ((~((1'b0 == Input_1_V_TVALID_int_regslice) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            in_cnt <= add_ln70_fu_212_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        max_min_V_1_reg_430 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            max_min_V_1_reg_430 <= max_min_V_1_fu_238_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        max_min_V_2_reg_435 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            max_min_V_2_reg_435 <= {{Input_1_V_TDATA_int_regslice[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        max_min_V_reg_425 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            max_min_V_reg_425 <= {{Input_1_V_TDATA_int_regslice[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out1_cnt <= 32'd0;
    end else begin
        if (((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state8_io)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0)))) begin
            out1_cnt <= grp_fu_194_p2;
        end else if (((grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out1_cnt_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
            out1_cnt <= grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out1_cnt;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out1_cnt_load_reg_440 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            out1_cnt_load_reg_440 <= out1_cnt;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out2_cnt <= 32'd0;
    end else begin
        if (((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state8_io)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0)))) begin
            out2_cnt <= grp_fu_199_p2;
        end else if (((grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out2_cnt_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
            out2_cnt <= grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_out2_cnt;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out2_cnt_load_reg_445 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            out2_cnt_load_reg_445 <= out2_cnt;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_22_reg_450 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
            ret_22_reg_450 <= ret_22_fu_271_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_25_reg_455 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
            ret_25_reg_455 <= ret_25_fu_284_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_28_reg_460 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
            ret_28_reg_460 <= ret_28_fu_294_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_31_reg_465 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
            ret_31_reg_465 <= ret_31_fu_304_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_34_reg_470 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
            ret_34_reg_470 <= ret_34_fu_311_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ret_37_reg_475 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
            ret_37_reg_475 <= ret_37_fu_318_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        triangle_2d_same_x0_V_reg_375 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            triangle_2d_same_x0_V_reg_375 <= {{Input_1_V_TDATA_int_regslice[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        triangle_2d_same_x1_V_reg_387 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            triangle_2d_same_x1_V_reg_387 <= {{Input_1_V_TDATA_int_regslice[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        triangle_2d_same_x2_V_reg_403 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            triangle_2d_same_x2_V_reg_403 <= {{Input_1_V_TDATA_int_regslice[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        triangle_2d_same_y0_V_reg_381 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            triangle_2d_same_y0_V_reg_381 <= {{Input_1_V_TDATA_int_regslice[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        triangle_2d_same_y1_V_reg_397 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            triangle_2d_same_y1_V_reg_397 <= triangle_2d_same_y1_V_fu_230_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        triangle_2d_same_y2_V_reg_409 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            triangle_2d_same_y2_V_reg_409 <= {{Input_1_V_TDATA_int_regslice[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        triangle_2d_same_z_V_reg_415 <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            triangle_2d_same_z_V_reg_415 <= {{Input_1_V_TDATA_int_regslice[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        trunc_ln674_reg_420 <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            trunc_ln674_reg_420 <= trunc_ln674_fu_234_p1;
        end
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        Input_1_V_TDATA_blk_n = Input_1_V_TVALID_int_regslice;
    end else begin
        Input_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4)) | (~((1'b0 == Input_1_V_TVALID_int_regslice) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == Input_1_V_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state2) & (1'b1 == Input_1_V_TVALID_int_regslice)))) begin
        Input_1_V_TREADY_int_regslice = 1'b1;
    end else begin
        Input_1_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0)))) begin
        Output_1_V_TDATA_blk_n = Output_1_V_TREADY_int_regslice;
    end else begin
        Output_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice)) & (1'b1 == ap_CS_fsm_state7))) begin
        Output_1_V_TDATA_int_regslice = zext_ln217_fu_331_p1;
    end else if ((~((1'b0 == Input_1_V_TVALID_int_regslice) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0))) begin
        Output_1_V_TDATA_int_regslice = 32'd0;
    end else if (((grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        Output_1_V_TDATA_int_regslice = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TDATA;
    end else begin
        Output_1_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state7_io)) & (1'b1 == ap_CS_fsm_state7)) | (~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0)))) begin
        Output_1_V_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Output_1_V_TVALID_int_regslice = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TVALID;
    end else begin
        Output_1_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0)))) begin
        Output_2_V_TDATA_blk_n = Output_2_V_TREADY_int_regslice;
    end else begin
        Output_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice)) & (1'b1 == ap_CS_fsm_state7))) begin
        Output_2_V_TDATA_int_regslice = zext_ln217_1_fu_336_p1;
    end else if ((~((1'b0 == Input_1_V_TVALID_int_regslice) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0))) begin
        Output_2_V_TDATA_int_regslice = 32'd0;
    end else if (((grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        Output_2_V_TDATA_int_regslice = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TDATA;
    end else begin
        Output_2_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state7_io)) & (1'b1 == ap_CS_fsm_state7)) | (~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0)))) begin
        Output_2_V_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Output_2_V_TVALID_int_regslice = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TVALID;
    end else begin
        Output_2_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Input_1_V_TVALID_int_regslice) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Input_1_V_TVALID_int_regslice)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Input_1_V_TVALID_int_regslice)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state5_io))) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state7_io))) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state8_io))) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fragment_color_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_color_V_ce0;
    end else begin
        fragment_color_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_color_V_ce1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_ce1;
    end else begin
        fragment_color_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_color_V_we1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_color_V_we1;
    end else begin
        fragment_color_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fragment_x_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_x_V_ce0;
    end else begin
        fragment_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_x_V_ce1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_ce1;
    end else begin
        fragment_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_x_V_we1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_x_V_we1;
    end else begin
        fragment_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fragment_y_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_y_V_ce0;
    end else begin
        fragment_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_y_V_ce1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_ce1;
    end else begin
        fragment_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_y_V_we1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_y_V_we1;
    end else begin
        fragment_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fragment_z_V_ce0 = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_fragment_z_V_ce0;
    end else begin
        fragment_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_z_V_ce1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_ce1;
    end else begin
        fragment_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fragment_z_V_we1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_fragment_z_V_we1;
    end else begin
        fragment_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_194_p0 = out1_cnt_load_reg_440;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_194_p0 = out1_cnt;
    end else begin
        grp_fu_194_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_199_p0 = out2_cnt_load_reg_445;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_199_p0 = out2_cnt;
    end else begin
        grp_fu_199_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Input_1_V_TVALID_int_regslice) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == Input_1_V_TVALID_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == Input_1_V_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~((1'b0 == Input_1_V_TVALID_int_regslice) | (1'b1 == ap_block_state4_io) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln80_reg_393 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state5_io)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state7_io)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice) | (1'b1 == ap_block_state8_io)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input_1_V_TREADY = regslice_both_Input_1_V_U_ack_in;

assign Output_1_V_TVALID = regslice_both_Output_1_V_U_vld_out;

assign Output_2_V_TVALID = regslice_both_Output_2_V_U_vld_out;

assign add_ln70_fu_212_p2 = (in_cnt + 32'd4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == Input_1_V_TVALID_int_regslice) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state11 = ((regslice_both_Output_2_V_U_apdone_blk == 1'b1) | (regslice_both_Output_1_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state4 = ((1'b0 == Input_1_V_TVALID_int_regslice) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_ignore_call12 = ((1'b0 == Input_1_V_TVALID_int_regslice) | ((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_io = (((1'b0 == Output_2_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln80_reg_393 == 1'd0)));
end

always @ (*) begin
    ap_block_state5 = ((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state5_io = ((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state7 = ((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state7_io = ((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state8 = ((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state8_io = ((1'b0 == Output_2_V_TREADY_int_regslice) | (1'b0 == Output_1_V_TREADY_int_regslice));
end

assign flag_V_fu_204_p1 = Input_1_V_TDATA_int_regslice[1:0];

assign grp_fu_194_p2 = (grp_fu_194_p0 + 32'd1);

assign grp_fu_199_p2 = (grp_fu_199_p0 + 32'd1);

assign grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start = grp_rasterization2_odd_Pipeline_RAST2_fu_108_ap_start_reg;

assign grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_1_V_TREADY = (ap_CS_fsm_state10 & Output_1_V_TREADY_int_regslice);

assign grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_Output_2_V_TREADY = (ap_CS_fsm_state10 & Output_2_V_TREADY_int_regslice);

assign grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start = grp_rasterization2_odd_Pipeline_VITIS_LOOP_128_1_fu_140_ap_start_reg;

assign icmp_ln80_fu_224_p2 = ((flag_V_fu_204_p1 == 2'd0) ? 1'b1 : 1'b0);

assign max_min_V_1_fu_238_p1 = Input_1_V_TDATA_int_regslice[7:0];

assign ret_22_fu_271_p2 = (triangle_2d_same_y1_V_cast_fu_265_p1 - triangle_2d_same_y0_V_cast_fu_268_p1);

assign ret_25_fu_284_p2 = (triangle_2d_same_x1_V_cast_fu_278_p1 - triangle_2d_same_x0_V_cast_fu_281_p1);

assign ret_28_fu_294_p2 = (triangle_2d_same_y2_V_cast_fu_291_p1 - triangle_2d_same_y1_V_cast_fu_265_p1);

assign ret_31_fu_304_p2 = (triangle_2d_same_x2_V_cast_fu_301_p1 - triangle_2d_same_x1_V_cast_fu_278_p1);

assign ret_34_fu_311_p2 = (triangle_2d_same_y0_V_cast_fu_268_p1 - triangle_2d_same_y2_V_cast_fu_291_p1);

assign ret_37_fu_318_p2 = (triangle_2d_same_x0_V_cast_fu_281_p1 - triangle_2d_same_x2_V_cast_fu_301_p1);

assign triangle_2d_same_x0_V_cast_fu_281_p1 = triangle_2d_same_x0_V_reg_375;

assign triangle_2d_same_x1_V_cast_fu_278_p1 = triangle_2d_same_x1_V_reg_387;

assign triangle_2d_same_x2_V_cast_fu_301_p1 = triangle_2d_same_x2_V_reg_403;

assign triangle_2d_same_y0_V_cast_fu_268_p1 = triangle_2d_same_y0_V_reg_381;

assign triangle_2d_same_y1_V_cast_fu_265_p1 = triangle_2d_same_y1_V_reg_397;

assign triangle_2d_same_y1_V_fu_230_p1 = Input_1_V_TDATA_int_regslice[7:0];

assign triangle_2d_same_y2_V_cast_fu_291_p1 = triangle_2d_same_y2_V_reg_409;

assign trunc_ln674_fu_234_p1 = Input_1_V_TDATA_int_regslice[15:0];

assign zext_ln217_1_fu_336_p1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_bot_V_out;

assign zext_ln217_fu_331_p1 = grp_rasterization2_odd_Pipeline_RAST2_fu_108_i_top_V_out;

endmodule //rasterization2_m_rasterization2_odd
