// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rasterization2_m_rasterization2_m,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-sbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.560000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=4546,HLS_SYN_LUT=4658,HLS_VERSION=2021_1}" *)

module rasterization2_m (
        Input_1_V_TDATA,
        Output_1_V_TDATA,
        Output_2_V_TDATA,
        Input_2_V_TDATA,
        Output_3_V_TDATA,
        Output_4_V_TDATA,
        ap_clk,
        ap_rst_n,
        Input_1_V_TVALID,
        Input_1_V_TREADY,
        Output_1_V_TVALID,
        Output_1_V_TREADY,
        Output_2_V_TVALID,
        Output_2_V_TREADY,
        ap_start,
        ap_done,
        Input_2_V_TVALID,
        Input_2_V_TREADY,
        Output_3_V_TVALID,
        Output_3_V_TREADY,
        Output_4_V_TVALID,
        Output_4_V_TREADY,
        ap_ready,
        ap_idle
);


input  [31:0] Input_1_V_TDATA;
output  [31:0] Output_1_V_TDATA;
output  [31:0] Output_2_V_TDATA;
input  [31:0] Input_2_V_TDATA;
output  [31:0] Output_3_V_TDATA;
output  [31:0] Output_4_V_TDATA;
input   ap_clk;
input   ap_rst_n;
input   Input_1_V_TVALID;
output   Input_1_V_TREADY;
output   Output_1_V_TVALID;
input   Output_1_V_TREADY;
output   Output_2_V_TVALID;
input   Output_2_V_TREADY;
input   ap_start;
output   ap_done;
input   Input_2_V_TVALID;
output   Input_2_V_TREADY;
output   Output_3_V_TVALID;
input   Output_3_V_TREADY;
output   Output_4_V_TVALID;
input   Output_4_V_TREADY;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    rasterization2_odd_U0_ap_start;
wire    rasterization2_odd_U0_ap_done;
wire    rasterization2_odd_U0_ap_continue;
wire    rasterization2_odd_U0_ap_idle;
wire    rasterization2_odd_U0_ap_ready;
wire    rasterization2_odd_U0_Input_1_V_TREADY;
wire   [31:0] rasterization2_odd_U0_Output_1_V_TDATA;
wire    rasterization2_odd_U0_Output_1_V_TVALID;
wire   [31:0] rasterization2_odd_U0_Output_2_V_TDATA;
wire    rasterization2_odd_U0_Output_2_V_TVALID;
wire    rasterization2_even_U0_ap_start;
wire    rasterization2_even_U0_ap_done;
wire    rasterization2_even_U0_ap_continue;
wire    rasterization2_even_U0_ap_idle;
wire    rasterization2_even_U0_ap_ready;
wire    rasterization2_even_U0_Input_2_V_TREADY;
wire   [31:0] rasterization2_even_U0_Output_3_V_TDATA;
wire    rasterization2_even_U0_Output_3_V_TVALID;
wire   [31:0] rasterization2_even_U0_Output_4_V_TDATA;
wire    rasterization2_even_U0_Output_4_V_TVALID;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_rasterization2_odd_U0_ap_ready;
wire    ap_sync_rasterization2_odd_U0_ap_ready;
reg    ap_sync_reg_rasterization2_even_U0_ap_ready;
wire    ap_sync_rasterization2_even_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_rasterization2_odd_U0_ap_ready = 1'b0;
#0 ap_sync_reg_rasterization2_even_U0_ap_ready = 1'b0;
end

rasterization2_m_rasterization2_odd rasterization2_odd_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rasterization2_odd_U0_ap_start),
    .ap_done(rasterization2_odd_U0_ap_done),
    .ap_continue(rasterization2_odd_U0_ap_continue),
    .ap_idle(rasterization2_odd_U0_ap_idle),
    .ap_ready(rasterization2_odd_U0_ap_ready),
    .Input_1_V_TDATA(Input_1_V_TDATA),
    .Input_1_V_TVALID(Input_1_V_TVALID),
    .Input_1_V_TREADY(rasterization2_odd_U0_Input_1_V_TREADY),
    .Output_1_V_TDATA(rasterization2_odd_U0_Output_1_V_TDATA),
    .Output_1_V_TVALID(rasterization2_odd_U0_Output_1_V_TVALID),
    .Output_1_V_TREADY(Output_1_V_TREADY),
    .Output_2_V_TDATA(rasterization2_odd_U0_Output_2_V_TDATA),
    .Output_2_V_TVALID(rasterization2_odd_U0_Output_2_V_TVALID),
    .Output_2_V_TREADY(Output_2_V_TREADY)
);

rasterization2_m_rasterization2_even rasterization2_even_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rasterization2_even_U0_ap_start),
    .ap_done(rasterization2_even_U0_ap_done),
    .ap_continue(rasterization2_even_U0_ap_continue),
    .ap_idle(rasterization2_even_U0_ap_idle),
    .ap_ready(rasterization2_even_U0_ap_ready),
    .Input_2_V_TDATA(Input_2_V_TDATA),
    .Input_2_V_TVALID(Input_2_V_TVALID),
    .Input_2_V_TREADY(rasterization2_even_U0_Input_2_V_TREADY),
    .Output_3_V_TDATA(rasterization2_even_U0_Output_3_V_TDATA),
    .Output_3_V_TVALID(rasterization2_even_U0_Output_3_V_TVALID),
    .Output_3_V_TREADY(Output_3_V_TREADY),
    .Output_4_V_TDATA(rasterization2_even_U0_Output_4_V_TDATA),
    .Output_4_V_TVALID(rasterization2_even_U0_Output_4_V_TVALID),
    .Output_4_V_TREADY(Output_4_V_TREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_rasterization2_even_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_rasterization2_even_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_rasterization2_even_U0_ap_ready <= ap_sync_rasterization2_even_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_rasterization2_odd_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_rasterization2_odd_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_rasterization2_odd_U0_ap_ready <= ap_sync_rasterization2_odd_U0_ap_ready;
        end
    end
end

assign Input_1_V_TREADY = rasterization2_odd_U0_Input_1_V_TREADY;

assign Input_2_V_TREADY = rasterization2_even_U0_Input_2_V_TREADY;

assign Output_1_V_TDATA = rasterization2_odd_U0_Output_1_V_TDATA;

assign Output_1_V_TVALID = rasterization2_odd_U0_Output_1_V_TVALID;

assign Output_2_V_TDATA = rasterization2_odd_U0_Output_2_V_TDATA;

assign Output_2_V_TVALID = rasterization2_odd_U0_Output_2_V_TVALID;

assign Output_3_V_TDATA = rasterization2_even_U0_Output_3_V_TDATA;

assign Output_3_V_TVALID = rasterization2_even_U0_Output_3_V_TVALID;

assign Output_4_V_TDATA = rasterization2_even_U0_Output_4_V_TDATA;

assign Output_4_V_TVALID = rasterization2_even_U0_Output_4_V_TVALID;

assign ap_done = ap_sync_done;

assign ap_idle = (rasterization2_odd_U0_ap_idle & rasterization2_even_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_done = (rasterization2_odd_U0_ap_done & rasterization2_even_U0_ap_done);

assign ap_sync_rasterization2_even_U0_ap_ready = (rasterization2_even_U0_ap_ready | ap_sync_reg_rasterization2_even_U0_ap_ready);

assign ap_sync_rasterization2_odd_U0_ap_ready = (rasterization2_odd_U0_ap_ready | ap_sync_reg_rasterization2_odd_U0_ap_ready);

assign ap_sync_ready = (ap_sync_rasterization2_odd_U0_ap_ready & ap_sync_rasterization2_even_U0_ap_ready);

assign rasterization2_even_U0_ap_continue = ap_sync_done;

assign rasterization2_even_U0_ap_start = ((ap_sync_reg_rasterization2_even_U0_ap_ready ^ 1'b1) & ap_start);

assign rasterization2_odd_U0_ap_continue = ap_sync_done;

assign rasterization2_odd_U0_ap_start = ((ap_sync_reg_rasterization2_odd_U0_ap_ready ^ 1'b1) & ap_start);

endmodule //rasterization2_m
