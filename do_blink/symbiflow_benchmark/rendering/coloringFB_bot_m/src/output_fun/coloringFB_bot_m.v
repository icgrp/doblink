// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="coloringFB_bot_m_coloringFB_bot_m,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-sbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.202875,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=33229,HLS_SYN_LUT=15754,HLS_VERSION=2020_2}" *)

module coloringFB_bot_m (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_TDATA,
        Input_1_V_TVALID,
        Input_1_V_TREADY,
        Output_1_V_TDATA,
        Output_1_V_TVALID,
        Output_1_V_TREADY
);

parameter    ap_ST_fsm_state1 = 74'd1;
parameter    ap_ST_fsm_pp0_stage0 = 74'd2;
parameter    ap_ST_fsm_pp0_stage1 = 74'd4;
parameter    ap_ST_fsm_pp0_stage2 = 74'd8;
parameter    ap_ST_fsm_pp0_stage3 = 74'd16;
parameter    ap_ST_fsm_pp0_stage4 = 74'd32;
parameter    ap_ST_fsm_pp0_stage5 = 74'd64;
parameter    ap_ST_fsm_pp0_stage6 = 74'd128;
parameter    ap_ST_fsm_pp0_stage7 = 74'd256;
parameter    ap_ST_fsm_pp0_stage8 = 74'd512;
parameter    ap_ST_fsm_pp0_stage9 = 74'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 74'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 74'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 74'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 74'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 74'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 74'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 74'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 74'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 74'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 74'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 74'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 74'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 74'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 74'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 74'd33554432;
parameter    ap_ST_fsm_pp0_stage25 = 74'd67108864;
parameter    ap_ST_fsm_pp0_stage26 = 74'd134217728;
parameter    ap_ST_fsm_pp0_stage27 = 74'd268435456;
parameter    ap_ST_fsm_pp0_stage28 = 74'd536870912;
parameter    ap_ST_fsm_pp0_stage29 = 74'd1073741824;
parameter    ap_ST_fsm_pp0_stage30 = 74'd2147483648;
parameter    ap_ST_fsm_pp0_stage31 = 74'd4294967296;
parameter    ap_ST_fsm_pp0_stage32 = 74'd8589934592;
parameter    ap_ST_fsm_pp0_stage33 = 74'd17179869184;
parameter    ap_ST_fsm_pp0_stage34 = 74'd34359738368;
parameter    ap_ST_fsm_pp0_stage35 = 74'd68719476736;
parameter    ap_ST_fsm_pp0_stage36 = 74'd137438953472;
parameter    ap_ST_fsm_pp0_stage37 = 74'd274877906944;
parameter    ap_ST_fsm_pp0_stage38 = 74'd549755813888;
parameter    ap_ST_fsm_pp0_stage39 = 74'd1099511627776;
parameter    ap_ST_fsm_pp0_stage40 = 74'd2199023255552;
parameter    ap_ST_fsm_pp0_stage41 = 74'd4398046511104;
parameter    ap_ST_fsm_pp0_stage42 = 74'd8796093022208;
parameter    ap_ST_fsm_pp0_stage43 = 74'd17592186044416;
parameter    ap_ST_fsm_pp0_stage44 = 74'd35184372088832;
parameter    ap_ST_fsm_pp0_stage45 = 74'd70368744177664;
parameter    ap_ST_fsm_pp0_stage46 = 74'd140737488355328;
parameter    ap_ST_fsm_pp0_stage47 = 74'd281474976710656;
parameter    ap_ST_fsm_pp0_stage48 = 74'd562949953421312;
parameter    ap_ST_fsm_pp0_stage49 = 74'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage50 = 74'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage51 = 74'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage52 = 74'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage53 = 74'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage54 = 74'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage55 = 74'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage56 = 74'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage57 = 74'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage58 = 74'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage59 = 74'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage60 = 74'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage61 = 74'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage62 = 74'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage63 = 74'd18446744073709551616;
parameter    ap_ST_fsm_state67 = 74'd36893488147419103232;
parameter    ap_ST_fsm_pp1_stage0 = 74'd73786976294838206464;
parameter    ap_ST_fsm_state71 = 74'd147573952589676412928;
parameter    ap_ST_fsm_state72 = 74'd295147905179352825856;
parameter    ap_ST_fsm_state73 = 74'd590295810358705651712;
parameter    ap_ST_fsm_pp2_stage0 = 74'd1180591620717411303424;
parameter    ap_ST_fsm_pp2_stage1 = 74'd2361183241434822606848;
parameter    ap_ST_fsm_state80 = 74'd4722366482869645213696;
parameter    ap_ST_fsm_state81 = 74'd9444732965739290427392;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_TDATA;
input   Input_1_V_TVALID;
output   Input_1_V_TREADY;
output  [31:0] Output_1_V_TDATA;
output   Output_1_V_TVALID;
input   Output_1_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [73:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] counter_V;
reg   [14:0] frame_buffer_V_address0;
reg    frame_buffer_V_ce0;
reg    frame_buffer_V_we0;
reg   [7:0] frame_buffer_V_d0;
wire   [7:0] frame_buffer_V_q0;
reg   [14:0] frame_buffer_V_address1;
reg    frame_buffer_V_ce1;
reg    frame_buffer_V_we1;
wire   [7:0] frame_buffer_V_q1;
reg    Input_1_V_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln39_fu_3331_p2;
reg    Output_1_V_TDATA_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln54_reg_3735;
reg   [0:0] icmp_ln54_reg_3735_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_pp2_stage1;
reg   [0:0] icmp_ln54_reg_3735_pp2_iter2_reg;
reg   [8:0] i_V_reg_1444;
reg   [15:0] i_V_2_reg_1455;
reg   [13:0] indvar_flatten_reg_1466;
reg   [8:0] i_reg_1477;
reg   [7:0] j_reg_1488;
reg   [31:0] tmp_V_reg_3533;
wire   [0:0] icmp_ln870_fu_1514_p2;
wire   [8:0] i_V_1_fu_1520_p2;
reg   [8:0] i_V_1_reg_3545;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state66_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln878_fu_1526_p2;
reg   [0:0] icmp_ln878_reg_3550;
wire   [15:0] tmp_1_fu_1532_p3;
reg   [15:0] tmp_1_reg_3554;
wire   [15:0] empty_10_fu_3322_p1;
reg   [15:0] empty_10_reg_3686;
wire    ap_CS_fsm_state67;
wire   [15:0] i_V_3_fu_3325_p2;
reg    ap_block_state68_pp1_stage0_iter0;
wire    ap_block_state69_pp1_stage0_iter1;
wire    ap_block_state70_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln39_reg_3696;
reg   [0:0] icmp_ln39_reg_3696_pp1_iter1_reg;
reg   [7:0] pixels_y_V_reg_3700;
reg   [7:0] pixels_color_V_reg_3705;
reg   [7:0] pixels_color_V_reg_3705_pp1_iter1_reg;
wire   [7:0] trunc_ln49_fu_3356_p1;
reg   [7:0] trunc_ln49_reg_3710;
wire   [14:0] add_ln49_fu_3370_p2;
reg   [14:0] add_ln49_reg_3715;
wire   [15:0] add_ln691_fu_3380_p2;
reg   [15:0] add_ln691_reg_3720;
wire    ap_CS_fsm_state71;
wire   [0:0] icmp_ln870_1_fu_3385_p2;
reg   [0:0] icmp_ln870_1_reg_3726;
wire    ap_CS_fsm_state72;
wire   [13:0] add_ln54_1_fu_3390_p2;
reg   [13:0] add_ln54_1_reg_3730;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state74_pp2_stage0_iter0;
wire    ap_block_state76_pp2_stage0_iter1;
reg    ap_block_state78_pp2_stage0_iter2;
reg    ap_block_state78_io;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln54_fu_3396_p2;
wire   [7:0] select_ln54_fu_3416_p3;
reg   [7:0] select_ln54_reg_3739;
wire   [8:0] select_ln54_1_fu_3424_p3;
reg   [8:0] select_ln54_1_reg_3745;
wire   [7:0] trunc_ln215_fu_3432_p1;
reg   [7:0] trunc_ln215_reg_3753;
wire   [6:0] trunc_ln55_fu_3436_p1;
reg   [6:0] trunc_ln55_reg_3758;
wire   [14:0] add_ln215_fu_3450_p2;
reg   [14:0] add_ln215_reg_3765;
wire    ap_block_state75_pp2_stage1_iter0;
wire    ap_block_state77_pp2_stage1_iter1;
reg    ap_block_state79_pp2_stage1_iter2;
reg    ap_block_state79_io;
reg    ap_block_pp2_stage1_11001;
wire   [7:0] add_ln55_fu_3490_p2;
reg   [7:0] add_ln55_reg_3780;
reg   [7:0] frame_buffer_V_load_1_reg_3795;
reg    ap_enable_reg_pp2_iter1;
reg   [7:0] frame_buffer_V_load_2_reg_3800;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state65_pp0_stage63_iter0;
wire    ap_block_pp0_stage63_subdone;
wire    ap_CS_fsm_pp0_stage63;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state68;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state73;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state74;
reg    ap_block_pp2_stage1_subdone;
reg   [8:0] ap_phi_mux_i_V_phi_fu_1448_p4;
wire    ap_block_pp0_stage0;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_1470_p4;
reg   [8:0] ap_phi_mux_i_phi_fu_1481_p4;
reg   [7:0] ap_phi_mux_j_phi_fu_1492_p4;
reg   [15:0] counter_V_new_0_reg_1499;
wire    ap_CS_fsm_state80;
wire   [63:0] zext_ln34_fu_1540_p1;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_2_fu_1549_p3;
wire   [63:0] tmp_3_fu_1563_p3;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_4_fu_1577_p3;
wire   [63:0] tmp_5_fu_1591_p3;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_6_fu_1605_p3;
wire   [63:0] tmp_7_fu_1619_p3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_8_fu_1633_p3;
wire   [63:0] tmp_9_fu_1647_p3;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_s_fu_1661_p3;
wire   [63:0] tmp_10_fu_1675_p3;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_11_fu_1689_p3;
wire   [63:0] tmp_12_fu_1703_p3;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_13_fu_1717_p3;
wire   [63:0] tmp_14_fu_1731_p3;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire   [63:0] tmp_15_fu_1745_p3;
wire   [63:0] tmp_16_fu_1759_p3;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire   [63:0] tmp_17_fu_1773_p3;
wire   [63:0] tmp_18_fu_1787_p3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire   [63:0] tmp_19_fu_1801_p3;
wire   [63:0] tmp_20_fu_1815_p3;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire   [63:0] tmp_21_fu_1829_p3;
wire   [63:0] tmp_22_fu_1843_p3;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire   [63:0] tmp_23_fu_1857_p3;
wire   [63:0] tmp_24_fu_1871_p3;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire   [63:0] tmp_25_fu_1885_p3;
wire   [63:0] tmp_26_fu_1899_p3;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire   [63:0] tmp_27_fu_1913_p3;
wire   [63:0] tmp_28_fu_1927_p3;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire   [63:0] tmp_29_fu_1941_p3;
wire   [63:0] tmp_30_fu_1955_p3;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire   [63:0] tmp_31_fu_1969_p3;
wire   [63:0] tmp_32_fu_1983_p3;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire   [63:0] tmp_33_fu_1997_p3;
wire   [63:0] tmp_34_fu_2011_p3;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire   [63:0] tmp_35_fu_2025_p3;
wire   [63:0] tmp_36_fu_2039_p3;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire   [63:0] tmp_37_fu_2053_p3;
wire   [63:0] tmp_38_fu_2067_p3;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire   [63:0] tmp_39_fu_2081_p3;
wire   [63:0] tmp_40_fu_2095_p3;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire   [63:0] tmp_41_fu_2109_p3;
wire   [63:0] tmp_42_fu_2123_p3;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire   [63:0] tmp_43_fu_2137_p3;
wire   [63:0] tmp_44_fu_2151_p3;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire   [63:0] tmp_45_fu_2165_p3;
wire   [63:0] tmp_46_fu_2179_p3;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire   [63:0] tmp_47_fu_2193_p3;
wire   [63:0] tmp_48_fu_2207_p3;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire   [63:0] tmp_49_fu_2221_p3;
wire   [63:0] tmp_50_fu_2235_p3;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire   [63:0] tmp_51_fu_2249_p3;
wire   [63:0] tmp_52_fu_2263_p3;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire   [63:0] tmp_53_fu_2277_p3;
wire   [63:0] tmp_54_fu_2291_p3;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire   [63:0] tmp_55_fu_2305_p3;
wire   [63:0] tmp_56_fu_2319_p3;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire   [63:0] tmp_57_fu_2333_p3;
wire   [63:0] tmp_58_fu_2347_p3;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire   [63:0] tmp_59_fu_2361_p3;
wire   [63:0] tmp_60_fu_2375_p3;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire   [63:0] tmp_61_fu_2389_p3;
wire   [63:0] tmp_62_fu_2403_p3;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_pp0_stage32;
wire   [63:0] tmp_63_fu_2417_p3;
wire   [63:0] tmp_64_fu_2431_p3;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_pp0_stage33;
wire   [63:0] tmp_65_fu_2445_p3;
wire   [63:0] tmp_66_fu_2459_p3;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34;
wire   [63:0] tmp_67_fu_2473_p3;
wire   [63:0] tmp_68_fu_2487_p3;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35;
wire   [63:0] tmp_69_fu_2501_p3;
wire   [63:0] tmp_70_fu_2515_p3;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_pp0_stage36;
wire   [63:0] tmp_71_fu_2529_p3;
wire   [63:0] tmp_72_fu_2543_p3;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_pp0_stage37;
wire   [63:0] tmp_73_fu_2557_p3;
wire   [63:0] tmp_74_fu_2571_p3;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_pp0_stage38;
wire   [63:0] tmp_75_fu_2585_p3;
wire   [63:0] tmp_76_fu_2599_p3;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_pp0_stage39;
wire   [63:0] tmp_77_fu_2613_p3;
wire   [63:0] tmp_78_fu_2627_p3;
wire    ap_CS_fsm_pp0_stage40;
wire    ap_block_pp0_stage40;
wire   [63:0] tmp_79_fu_2641_p3;
wire   [63:0] tmp_80_fu_2655_p3;
wire    ap_CS_fsm_pp0_stage41;
wire    ap_block_pp0_stage41;
wire   [63:0] tmp_81_fu_2669_p3;
wire   [63:0] tmp_82_fu_2683_p3;
wire    ap_CS_fsm_pp0_stage42;
wire    ap_block_pp0_stage42;
wire   [63:0] tmp_83_fu_2697_p3;
wire   [63:0] tmp_84_fu_2711_p3;
wire    ap_CS_fsm_pp0_stage43;
wire    ap_block_pp0_stage43;
wire   [63:0] tmp_85_fu_2725_p3;
wire   [63:0] tmp_86_fu_2739_p3;
wire    ap_CS_fsm_pp0_stage44;
wire    ap_block_pp0_stage44;
wire   [63:0] tmp_87_fu_2753_p3;
wire   [63:0] tmp_88_fu_2767_p3;
wire    ap_CS_fsm_pp0_stage45;
wire    ap_block_pp0_stage45;
wire   [63:0] tmp_89_fu_2781_p3;
wire   [63:0] tmp_90_fu_2795_p3;
wire    ap_CS_fsm_pp0_stage46;
wire    ap_block_pp0_stage46;
wire   [63:0] tmp_91_fu_2809_p3;
wire   [63:0] tmp_92_fu_2823_p3;
wire    ap_CS_fsm_pp0_stage47;
wire    ap_block_pp0_stage47;
wire   [63:0] tmp_93_fu_2837_p3;
wire   [63:0] tmp_94_fu_2851_p3;
wire    ap_CS_fsm_pp0_stage48;
wire    ap_block_pp0_stage48;
wire   [63:0] tmp_95_fu_2865_p3;
wire   [63:0] tmp_96_fu_2879_p3;
wire    ap_CS_fsm_pp0_stage49;
wire    ap_block_pp0_stage49;
wire   [63:0] tmp_97_fu_2893_p3;
wire   [63:0] tmp_98_fu_2907_p3;
wire    ap_CS_fsm_pp0_stage50;
wire    ap_block_pp0_stage50;
wire   [63:0] tmp_99_fu_2921_p3;
wire   [63:0] tmp_100_fu_2935_p3;
wire    ap_CS_fsm_pp0_stage51;
wire    ap_block_pp0_stage51;
wire   [63:0] tmp_101_fu_2949_p3;
wire   [63:0] tmp_102_fu_2963_p3;
wire    ap_CS_fsm_pp0_stage52;
wire    ap_block_pp0_stage52;
wire   [63:0] tmp_103_fu_2977_p3;
wire   [63:0] tmp_104_fu_2991_p3;
wire    ap_CS_fsm_pp0_stage53;
wire    ap_block_pp0_stage53;
wire   [63:0] tmp_105_fu_3005_p3;
wire   [63:0] tmp_106_fu_3019_p3;
wire    ap_CS_fsm_pp0_stage54;
wire    ap_block_pp0_stage54;
wire   [63:0] tmp_107_fu_3033_p3;
wire   [63:0] tmp_108_fu_3047_p3;
wire    ap_CS_fsm_pp0_stage55;
wire    ap_block_pp0_stage55;
wire   [63:0] tmp_109_fu_3061_p3;
wire   [63:0] tmp_110_fu_3075_p3;
wire    ap_CS_fsm_pp0_stage56;
wire    ap_block_pp0_stage56;
wire   [63:0] tmp_111_fu_3089_p3;
wire   [63:0] tmp_112_fu_3103_p3;
wire    ap_CS_fsm_pp0_stage57;
wire    ap_block_pp0_stage57;
wire   [63:0] tmp_113_fu_3117_p3;
wire   [63:0] tmp_114_fu_3131_p3;
wire    ap_CS_fsm_pp0_stage58;
wire    ap_block_pp0_stage58;
wire   [63:0] tmp_115_fu_3145_p3;
wire   [63:0] tmp_116_fu_3159_p3;
wire    ap_CS_fsm_pp0_stage59;
wire    ap_block_pp0_stage59;
wire   [63:0] tmp_117_fu_3173_p3;
wire   [63:0] tmp_118_fu_3187_p3;
wire    ap_CS_fsm_pp0_stage60;
wire    ap_block_pp0_stage60;
wire   [63:0] tmp_119_fu_3201_p3;
wire   [63:0] tmp_120_fu_3215_p3;
wire    ap_CS_fsm_pp0_stage61;
wire    ap_block_pp0_stage61;
wire   [63:0] tmp_121_fu_3229_p3;
wire   [63:0] tmp_122_fu_3243_p3;
wire    ap_CS_fsm_pp0_stage62;
wire    ap_block_pp0_stage62;
wire   [63:0] tmp_123_fu_3257_p3;
wire   [63:0] tmp_124_fu_3271_p3;
wire    ap_block_pp0_stage63;
wire   [63:0] tmp_125_fu_3285_p3;
wire   [63:0] tmp_126_fu_3299_p3;
wire   [63:0] tmp_127_fu_3313_p3;
wire   [63:0] zext_ln49_1_fu_3376_p1;
wire   [63:0] zext_ln215_1_fu_3468_p1;
wire   [63:0] zext_ln215_2_fu_3485_p1;
wire   [63:0] zext_ln215_4_fu_3495_p1;
wire   [63:0] zext_ln215_3_fu_3511_p1;
wire    ap_CS_fsm_state81;
wire    regslice_both_Output_1_V_U_apdone_blk;
reg    ap_block_pp2_stage0_01001;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_block_state21_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire    ap_block_state22_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
wire    ap_block_state23_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
wire    ap_block_state24_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_block_state25_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
wire    ap_block_state26_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
wire    ap_block_state27_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_11001;
wire    ap_block_state28_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_block_state29_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_11001;
wire    ap_block_state30_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_11001;
wire    ap_block_state31_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
wire    ap_block_state32_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_block_state33_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_11001;
wire    ap_block_state34_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_11001;
wire    ap_block_state35_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_11001;
wire    ap_block_state36_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_11001;
wire    ap_block_state37_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_11001;
wire    ap_block_state38_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_11001;
wire    ap_block_state39_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_11001;
wire    ap_block_state40_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_11001;
wire    ap_block_state41_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_11001;
wire    ap_block_state42_pp0_stage40_iter0;
wire    ap_block_pp0_stage40_11001;
wire    ap_block_state43_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_11001;
wire    ap_block_state44_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_11001;
wire    ap_block_state45_pp0_stage43_iter0;
wire    ap_block_pp0_stage43_11001;
wire    ap_block_state46_pp0_stage44_iter0;
wire    ap_block_pp0_stage44_11001;
wire    ap_block_state47_pp0_stage45_iter0;
wire    ap_block_pp0_stage45_11001;
wire    ap_block_state48_pp0_stage46_iter0;
wire    ap_block_pp0_stage46_11001;
wire    ap_block_state49_pp0_stage47_iter0;
wire    ap_block_pp0_stage47_11001;
wire    ap_block_state50_pp0_stage48_iter0;
wire    ap_block_pp0_stage48_11001;
wire    ap_block_state51_pp0_stage49_iter0;
wire    ap_block_pp0_stage49_11001;
wire    ap_block_state52_pp0_stage50_iter0;
wire    ap_block_pp0_stage50_11001;
wire    ap_block_state53_pp0_stage51_iter0;
wire    ap_block_pp0_stage51_11001;
wire    ap_block_state54_pp0_stage52_iter0;
wire    ap_block_pp0_stage52_11001;
wire    ap_block_state55_pp0_stage53_iter0;
wire    ap_block_pp0_stage53_11001;
wire    ap_block_state56_pp0_stage54_iter0;
wire    ap_block_pp0_stage54_11001;
wire    ap_block_state57_pp0_stage55_iter0;
wire    ap_block_pp0_stage55_11001;
wire    ap_block_state58_pp0_stage56_iter0;
wire    ap_block_pp0_stage56_11001;
wire    ap_block_state59_pp0_stage57_iter0;
wire    ap_block_pp0_stage57_11001;
wire    ap_block_state60_pp0_stage58_iter0;
wire    ap_block_pp0_stage58_11001;
wire    ap_block_state61_pp0_stage59_iter0;
wire    ap_block_pp0_stage59_11001;
wire    ap_block_state62_pp0_stage60_iter0;
wire    ap_block_pp0_stage60_11001;
wire    ap_block_state63_pp0_stage61_iter0;
wire    ap_block_pp0_stage61_11001;
wire    ap_block_state64_pp0_stage62_iter0;
wire    ap_block_pp0_stage62_11001;
wire    ap_block_pp0_stage63_11001;
wire   [15:0] or_ln34_fu_1544_p2;
wire   [15:0] or_ln34_1_fu_1558_p2;
wire   [15:0] or_ln34_2_fu_1572_p2;
wire   [15:0] or_ln34_3_fu_1586_p2;
wire   [15:0] or_ln34_4_fu_1600_p2;
wire   [15:0] or_ln34_5_fu_1614_p2;
wire   [15:0] or_ln34_6_fu_1628_p2;
wire   [15:0] or_ln34_7_fu_1642_p2;
wire   [15:0] or_ln34_8_fu_1656_p2;
wire   [15:0] or_ln34_9_fu_1670_p2;
wire   [15:0] or_ln34_10_fu_1684_p2;
wire   [15:0] or_ln34_11_fu_1698_p2;
wire   [15:0] or_ln34_12_fu_1712_p2;
wire   [15:0] or_ln34_13_fu_1726_p2;
wire   [15:0] or_ln34_14_fu_1740_p2;
wire   [15:0] or_ln34_15_fu_1754_p2;
wire   [15:0] or_ln34_16_fu_1768_p2;
wire   [15:0] or_ln34_17_fu_1782_p2;
wire   [15:0] or_ln34_18_fu_1796_p2;
wire   [15:0] or_ln34_19_fu_1810_p2;
wire   [15:0] or_ln34_20_fu_1824_p2;
wire   [15:0] or_ln34_21_fu_1838_p2;
wire   [15:0] or_ln34_22_fu_1852_p2;
wire   [15:0] or_ln34_23_fu_1866_p2;
wire   [15:0] or_ln34_24_fu_1880_p2;
wire   [15:0] or_ln34_25_fu_1894_p2;
wire   [15:0] or_ln34_26_fu_1908_p2;
wire   [15:0] or_ln34_27_fu_1922_p2;
wire   [15:0] or_ln34_28_fu_1936_p2;
wire   [15:0] or_ln34_29_fu_1950_p2;
wire   [15:0] or_ln34_30_fu_1964_p2;
wire   [15:0] or_ln34_31_fu_1978_p2;
wire   [15:0] or_ln34_32_fu_1992_p2;
wire   [15:0] or_ln34_33_fu_2006_p2;
wire   [15:0] or_ln34_34_fu_2020_p2;
wire   [15:0] or_ln34_35_fu_2034_p2;
wire   [15:0] or_ln34_36_fu_2048_p2;
wire   [15:0] or_ln34_37_fu_2062_p2;
wire   [15:0] or_ln34_38_fu_2076_p2;
wire   [15:0] or_ln34_39_fu_2090_p2;
wire   [15:0] or_ln34_40_fu_2104_p2;
wire   [15:0] or_ln34_41_fu_2118_p2;
wire   [15:0] or_ln34_42_fu_2132_p2;
wire   [15:0] or_ln34_43_fu_2146_p2;
wire   [15:0] or_ln34_44_fu_2160_p2;
wire   [15:0] or_ln34_45_fu_2174_p2;
wire   [15:0] or_ln34_46_fu_2188_p2;
wire   [15:0] or_ln34_47_fu_2202_p2;
wire   [15:0] or_ln34_48_fu_2216_p2;
wire   [15:0] or_ln34_49_fu_2230_p2;
wire   [15:0] or_ln34_50_fu_2244_p2;
wire   [15:0] or_ln34_51_fu_2258_p2;
wire   [15:0] or_ln34_52_fu_2272_p2;
wire   [15:0] or_ln34_53_fu_2286_p2;
wire   [15:0] or_ln34_54_fu_2300_p2;
wire   [15:0] or_ln34_55_fu_2314_p2;
wire   [15:0] or_ln34_56_fu_2328_p2;
wire   [15:0] or_ln34_57_fu_2342_p2;
wire   [15:0] or_ln34_58_fu_2356_p2;
wire   [15:0] or_ln34_59_fu_2370_p2;
wire   [15:0] or_ln34_60_fu_2384_p2;
wire   [15:0] or_ln34_61_fu_2398_p2;
wire   [15:0] or_ln34_62_fu_2412_p2;
wire   [15:0] or_ln34_63_fu_2426_p2;
wire   [15:0] or_ln34_64_fu_2440_p2;
wire   [15:0] or_ln34_65_fu_2454_p2;
wire   [15:0] or_ln34_66_fu_2468_p2;
wire   [15:0] or_ln34_67_fu_2482_p2;
wire   [15:0] or_ln34_68_fu_2496_p2;
wire   [15:0] or_ln34_69_fu_2510_p2;
wire   [15:0] or_ln34_70_fu_2524_p2;
wire   [15:0] or_ln34_71_fu_2538_p2;
wire   [15:0] or_ln34_72_fu_2552_p2;
wire   [15:0] or_ln34_73_fu_2566_p2;
wire   [15:0] or_ln34_74_fu_2580_p2;
wire   [15:0] or_ln34_75_fu_2594_p2;
wire   [15:0] or_ln34_76_fu_2608_p2;
wire   [15:0] or_ln34_77_fu_2622_p2;
wire   [15:0] or_ln34_78_fu_2636_p2;
wire   [15:0] or_ln34_79_fu_2650_p2;
wire   [15:0] or_ln34_80_fu_2664_p2;
wire   [15:0] or_ln34_81_fu_2678_p2;
wire   [15:0] or_ln34_82_fu_2692_p2;
wire   [15:0] or_ln34_83_fu_2706_p2;
wire   [15:0] or_ln34_84_fu_2720_p2;
wire   [15:0] or_ln34_85_fu_2734_p2;
wire   [15:0] or_ln34_86_fu_2748_p2;
wire   [15:0] or_ln34_87_fu_2762_p2;
wire   [15:0] or_ln34_88_fu_2776_p2;
wire   [15:0] or_ln34_89_fu_2790_p2;
wire   [15:0] or_ln34_90_fu_2804_p2;
wire   [15:0] or_ln34_91_fu_2818_p2;
wire   [15:0] or_ln34_92_fu_2832_p2;
wire   [15:0] or_ln34_93_fu_2846_p2;
wire   [15:0] or_ln34_94_fu_2860_p2;
wire   [15:0] or_ln34_95_fu_2874_p2;
wire   [15:0] or_ln34_96_fu_2888_p2;
wire   [15:0] or_ln34_97_fu_2902_p2;
wire   [15:0] or_ln34_98_fu_2916_p2;
wire   [15:0] or_ln34_99_fu_2930_p2;
wire   [15:0] or_ln34_100_fu_2944_p2;
wire   [15:0] or_ln34_101_fu_2958_p2;
wire   [15:0] or_ln34_102_fu_2972_p2;
wire   [15:0] or_ln34_103_fu_2986_p2;
wire   [15:0] or_ln34_104_fu_3000_p2;
wire   [15:0] or_ln34_105_fu_3014_p2;
wire   [15:0] or_ln34_106_fu_3028_p2;
wire   [15:0] or_ln34_107_fu_3042_p2;
wire   [15:0] or_ln34_108_fu_3056_p2;
wire   [15:0] or_ln34_109_fu_3070_p2;
wire   [15:0] or_ln34_110_fu_3084_p2;
wire   [15:0] or_ln34_111_fu_3098_p2;
wire   [15:0] or_ln34_112_fu_3112_p2;
wire   [15:0] or_ln34_113_fu_3126_p2;
wire   [15:0] or_ln34_114_fu_3140_p2;
wire   [15:0] or_ln34_115_fu_3154_p2;
wire   [15:0] or_ln34_116_fu_3168_p2;
wire   [15:0] or_ln34_117_fu_3182_p2;
wire   [15:0] or_ln34_118_fu_3196_p2;
wire   [15:0] or_ln34_119_fu_3210_p2;
wire   [15:0] or_ln34_120_fu_3224_p2;
wire   [15:0] or_ln34_121_fu_3238_p2;
wire   [15:0] or_ln34_122_fu_3252_p2;
wire   [15:0] or_ln34_123_fu_3266_p2;
wire   [15:0] or_ln34_124_fu_3280_p2;
wire   [15:0] or_ln34_125_fu_3294_p2;
wire   [15:0] or_ln34_126_fu_3308_p2;
wire   [14:0] tmp_128_fu_3360_p3;
wire   [14:0] zext_ln49_fu_3367_p1;
wire   [0:0] tmp_fu_3408_p3;
wire   [8:0] add_ln54_fu_3402_p2;
wire   [14:0] tmp_130_cast_fu_3440_p3;
wire   [14:0] zext_ln215_fu_3447_p1;
wire   [6:0] or_ln58_fu_3456_p2;
wire   [15:0] tmp_129_fu_3461_p3;
wire   [6:0] or_ln58_1_fu_3473_p2;
wire   [15:0] tmp_130_fu_3478_p3;
wire   [6:0] or_ln58_2_fu_3499_p2;
wire   [15:0] tmp_131_fu_3504_p3;
reg   [73:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_pp0_stage62_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    regslice_both_Input_1_V_U_apdone_blk;
wire   [31:0] Input_1_V_TDATA_int_regslice;
wire    Input_1_V_TVALID_int_regslice;
reg    Input_1_V_TREADY_int_regslice;
wire    regslice_both_Input_1_V_U_ack_in;
wire   [31:0] Output_1_V_TDATA_int_regslice;
reg    Output_1_V_TVALID_int_regslice;
wire    Output_1_V_TREADY_int_regslice;
wire    regslice_both_Output_1_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 74'd1;
#0 counter_V = 16'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 icmp_ln54_reg_3735 = 1'd0;
#0 icmp_ln54_reg_3735_pp2_iter1_reg = 1'd0;
#0 icmp_ln54_reg_3735_pp2_iter2_reg = 1'd0;
#0 i_V_reg_1444 = 9'd0;
#0 i_V_2_reg_1455 = 16'd0;
#0 indvar_flatten_reg_1466 = 14'd0;
#0 i_reg_1477 = 9'd0;
#0 j_reg_1488 = 8'd0;
#0 tmp_V_reg_3533 = 32'd0;
#0 i_V_1_reg_3545 = 9'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 icmp_ln878_reg_3550 = 1'd0;
#0 tmp_1_reg_3554 = 16'd0;
#0 empty_10_reg_3686 = 16'd0;
#0 icmp_ln39_reg_3696 = 1'd0;
#0 icmp_ln39_reg_3696_pp1_iter1_reg = 1'd0;
#0 pixels_y_V_reg_3700 = 8'd0;
#0 pixels_color_V_reg_3705 = 8'd0;
#0 pixels_color_V_reg_3705_pp1_iter1_reg = 8'd0;
#0 trunc_ln49_reg_3710 = 8'd0;
#0 add_ln49_reg_3715 = 15'd0;
#0 add_ln691_reg_3720 = 16'd0;
#0 icmp_ln870_1_reg_3726 = 1'd0;
#0 add_ln54_1_reg_3730 = 14'd0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 select_ln54_reg_3739 = 8'd0;
#0 select_ln54_1_reg_3745 = 9'd0;
#0 trunc_ln215_reg_3753 = 8'd0;
#0 trunc_ln55_reg_3758 = 7'd0;
#0 add_ln215_reg_3765 = 15'd0;
#0 add_ln55_reg_3780 = 8'd0;
#0 frame_buffer_V_load_1_reg_3795 = 8'd0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 frame_buffer_V_load_2_reg_3800 = 8'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 counter_V_new_0_reg_1499 = 16'd0;
end

coloringFB_bot_m_frame_buffer_V #(
    .DataWidth( 8 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
frame_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(frame_buffer_V_address0),
    .ce0(frame_buffer_V_ce0),
    .we0(frame_buffer_V_we0),
    .d0(frame_buffer_V_d0),
    .q0(frame_buffer_V_q0),
    .address1(frame_buffer_V_address1),
    .ce1(frame_buffer_V_ce1),
    .we1(frame_buffer_V_we1),
    .d1(8'd0),
    .q1(frame_buffer_V_q1)
);

coloringFB_bot_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Input_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Input_1_V_TDATA),
    .vld_in(Input_1_V_TVALID),
    .ack_in(regslice_both_Input_1_V_U_ack_in),
    .data_out(Input_1_V_TDATA_int_regslice),
    .vld_out(Input_1_V_TVALID_int_regslice),
    .ack_out(Input_1_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_Input_1_V_U_apdone_blk)
);

coloringFB_bot_m_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Output_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Output_1_V_TDATA_int_regslice),
    .vld_in(Output_1_V_TVALID_int_regslice),
    .ack_in(Output_1_V_TREADY_int_regslice),
    .data_out(Output_1_V_TDATA),
    .vld_out(regslice_both_Output_1_V_U_vld_out),
    .ack_out(Output_1_V_TREADY),
    .apdone_blk(regslice_both_Output_1_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln215_reg_3765 <= 15'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
            add_ln215_reg_3765 <= add_ln215_fu_3450_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln49_reg_3715 <= 15'd0;
    end else begin
        if (((icmp_ln39_reg_3696 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
            add_ln49_reg_3715 <= add_ln49_fu_3370_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln54_1_reg_3730 <= 14'd0;
    end else begin
        if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            add_ln54_1_reg_3730 <= add_ln54_1_fu_3390_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln55_reg_3780 <= 8'd0;
    end else begin
        if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
            add_ln55_reg_3780 <= add_ln55_fu_3490_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        add_ln691_reg_3720 <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state71)) begin
            add_ln691_reg_3720 <= add_ln691_fu_3380_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (1'b0 == Input_1_V_TVALID_int_regslice)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln870_fu_1514_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage63) & (1'b0 == ap_block_pp0_stage63_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (1'b0 == Input_1_V_TVALID_int_regslice)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln870_fu_1514_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state68) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state68)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state68);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state74) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln870_1_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((icmp_ln870_1_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        counter_V <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state81) & (regslice_both_Output_1_V_U_apdone_blk == 1'b0))) begin
            counter_V <= counter_V_new_0_reg_1499;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        counter_V_new_0_reg_1499 <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state80)) begin
            counter_V_new_0_reg_1499 <= 16'd0;
        end else if (((icmp_ln870_1_reg_3726 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
            counter_V_new_0_reg_1499 <= add_ln691_reg_3720;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        empty_10_reg_3686 <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state67)) begin
            empty_10_reg_3686 <= empty_10_fu_3322_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        frame_buffer_V_load_1_reg_3795 <= 8'd0;
    end else begin
        if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
            frame_buffer_V_load_1_reg_3795 <= frame_buffer_V_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        frame_buffer_V_load_2_reg_3800 <= 8'd0;
    end else begin
        if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
            frame_buffer_V_load_2_reg_3800 <= frame_buffer_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_V_1_reg_3545 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            i_V_1_reg_3545 <= i_V_1_fu_1520_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_V_2_reg_1455 <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_fu_3331_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
            i_V_2_reg_1455 <= i_V_3_fu_3325_p2;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            i_V_2_reg_1455 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_V_reg_1444 <= 9'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == Input_1_V_TVALID_int_regslice)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln870_fu_1514_p2 == 1'd1))) begin
            i_V_reg_1444 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            i_V_reg_1444 <= i_V_1_reg_3545;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_reg_1477 <= 9'd0;
    end else begin
        if (((icmp_ln870_1_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            i_reg_1477 <= 9'd0;
        end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            i_reg_1477 <= select_ln54_1_reg_3745;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln39_reg_3696 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
            icmp_ln39_reg_3696 <= icmp_ln39_fu_3331_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln39_reg_3696_pp1_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
            icmp_ln39_reg_3696_pp1_iter1_reg <= icmp_ln39_reg_3696;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln54_reg_3735 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            icmp_ln54_reg_3735 <= icmp_ln54_fu_3396_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln54_reg_3735_pp2_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            icmp_ln54_reg_3735_pp2_iter1_reg <= icmp_ln54_reg_3735;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln54_reg_3735_pp2_iter2_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            icmp_ln54_reg_3735_pp2_iter2_reg <= icmp_ln54_reg_3735_pp2_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln870_1_reg_3726 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state72)) begin
            icmp_ln870_1_reg_3726 <= icmp_ln870_1_fu_3385_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln878_reg_3550 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln878_reg_3550 <= icmp_ln878_fu_1526_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        indvar_flatten_reg_1466 <= 14'd0;
    end else begin
        if (((icmp_ln870_1_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            indvar_flatten_reg_1466 <= 14'd0;
        end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            indvar_flatten_reg_1466 <= add_ln54_1_reg_3730;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        j_reg_1488 <= 8'd0;
    end else begin
        if (((icmp_ln870_1_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            j_reg_1488 <= 8'd0;
        end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            j_reg_1488 <= add_ln55_reg_3780;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pixels_color_V_reg_3705 <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_fu_3331_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
            pixels_color_V_reg_3705 <= {{Input_1_V_TDATA_int_regslice[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pixels_color_V_reg_3705_pp1_iter1_reg <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
            pixels_color_V_reg_3705_pp1_iter1_reg <= pixels_color_V_reg_3705;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pixels_y_V_reg_3700 <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_fu_3331_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
            pixels_y_V_reg_3700 <= {{Input_1_V_TDATA_int_regslice[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        select_ln54_1_reg_3745 <= 9'd0;
    end else begin
        if (((icmp_ln54_fu_3396_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            select_ln54_1_reg_3745 <= select_ln54_1_fu_3424_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        select_ln54_reg_3739 <= 8'd0;
    end else begin
        if (((icmp_ln54_fu_3396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            select_ln54_reg_3739 <= select_ln54_fu_3416_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
                tmp_1_reg_3554[7] <= 1'b0;
        tmp_1_reg_3554[8] <= 1'b0;
        tmp_1_reg_3554[9] <= 1'b0;
        tmp_1_reg_3554[10] <= 1'b0;
        tmp_1_reg_3554[11] <= 1'b0;
        tmp_1_reg_3554[12] <= 1'b0;
        tmp_1_reg_3554[13] <= 1'b0;
        tmp_1_reg_3554[14] <= 1'b0;
        tmp_1_reg_3554[15] <= 1'b0;
    end else begin
        if (((icmp_ln878_fu_1526_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        tmp_1_reg_3554[15 : 7] <= tmp_1_fu_1532_p3[15 : 7];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_V_reg_3533 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            tmp_V_reg_3533 <= Input_1_V_TDATA_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        trunc_ln215_reg_3753 <= 8'd0;
    end else begin
        if (((icmp_ln54_fu_3396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            trunc_ln215_reg_3753 <= trunc_ln215_fu_3432_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        trunc_ln49_reg_3710 <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_fu_3331_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
            trunc_ln49_reg_3710 <= trunc_ln49_fu_3356_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        trunc_ln55_reg_3758 <= 7'd0;
    end else begin
        if (((icmp_ln54_fu_3396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
            trunc_ln55_reg_3758 <= trunc_ln55_fu_3436_p1;
        end
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_fu_3331_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Input_1_V_TDATA_blk_n = Input_1_V_TVALID_int_regslice;
    end else begin
        Input_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (1'b0 == Input_1_V_TVALID_int_regslice)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_fu_3331_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        Input_1_V_TREADY_int_regslice = 1'b1;
    end else begin
        Input_1_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln54_reg_3735_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        Output_1_V_TDATA_blk_n = Output_1_V_TREADY_int_regslice;
    end else begin
        Output_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        Output_1_V_TVALID_int_regslice = 1'b1;
    end else begin
        Output_1_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln878_fu_1526_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln39_fu_3331_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln54_fu_3396_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state74 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state74 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) & (regslice_both_Output_1_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_V_phi_fu_1448_p4 = i_V_1_reg_3545;
    end else begin
        ap_phi_mux_i_V_phi_fu_1448_p4 = i_V_reg_1444;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_i_phi_fu_1481_p4 = select_ln54_1_reg_3745;
    end else begin
        ap_phi_mux_i_phi_fu_1481_p4 = i_reg_1477;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_1470_p4 = add_ln54_1_reg_3730;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_1470_p4 = indvar_flatten_reg_1466;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln54_reg_3735 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_j_phi_fu_1492_p4 = add_ln55_reg_3780;
    end else begin
        ap_phi_mux_j_phi_fu_1492_p4 = j_reg_1488;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) & (regslice_both_Output_1_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        frame_buffer_V_address0 = zext_ln215_4_fu_3495_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        frame_buffer_V_address0 = zext_ln215_1_fu_3468_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        frame_buffer_V_address0 = zext_ln49_1_fu_3376_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        frame_buffer_V_address0 = tmp_127_fu_3313_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage63) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage63))) begin
        frame_buffer_V_address0 = tmp_125_fu_3285_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage62))) begin
        frame_buffer_V_address0 = tmp_123_fu_3257_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage61))) begin
        frame_buffer_V_address0 = tmp_121_fu_3229_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage60))) begin
        frame_buffer_V_address0 = tmp_119_fu_3201_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage59))) begin
        frame_buffer_V_address0 = tmp_117_fu_3173_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage58))) begin
        frame_buffer_V_address0 = tmp_115_fu_3145_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage57))) begin
        frame_buffer_V_address0 = tmp_113_fu_3117_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage56))) begin
        frame_buffer_V_address0 = tmp_111_fu_3089_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage55))) begin
        frame_buffer_V_address0 = tmp_109_fu_3061_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage54))) begin
        frame_buffer_V_address0 = tmp_107_fu_3033_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage53))) begin
        frame_buffer_V_address0 = tmp_105_fu_3005_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage52))) begin
        frame_buffer_V_address0 = tmp_103_fu_2977_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage51))) begin
        frame_buffer_V_address0 = tmp_101_fu_2949_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage50))) begin
        frame_buffer_V_address0 = tmp_99_fu_2921_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage49))) begin
        frame_buffer_V_address0 = tmp_97_fu_2893_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage48))) begin
        frame_buffer_V_address0 = tmp_95_fu_2865_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage47))) begin
        frame_buffer_V_address0 = tmp_93_fu_2837_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage46))) begin
        frame_buffer_V_address0 = tmp_91_fu_2809_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage45))) begin
        frame_buffer_V_address0 = tmp_89_fu_2781_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage44))) begin
        frame_buffer_V_address0 = tmp_87_fu_2753_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage43))) begin
        frame_buffer_V_address0 = tmp_85_fu_2725_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage42))) begin
        frame_buffer_V_address0 = tmp_83_fu_2697_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage41))) begin
        frame_buffer_V_address0 = tmp_81_fu_2669_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage40))) begin
        frame_buffer_V_address0 = tmp_79_fu_2641_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage39))) begin
        frame_buffer_V_address0 = tmp_77_fu_2613_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage38))) begin
        frame_buffer_V_address0 = tmp_75_fu_2585_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage37))) begin
        frame_buffer_V_address0 = tmp_73_fu_2557_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage36))) begin
        frame_buffer_V_address0 = tmp_71_fu_2529_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage35))) begin
        frame_buffer_V_address0 = tmp_69_fu_2501_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage34))) begin
        frame_buffer_V_address0 = tmp_67_fu_2473_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage33))) begin
        frame_buffer_V_address0 = tmp_65_fu_2445_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage32))) begin
        frame_buffer_V_address0 = tmp_63_fu_2417_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31))) begin
        frame_buffer_V_address0 = tmp_61_fu_2389_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30))) begin
        frame_buffer_V_address0 = tmp_59_fu_2361_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29))) begin
        frame_buffer_V_address0 = tmp_57_fu_2333_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28))) begin
        frame_buffer_V_address0 = tmp_55_fu_2305_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27))) begin
        frame_buffer_V_address0 = tmp_53_fu_2277_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26))) begin
        frame_buffer_V_address0 = tmp_51_fu_2249_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25))) begin
        frame_buffer_V_address0 = tmp_49_fu_2221_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24))) begin
        frame_buffer_V_address0 = tmp_47_fu_2193_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23))) begin
        frame_buffer_V_address0 = tmp_45_fu_2165_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22))) begin
        frame_buffer_V_address0 = tmp_43_fu_2137_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21))) begin
        frame_buffer_V_address0 = tmp_41_fu_2109_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        frame_buffer_V_address0 = tmp_39_fu_2081_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19))) begin
        frame_buffer_V_address0 = tmp_37_fu_2053_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        frame_buffer_V_address0 = tmp_35_fu_2025_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17))) begin
        frame_buffer_V_address0 = tmp_33_fu_1997_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        frame_buffer_V_address0 = tmp_31_fu_1969_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15))) begin
        frame_buffer_V_address0 = tmp_29_fu_1941_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14))) begin
        frame_buffer_V_address0 = tmp_27_fu_1913_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13))) begin
        frame_buffer_V_address0 = tmp_25_fu_1885_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12))) begin
        frame_buffer_V_address0 = tmp_23_fu_1857_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        frame_buffer_V_address0 = tmp_21_fu_1829_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        frame_buffer_V_address0 = tmp_19_fu_1801_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9))) begin
        frame_buffer_V_address0 = tmp_17_fu_1773_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        frame_buffer_V_address0 = tmp_15_fu_1745_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        frame_buffer_V_address0 = tmp_13_fu_1717_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        frame_buffer_V_address0 = tmp_11_fu_1689_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        frame_buffer_V_address0 = tmp_s_fu_1661_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        frame_buffer_V_address0 = tmp_8_fu_1633_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        frame_buffer_V_address0 = tmp_6_fu_1605_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        frame_buffer_V_address0 = tmp_4_fu_1577_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        frame_buffer_V_address0 = tmp_2_fu_1549_p3;
    end else begin
        frame_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        frame_buffer_V_address1 = zext_ln215_3_fu_3511_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        frame_buffer_V_address1 = zext_ln215_2_fu_3485_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        frame_buffer_V_address1 = tmp_126_fu_3299_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage63) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage63))) begin
        frame_buffer_V_address1 = tmp_124_fu_3271_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage62))) begin
        frame_buffer_V_address1 = tmp_122_fu_3243_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage61))) begin
        frame_buffer_V_address1 = tmp_120_fu_3215_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage60))) begin
        frame_buffer_V_address1 = tmp_118_fu_3187_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage59))) begin
        frame_buffer_V_address1 = tmp_116_fu_3159_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage58))) begin
        frame_buffer_V_address1 = tmp_114_fu_3131_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage57))) begin
        frame_buffer_V_address1 = tmp_112_fu_3103_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage56))) begin
        frame_buffer_V_address1 = tmp_110_fu_3075_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage55))) begin
        frame_buffer_V_address1 = tmp_108_fu_3047_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage54))) begin
        frame_buffer_V_address1 = tmp_106_fu_3019_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage53))) begin
        frame_buffer_V_address1 = tmp_104_fu_2991_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage52))) begin
        frame_buffer_V_address1 = tmp_102_fu_2963_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage51))) begin
        frame_buffer_V_address1 = tmp_100_fu_2935_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage50))) begin
        frame_buffer_V_address1 = tmp_98_fu_2907_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage49))) begin
        frame_buffer_V_address1 = tmp_96_fu_2879_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage48))) begin
        frame_buffer_V_address1 = tmp_94_fu_2851_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage47))) begin
        frame_buffer_V_address1 = tmp_92_fu_2823_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage46))) begin
        frame_buffer_V_address1 = tmp_90_fu_2795_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage45))) begin
        frame_buffer_V_address1 = tmp_88_fu_2767_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage44))) begin
        frame_buffer_V_address1 = tmp_86_fu_2739_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage43))) begin
        frame_buffer_V_address1 = tmp_84_fu_2711_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage42))) begin
        frame_buffer_V_address1 = tmp_82_fu_2683_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage41))) begin
        frame_buffer_V_address1 = tmp_80_fu_2655_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage40))) begin
        frame_buffer_V_address1 = tmp_78_fu_2627_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage39))) begin
        frame_buffer_V_address1 = tmp_76_fu_2599_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage38))) begin
        frame_buffer_V_address1 = tmp_74_fu_2571_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage37))) begin
        frame_buffer_V_address1 = tmp_72_fu_2543_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage36))) begin
        frame_buffer_V_address1 = tmp_70_fu_2515_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage35))) begin
        frame_buffer_V_address1 = tmp_68_fu_2487_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage34))) begin
        frame_buffer_V_address1 = tmp_66_fu_2459_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage33))) begin
        frame_buffer_V_address1 = tmp_64_fu_2431_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage32))) begin
        frame_buffer_V_address1 = tmp_62_fu_2403_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31))) begin
        frame_buffer_V_address1 = tmp_60_fu_2375_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30))) begin
        frame_buffer_V_address1 = tmp_58_fu_2347_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29))) begin
        frame_buffer_V_address1 = tmp_56_fu_2319_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28))) begin
        frame_buffer_V_address1 = tmp_54_fu_2291_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27))) begin
        frame_buffer_V_address1 = tmp_52_fu_2263_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26))) begin
        frame_buffer_V_address1 = tmp_50_fu_2235_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25))) begin
        frame_buffer_V_address1 = tmp_48_fu_2207_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24))) begin
        frame_buffer_V_address1 = tmp_46_fu_2179_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23))) begin
        frame_buffer_V_address1 = tmp_44_fu_2151_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22))) begin
        frame_buffer_V_address1 = tmp_42_fu_2123_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21))) begin
        frame_buffer_V_address1 = tmp_40_fu_2095_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        frame_buffer_V_address1 = tmp_38_fu_2067_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19))) begin
        frame_buffer_V_address1 = tmp_36_fu_2039_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        frame_buffer_V_address1 = tmp_34_fu_2011_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17))) begin
        frame_buffer_V_address1 = tmp_32_fu_1983_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        frame_buffer_V_address1 = tmp_30_fu_1955_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15))) begin
        frame_buffer_V_address1 = tmp_28_fu_1927_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14))) begin
        frame_buffer_V_address1 = tmp_26_fu_1899_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13))) begin
        frame_buffer_V_address1 = tmp_24_fu_1871_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12))) begin
        frame_buffer_V_address1 = tmp_22_fu_1843_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        frame_buffer_V_address1 = tmp_20_fu_1815_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        frame_buffer_V_address1 = tmp_18_fu_1787_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9))) begin
        frame_buffer_V_address1 = tmp_16_fu_1759_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        frame_buffer_V_address1 = tmp_14_fu_1731_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        frame_buffer_V_address1 = tmp_12_fu_1703_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        frame_buffer_V_address1 = tmp_10_fu_1675_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        frame_buffer_V_address1 = tmp_9_fu_1647_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        frame_buffer_V_address1 = tmp_7_fu_1619_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        frame_buffer_V_address1 = tmp_5_fu_1591_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        frame_buffer_V_address1 = tmp_3_fu_1563_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        frame_buffer_V_address1 = zext_ln34_fu_1540_p1;
    end else begin
        frame_buffer_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage38_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage37_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage36_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage35_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage34_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage33_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage32_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage63) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage63_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage62_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage61_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage60_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage59_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage58_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage57_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage56_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage55_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage54_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage53_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage52_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage51_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage50_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage49_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage48_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage47_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage46_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage45_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage44_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage43_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage42_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage41_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage40_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage39_11001)))) begin
        frame_buffer_V_ce0 = 1'b1;
    end else begin
        frame_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage38_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage37_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage36_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage35_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage34_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage33_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage32_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage63) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage63_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage62_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage61_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage60_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage59_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage58_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage57_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage56_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage55_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage54_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage53_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage52_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage51_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage50_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage49_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage48_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage47_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage46_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage45_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage44_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage43_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage42_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage41_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage40_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage39_11001)))) begin
        frame_buffer_V_ce1 = 1'b1;
    end else begin
        frame_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        frame_buffer_V_d0 = pixels_color_V_reg_3705_pp1_iter1_reg;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage38)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage37)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage36)) | ((1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage35)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage34)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage33)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage32)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage63) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage63)) | ((1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage62)) | ((1'b1 == ap_CS_fsm_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage61)) | ((1'b1 == ap_CS_fsm_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage60)) | ((1'b1 == ap_CS_fsm_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage59)) | ((1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage58)) | ((1'b1 == ap_CS_fsm_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage57)) | ((1'b1 == ap_CS_fsm_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage56)) | ((1'b1 == ap_CS_fsm_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage55)) | ((1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage54)) | ((1'b1 == ap_CS_fsm_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage53)) | ((1'b1 == ap_CS_fsm_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage52)) | ((1'b1 == ap_CS_fsm_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage51)) | ((1'b1 == ap_CS_fsm_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage50)) | ((1'b1 == ap_CS_fsm_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage49)) | ((1'b1 == ap_CS_fsm_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage48)) | ((1'b1 == ap_CS_fsm_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage47)) | ((1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage46)) | ((1'b1 == ap_CS_fsm_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage45)) | ((1'b1 == ap_CS_fsm_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage44)) | ((1'b1 == ap_CS_fsm_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage43)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage42)) | ((1'b1 == ap_CS_fsm_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage41)) | ((1'b1 == ap_CS_fsm_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage40)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage39)))) begin
        frame_buffer_V_d0 = 8'd0;
    end else begin
        frame_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage38_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage37_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage36_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage35_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage34_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage33_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage32_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage63) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage63_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage62_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage61_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage60_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage59_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage58_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage57_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage56_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage55_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage54_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage53_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage52_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage51_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage50_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage49_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage48_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage47_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage46_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage45_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage44_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage43_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage42_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage41_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage40_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage39_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln39_reg_3696_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        frame_buffer_V_we0 = 1'b1;
    end else begin
        frame_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage38_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage37_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage36) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage36_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage35_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage34_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage33) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage33_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage32_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage63) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage63_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage62_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage61) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage61_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage60) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage60_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage59) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage59_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage58_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage57_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage56) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage56_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage55) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage55_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage54_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage53) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage53_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage52_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage51) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage51_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage50) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage50_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage49) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage49_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage48) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage48_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage47_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage46_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage45) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage45_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage44) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage44_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage43) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage43_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage42_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage41) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage41_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage40) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage40_11001)) | ((icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage39_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln878_reg_3550 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        frame_buffer_V_we1 = 1'b1;
    end else begin
        frame_buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (1'b0 == Input_1_V_TVALID_int_regslice)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln870_fu_1514_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start == 1'b0) | (1'b0 == Input_1_V_TVALID_int_regslice)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln870_fu_1514_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln878_fu_1526_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln878_fu_1526_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln39_fu_3331_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln39_fu_3331_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((icmp_ln870_1_reg_3726 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln54_fu_3396_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln54_fu_3396_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1_subdone)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            if (((1'b1 == ap_CS_fsm_state81) & (regslice_both_Output_1_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input_1_V_TREADY = regslice_both_Input_1_V_U_ack_in;

assign Output_1_V_TDATA_int_regslice = {{{{frame_buffer_V_q1}, {frame_buffer_V_load_2_reg_3800}}, {frame_buffer_V_load_1_reg_3795}}, {frame_buffer_V_q0}};

assign Output_1_V_TVALID = regslice_both_Output_1_V_U_vld_out;

assign add_ln215_fu_3450_p2 = (tmp_130_cast_fu_3440_p3 + zext_ln215_fu_3447_p1);

assign add_ln49_fu_3370_p2 = (tmp_128_fu_3360_p3 + zext_ln49_fu_3367_p1);

assign add_ln54_1_fu_3390_p2 = (ap_phi_mux_indvar_flatten_phi_fu_1470_p4 + 14'd1);

assign add_ln54_fu_3402_p2 = (ap_phi_mux_i_phi_fu_1481_p4 + 9'd1);

assign add_ln55_fu_3490_p2 = (select_ln54_reg_3739 + 8'd4);

assign add_ln691_fu_3380_p2 = (counter_V + 16'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage40 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage41 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp0_stage42 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp0_stage43 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp0_stage44 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp0_stage45 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp0_stage46 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp0_stage47 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp0_stage48 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp0_stage49 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage50 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_pp0_stage51 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp0_stage52 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_pp0_stage53 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_pp0_stage54 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp0_stage55 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp0_stage56 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp0_stage57 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp0_stage58 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp0_stage59 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage60 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp0_stage61 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_pp0_stage62 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_pp0_stage63 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd73];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b0 == Input_1_V_TVALID_int_regslice) & (icmp_ln39_fu_3331_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b0 == Input_1_V_TVALID_int_regslice) & (icmp_ln39_fu_3331_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((ap_enable_reg_pp2_iter2 == 1'b1) & ((1'b1 == ap_block_state78_io) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((ap_enable_reg_pp2_iter2 == 1'b1) & ((1'b1 == ap_block_state78_io) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0))));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_11001 = ((ap_enable_reg_pp2_iter2 == 1'b1) & ((1'b1 == ap_block_state79_io) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter2_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = ((ap_enable_reg_pp2_iter2 == 1'b1) & ((1'b1 == ap_block_state79_io) | ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter2_reg == 1'd0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (1'b0 == Input_1_V_TVALID_int_regslice));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state68_pp1_stage0_iter0 = ((1'b0 == Input_1_V_TVALID_int_regslice) & (icmp_ln39_fu_3331_p2 == 1'd0));
end

assign ap_block_state69_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state78_io = ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state78_pp2_stage0_iter2 = ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state79_io = ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state79_pp2_stage1_iter2 = ((1'b0 == Output_1_V_TREADY_int_regslice) & (icmp_ln54_reg_3735_pp2_iter2_reg == 1'd0));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_10_fu_3322_p1 = tmp_V_reg_3533[15:0];

assign i_V_1_fu_1520_p2 = (ap_phi_mux_i_V_phi_fu_1448_p4 + 9'd1);

assign i_V_3_fu_3325_p2 = (i_V_2_reg_1455 + 16'd1);

assign icmp_ln39_fu_3331_p2 = ((i_V_2_reg_1455 == empty_10_reg_3686) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_3396_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_1470_p4 == 14'd8192) ? 1'b1 : 1'b0);

assign icmp_ln870_1_fu_3385_p2 = ((add_ln691_reg_3720 == 16'd3192) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_1514_p2 = ((counter_V == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1526_p2 = ((ap_phi_mux_i_V_phi_fu_1448_p4 == 9'd256) ? 1'b1 : 1'b0);

assign or_ln34_100_fu_2944_p2 = (tmp_1_reg_3554 | 16'd101);

assign or_ln34_101_fu_2958_p2 = (tmp_1_reg_3554 | 16'd102);

assign or_ln34_102_fu_2972_p2 = (tmp_1_reg_3554 | 16'd103);

assign or_ln34_103_fu_2986_p2 = (tmp_1_reg_3554 | 16'd104);

assign or_ln34_104_fu_3000_p2 = (tmp_1_reg_3554 | 16'd105);

assign or_ln34_105_fu_3014_p2 = (tmp_1_reg_3554 | 16'd106);

assign or_ln34_106_fu_3028_p2 = (tmp_1_reg_3554 | 16'd107);

assign or_ln34_107_fu_3042_p2 = (tmp_1_reg_3554 | 16'd108);

assign or_ln34_108_fu_3056_p2 = (tmp_1_reg_3554 | 16'd109);

assign or_ln34_109_fu_3070_p2 = (tmp_1_reg_3554 | 16'd110);

assign or_ln34_10_fu_1684_p2 = (tmp_1_reg_3554 | 16'd11);

assign or_ln34_110_fu_3084_p2 = (tmp_1_reg_3554 | 16'd111);

assign or_ln34_111_fu_3098_p2 = (tmp_1_reg_3554 | 16'd112);

assign or_ln34_112_fu_3112_p2 = (tmp_1_reg_3554 | 16'd113);

assign or_ln34_113_fu_3126_p2 = (tmp_1_reg_3554 | 16'd114);

assign or_ln34_114_fu_3140_p2 = (tmp_1_reg_3554 | 16'd115);

assign or_ln34_115_fu_3154_p2 = (tmp_1_reg_3554 | 16'd116);

assign or_ln34_116_fu_3168_p2 = (tmp_1_reg_3554 | 16'd117);

assign or_ln34_117_fu_3182_p2 = (tmp_1_reg_3554 | 16'd118);

assign or_ln34_118_fu_3196_p2 = (tmp_1_reg_3554 | 16'd119);

assign or_ln34_119_fu_3210_p2 = (tmp_1_reg_3554 | 16'd120);

assign or_ln34_11_fu_1698_p2 = (tmp_1_reg_3554 | 16'd12);

assign or_ln34_120_fu_3224_p2 = (tmp_1_reg_3554 | 16'd121);

assign or_ln34_121_fu_3238_p2 = (tmp_1_reg_3554 | 16'd122);

assign or_ln34_122_fu_3252_p2 = (tmp_1_reg_3554 | 16'd123);

assign or_ln34_123_fu_3266_p2 = (tmp_1_reg_3554 | 16'd124);

assign or_ln34_124_fu_3280_p2 = (tmp_1_reg_3554 | 16'd125);

assign or_ln34_125_fu_3294_p2 = (tmp_1_reg_3554 | 16'd126);

assign or_ln34_126_fu_3308_p2 = (tmp_1_reg_3554 | 16'd127);

assign or_ln34_12_fu_1712_p2 = (tmp_1_reg_3554 | 16'd13);

assign or_ln34_13_fu_1726_p2 = (tmp_1_reg_3554 | 16'd14);

assign or_ln34_14_fu_1740_p2 = (tmp_1_reg_3554 | 16'd15);

assign or_ln34_15_fu_1754_p2 = (tmp_1_reg_3554 | 16'd16);

assign or_ln34_16_fu_1768_p2 = (tmp_1_reg_3554 | 16'd17);

assign or_ln34_17_fu_1782_p2 = (tmp_1_reg_3554 | 16'd18);

assign or_ln34_18_fu_1796_p2 = (tmp_1_reg_3554 | 16'd19);

assign or_ln34_19_fu_1810_p2 = (tmp_1_reg_3554 | 16'd20);

assign or_ln34_1_fu_1558_p2 = (tmp_1_reg_3554 | 16'd2);

assign or_ln34_20_fu_1824_p2 = (tmp_1_reg_3554 | 16'd21);

assign or_ln34_21_fu_1838_p2 = (tmp_1_reg_3554 | 16'd22);

assign or_ln34_22_fu_1852_p2 = (tmp_1_reg_3554 | 16'd23);

assign or_ln34_23_fu_1866_p2 = (tmp_1_reg_3554 | 16'd24);

assign or_ln34_24_fu_1880_p2 = (tmp_1_reg_3554 | 16'd25);

assign or_ln34_25_fu_1894_p2 = (tmp_1_reg_3554 | 16'd26);

assign or_ln34_26_fu_1908_p2 = (tmp_1_reg_3554 | 16'd27);

assign or_ln34_27_fu_1922_p2 = (tmp_1_reg_3554 | 16'd28);

assign or_ln34_28_fu_1936_p2 = (tmp_1_reg_3554 | 16'd29);

assign or_ln34_29_fu_1950_p2 = (tmp_1_reg_3554 | 16'd30);

assign or_ln34_2_fu_1572_p2 = (tmp_1_reg_3554 | 16'd3);

assign or_ln34_30_fu_1964_p2 = (tmp_1_reg_3554 | 16'd31);

assign or_ln34_31_fu_1978_p2 = (tmp_1_reg_3554 | 16'd32);

assign or_ln34_32_fu_1992_p2 = (tmp_1_reg_3554 | 16'd33);

assign or_ln34_33_fu_2006_p2 = (tmp_1_reg_3554 | 16'd34);

assign or_ln34_34_fu_2020_p2 = (tmp_1_reg_3554 | 16'd35);

assign or_ln34_35_fu_2034_p2 = (tmp_1_reg_3554 | 16'd36);

assign or_ln34_36_fu_2048_p2 = (tmp_1_reg_3554 | 16'd37);

assign or_ln34_37_fu_2062_p2 = (tmp_1_reg_3554 | 16'd38);

assign or_ln34_38_fu_2076_p2 = (tmp_1_reg_3554 | 16'd39);

assign or_ln34_39_fu_2090_p2 = (tmp_1_reg_3554 | 16'd40);

assign or_ln34_3_fu_1586_p2 = (tmp_1_reg_3554 | 16'd4);

assign or_ln34_40_fu_2104_p2 = (tmp_1_reg_3554 | 16'd41);

assign or_ln34_41_fu_2118_p2 = (tmp_1_reg_3554 | 16'd42);

assign or_ln34_42_fu_2132_p2 = (tmp_1_reg_3554 | 16'd43);

assign or_ln34_43_fu_2146_p2 = (tmp_1_reg_3554 | 16'd44);

assign or_ln34_44_fu_2160_p2 = (tmp_1_reg_3554 | 16'd45);

assign or_ln34_45_fu_2174_p2 = (tmp_1_reg_3554 | 16'd46);

assign or_ln34_46_fu_2188_p2 = (tmp_1_reg_3554 | 16'd47);

assign or_ln34_47_fu_2202_p2 = (tmp_1_reg_3554 | 16'd48);

assign or_ln34_48_fu_2216_p2 = (tmp_1_reg_3554 | 16'd49);

assign or_ln34_49_fu_2230_p2 = (tmp_1_reg_3554 | 16'd50);

assign or_ln34_4_fu_1600_p2 = (tmp_1_reg_3554 | 16'd5);

assign or_ln34_50_fu_2244_p2 = (tmp_1_reg_3554 | 16'd51);

assign or_ln34_51_fu_2258_p2 = (tmp_1_reg_3554 | 16'd52);

assign or_ln34_52_fu_2272_p2 = (tmp_1_reg_3554 | 16'd53);

assign or_ln34_53_fu_2286_p2 = (tmp_1_reg_3554 | 16'd54);

assign or_ln34_54_fu_2300_p2 = (tmp_1_reg_3554 | 16'd55);

assign or_ln34_55_fu_2314_p2 = (tmp_1_reg_3554 | 16'd56);

assign or_ln34_56_fu_2328_p2 = (tmp_1_reg_3554 | 16'd57);

assign or_ln34_57_fu_2342_p2 = (tmp_1_reg_3554 | 16'd58);

assign or_ln34_58_fu_2356_p2 = (tmp_1_reg_3554 | 16'd59);

assign or_ln34_59_fu_2370_p2 = (tmp_1_reg_3554 | 16'd60);

assign or_ln34_5_fu_1614_p2 = (tmp_1_reg_3554 | 16'd6);

assign or_ln34_60_fu_2384_p2 = (tmp_1_reg_3554 | 16'd61);

assign or_ln34_61_fu_2398_p2 = (tmp_1_reg_3554 | 16'd62);

assign or_ln34_62_fu_2412_p2 = (tmp_1_reg_3554 | 16'd63);

assign or_ln34_63_fu_2426_p2 = (tmp_1_reg_3554 | 16'd64);

assign or_ln34_64_fu_2440_p2 = (tmp_1_reg_3554 | 16'd65);

assign or_ln34_65_fu_2454_p2 = (tmp_1_reg_3554 | 16'd66);

assign or_ln34_66_fu_2468_p2 = (tmp_1_reg_3554 | 16'd67);

assign or_ln34_67_fu_2482_p2 = (tmp_1_reg_3554 | 16'd68);

assign or_ln34_68_fu_2496_p2 = (tmp_1_reg_3554 | 16'd69);

assign or_ln34_69_fu_2510_p2 = (tmp_1_reg_3554 | 16'd70);

assign or_ln34_6_fu_1628_p2 = (tmp_1_reg_3554 | 16'd7);

assign or_ln34_70_fu_2524_p2 = (tmp_1_reg_3554 | 16'd71);

assign or_ln34_71_fu_2538_p2 = (tmp_1_reg_3554 | 16'd72);

assign or_ln34_72_fu_2552_p2 = (tmp_1_reg_3554 | 16'd73);

assign or_ln34_73_fu_2566_p2 = (tmp_1_reg_3554 | 16'd74);

assign or_ln34_74_fu_2580_p2 = (tmp_1_reg_3554 | 16'd75);

assign or_ln34_75_fu_2594_p2 = (tmp_1_reg_3554 | 16'd76);

assign or_ln34_76_fu_2608_p2 = (tmp_1_reg_3554 | 16'd77);

assign or_ln34_77_fu_2622_p2 = (tmp_1_reg_3554 | 16'd78);

assign or_ln34_78_fu_2636_p2 = (tmp_1_reg_3554 | 16'd79);

assign or_ln34_79_fu_2650_p2 = (tmp_1_reg_3554 | 16'd80);

assign or_ln34_7_fu_1642_p2 = (tmp_1_reg_3554 | 16'd8);

assign or_ln34_80_fu_2664_p2 = (tmp_1_reg_3554 | 16'd81);

assign or_ln34_81_fu_2678_p2 = (tmp_1_reg_3554 | 16'd82);

assign or_ln34_82_fu_2692_p2 = (tmp_1_reg_3554 | 16'd83);

assign or_ln34_83_fu_2706_p2 = (tmp_1_reg_3554 | 16'd84);

assign or_ln34_84_fu_2720_p2 = (tmp_1_reg_3554 | 16'd85);

assign or_ln34_85_fu_2734_p2 = (tmp_1_reg_3554 | 16'd86);

assign or_ln34_86_fu_2748_p2 = (tmp_1_reg_3554 | 16'd87);

assign or_ln34_87_fu_2762_p2 = (tmp_1_reg_3554 | 16'd88);

assign or_ln34_88_fu_2776_p2 = (tmp_1_reg_3554 | 16'd89);

assign or_ln34_89_fu_2790_p2 = (tmp_1_reg_3554 | 16'd90);

assign or_ln34_8_fu_1656_p2 = (tmp_1_reg_3554 | 16'd9);

assign or_ln34_90_fu_2804_p2 = (tmp_1_reg_3554 | 16'd91);

assign or_ln34_91_fu_2818_p2 = (tmp_1_reg_3554 | 16'd92);

assign or_ln34_92_fu_2832_p2 = (tmp_1_reg_3554 | 16'd93);

assign or_ln34_93_fu_2846_p2 = (tmp_1_reg_3554 | 16'd94);

assign or_ln34_94_fu_2860_p2 = (tmp_1_reg_3554 | 16'd95);

assign or_ln34_95_fu_2874_p2 = (tmp_1_reg_3554 | 16'd96);

assign or_ln34_96_fu_2888_p2 = (tmp_1_reg_3554 | 16'd97);

assign or_ln34_97_fu_2902_p2 = (tmp_1_reg_3554 | 16'd98);

assign or_ln34_98_fu_2916_p2 = (tmp_1_reg_3554 | 16'd99);

assign or_ln34_99_fu_2930_p2 = (tmp_1_reg_3554 | 16'd100);

assign or_ln34_9_fu_1670_p2 = (tmp_1_reg_3554 | 16'd10);

assign or_ln34_fu_1544_p2 = (tmp_1_reg_3554 | 16'd1);

assign or_ln58_1_fu_3473_p2 = (trunc_ln55_reg_3758 | 7'd2);

assign or_ln58_2_fu_3499_p2 = (trunc_ln55_reg_3758 | 7'd3);

assign or_ln58_fu_3456_p2 = (trunc_ln55_reg_3758 | 7'd1);

assign select_ln54_1_fu_3424_p3 = ((tmp_fu_3408_p3[0:0] == 1'b1) ? add_ln54_fu_3402_p2 : ap_phi_mux_i_phi_fu_1481_p4);

assign select_ln54_fu_3416_p3 = ((tmp_fu_3408_p3[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_j_phi_fu_1492_p4);

assign tmp_100_fu_2935_p3 = {{48'd0}, {or_ln34_99_fu_2930_p2}};

assign tmp_101_fu_2949_p3 = {{48'd0}, {or_ln34_100_fu_2944_p2}};

assign tmp_102_fu_2963_p3 = {{48'd0}, {or_ln34_101_fu_2958_p2}};

assign tmp_103_fu_2977_p3 = {{48'd0}, {or_ln34_102_fu_2972_p2}};

assign tmp_104_fu_2991_p3 = {{48'd0}, {or_ln34_103_fu_2986_p2}};

assign tmp_105_fu_3005_p3 = {{48'd0}, {or_ln34_104_fu_3000_p2}};

assign tmp_106_fu_3019_p3 = {{48'd0}, {or_ln34_105_fu_3014_p2}};

assign tmp_107_fu_3033_p3 = {{48'd0}, {or_ln34_106_fu_3028_p2}};

assign tmp_108_fu_3047_p3 = {{48'd0}, {or_ln34_107_fu_3042_p2}};

assign tmp_109_fu_3061_p3 = {{48'd0}, {or_ln34_108_fu_3056_p2}};

assign tmp_10_fu_1675_p3 = {{48'd0}, {or_ln34_9_fu_1670_p2}};

assign tmp_110_fu_3075_p3 = {{48'd0}, {or_ln34_109_fu_3070_p2}};

assign tmp_111_fu_3089_p3 = {{48'd0}, {or_ln34_110_fu_3084_p2}};

assign tmp_112_fu_3103_p3 = {{48'd0}, {or_ln34_111_fu_3098_p2}};

assign tmp_113_fu_3117_p3 = {{48'd0}, {or_ln34_112_fu_3112_p2}};

assign tmp_114_fu_3131_p3 = {{48'd0}, {or_ln34_113_fu_3126_p2}};

assign tmp_115_fu_3145_p3 = {{48'd0}, {or_ln34_114_fu_3140_p2}};

assign tmp_116_fu_3159_p3 = {{48'd0}, {or_ln34_115_fu_3154_p2}};

assign tmp_117_fu_3173_p3 = {{48'd0}, {or_ln34_116_fu_3168_p2}};

assign tmp_118_fu_3187_p3 = {{48'd0}, {or_ln34_117_fu_3182_p2}};

assign tmp_119_fu_3201_p3 = {{48'd0}, {or_ln34_118_fu_3196_p2}};

assign tmp_11_fu_1689_p3 = {{48'd0}, {or_ln34_10_fu_1684_p2}};

assign tmp_120_fu_3215_p3 = {{48'd0}, {or_ln34_119_fu_3210_p2}};

assign tmp_121_fu_3229_p3 = {{48'd0}, {or_ln34_120_fu_3224_p2}};

assign tmp_122_fu_3243_p3 = {{48'd0}, {or_ln34_121_fu_3238_p2}};

assign tmp_123_fu_3257_p3 = {{48'd0}, {or_ln34_122_fu_3252_p2}};

assign tmp_124_fu_3271_p3 = {{48'd0}, {or_ln34_123_fu_3266_p2}};

assign tmp_125_fu_3285_p3 = {{48'd0}, {or_ln34_124_fu_3280_p2}};

assign tmp_126_fu_3299_p3 = {{48'd0}, {or_ln34_125_fu_3294_p2}};

assign tmp_127_fu_3313_p3 = {{48'd0}, {or_ln34_126_fu_3308_p2}};

assign tmp_128_fu_3360_p3 = {{trunc_ln49_reg_3710}, {7'd0}};

assign tmp_129_fu_3461_p3 = {{select_ln54_1_reg_3745}, {or_ln58_fu_3456_p2}};

assign tmp_12_fu_1703_p3 = {{48'd0}, {or_ln34_11_fu_1698_p2}};

assign tmp_130_cast_fu_3440_p3 = {{trunc_ln215_reg_3753}, {7'd0}};

assign tmp_130_fu_3478_p3 = {{select_ln54_1_reg_3745}, {or_ln58_1_fu_3473_p2}};

assign tmp_131_fu_3504_p3 = {{select_ln54_1_reg_3745}, {or_ln58_2_fu_3499_p2}};

assign tmp_13_fu_1717_p3 = {{48'd0}, {or_ln34_12_fu_1712_p2}};

assign tmp_14_fu_1731_p3 = {{48'd0}, {or_ln34_13_fu_1726_p2}};

assign tmp_15_fu_1745_p3 = {{48'd0}, {or_ln34_14_fu_1740_p2}};

assign tmp_16_fu_1759_p3 = {{48'd0}, {or_ln34_15_fu_1754_p2}};

assign tmp_17_fu_1773_p3 = {{48'd0}, {or_ln34_16_fu_1768_p2}};

assign tmp_18_fu_1787_p3 = {{48'd0}, {or_ln34_17_fu_1782_p2}};

assign tmp_19_fu_1801_p3 = {{48'd0}, {or_ln34_18_fu_1796_p2}};

assign tmp_1_fu_1532_p3 = {{ap_phi_mux_i_V_phi_fu_1448_p4}, {7'd0}};

assign tmp_20_fu_1815_p3 = {{48'd0}, {or_ln34_19_fu_1810_p2}};

assign tmp_21_fu_1829_p3 = {{48'd0}, {or_ln34_20_fu_1824_p2}};

assign tmp_22_fu_1843_p3 = {{48'd0}, {or_ln34_21_fu_1838_p2}};

assign tmp_23_fu_1857_p3 = {{48'd0}, {or_ln34_22_fu_1852_p2}};

assign tmp_24_fu_1871_p3 = {{48'd0}, {or_ln34_23_fu_1866_p2}};

assign tmp_25_fu_1885_p3 = {{48'd0}, {or_ln34_24_fu_1880_p2}};

assign tmp_26_fu_1899_p3 = {{48'd0}, {or_ln34_25_fu_1894_p2}};

assign tmp_27_fu_1913_p3 = {{48'd0}, {or_ln34_26_fu_1908_p2}};

assign tmp_28_fu_1927_p3 = {{48'd0}, {or_ln34_27_fu_1922_p2}};

assign tmp_29_fu_1941_p3 = {{48'd0}, {or_ln34_28_fu_1936_p2}};

assign tmp_2_fu_1549_p3 = {{48'd0}, {or_ln34_fu_1544_p2}};

assign tmp_30_fu_1955_p3 = {{48'd0}, {or_ln34_29_fu_1950_p2}};

assign tmp_31_fu_1969_p3 = {{48'd0}, {or_ln34_30_fu_1964_p2}};

assign tmp_32_fu_1983_p3 = {{48'd0}, {or_ln34_31_fu_1978_p2}};

assign tmp_33_fu_1997_p3 = {{48'd0}, {or_ln34_32_fu_1992_p2}};

assign tmp_34_fu_2011_p3 = {{48'd0}, {or_ln34_33_fu_2006_p2}};

assign tmp_35_fu_2025_p3 = {{48'd0}, {or_ln34_34_fu_2020_p2}};

assign tmp_36_fu_2039_p3 = {{48'd0}, {or_ln34_35_fu_2034_p2}};

assign tmp_37_fu_2053_p3 = {{48'd0}, {or_ln34_36_fu_2048_p2}};

assign tmp_38_fu_2067_p3 = {{48'd0}, {or_ln34_37_fu_2062_p2}};

assign tmp_39_fu_2081_p3 = {{48'd0}, {or_ln34_38_fu_2076_p2}};

assign tmp_3_fu_1563_p3 = {{48'd0}, {or_ln34_1_fu_1558_p2}};

assign tmp_40_fu_2095_p3 = {{48'd0}, {or_ln34_39_fu_2090_p2}};

assign tmp_41_fu_2109_p3 = {{48'd0}, {or_ln34_40_fu_2104_p2}};

assign tmp_42_fu_2123_p3 = {{48'd0}, {or_ln34_41_fu_2118_p2}};

assign tmp_43_fu_2137_p3 = {{48'd0}, {or_ln34_42_fu_2132_p2}};

assign tmp_44_fu_2151_p3 = {{48'd0}, {or_ln34_43_fu_2146_p2}};

assign tmp_45_fu_2165_p3 = {{48'd0}, {or_ln34_44_fu_2160_p2}};

assign tmp_46_fu_2179_p3 = {{48'd0}, {or_ln34_45_fu_2174_p2}};

assign tmp_47_fu_2193_p3 = {{48'd0}, {or_ln34_46_fu_2188_p2}};

assign tmp_48_fu_2207_p3 = {{48'd0}, {or_ln34_47_fu_2202_p2}};

assign tmp_49_fu_2221_p3 = {{48'd0}, {or_ln34_48_fu_2216_p2}};

assign tmp_4_fu_1577_p3 = {{48'd0}, {or_ln34_2_fu_1572_p2}};

assign tmp_50_fu_2235_p3 = {{48'd0}, {or_ln34_49_fu_2230_p2}};

assign tmp_51_fu_2249_p3 = {{48'd0}, {or_ln34_50_fu_2244_p2}};

assign tmp_52_fu_2263_p3 = {{48'd0}, {or_ln34_51_fu_2258_p2}};

assign tmp_53_fu_2277_p3 = {{48'd0}, {or_ln34_52_fu_2272_p2}};

assign tmp_54_fu_2291_p3 = {{48'd0}, {or_ln34_53_fu_2286_p2}};

assign tmp_55_fu_2305_p3 = {{48'd0}, {or_ln34_54_fu_2300_p2}};

assign tmp_56_fu_2319_p3 = {{48'd0}, {or_ln34_55_fu_2314_p2}};

assign tmp_57_fu_2333_p3 = {{48'd0}, {or_ln34_56_fu_2328_p2}};

assign tmp_58_fu_2347_p3 = {{48'd0}, {or_ln34_57_fu_2342_p2}};

assign tmp_59_fu_2361_p3 = {{48'd0}, {or_ln34_58_fu_2356_p2}};

assign tmp_5_fu_1591_p3 = {{48'd0}, {or_ln34_3_fu_1586_p2}};

assign tmp_60_fu_2375_p3 = {{48'd0}, {or_ln34_59_fu_2370_p2}};

assign tmp_61_fu_2389_p3 = {{48'd0}, {or_ln34_60_fu_2384_p2}};

assign tmp_62_fu_2403_p3 = {{48'd0}, {or_ln34_61_fu_2398_p2}};

assign tmp_63_fu_2417_p3 = {{48'd0}, {or_ln34_62_fu_2412_p2}};

assign tmp_64_fu_2431_p3 = {{48'd0}, {or_ln34_63_fu_2426_p2}};

assign tmp_65_fu_2445_p3 = {{48'd0}, {or_ln34_64_fu_2440_p2}};

assign tmp_66_fu_2459_p3 = {{48'd0}, {or_ln34_65_fu_2454_p2}};

assign tmp_67_fu_2473_p3 = {{48'd0}, {or_ln34_66_fu_2468_p2}};

assign tmp_68_fu_2487_p3 = {{48'd0}, {or_ln34_67_fu_2482_p2}};

assign tmp_69_fu_2501_p3 = {{48'd0}, {or_ln34_68_fu_2496_p2}};

assign tmp_6_fu_1605_p3 = {{48'd0}, {or_ln34_4_fu_1600_p2}};

assign tmp_70_fu_2515_p3 = {{48'd0}, {or_ln34_69_fu_2510_p2}};

assign tmp_71_fu_2529_p3 = {{48'd0}, {or_ln34_70_fu_2524_p2}};

assign tmp_72_fu_2543_p3 = {{48'd0}, {or_ln34_71_fu_2538_p2}};

assign tmp_73_fu_2557_p3 = {{48'd0}, {or_ln34_72_fu_2552_p2}};

assign tmp_74_fu_2571_p3 = {{48'd0}, {or_ln34_73_fu_2566_p2}};

assign tmp_75_fu_2585_p3 = {{48'd0}, {or_ln34_74_fu_2580_p2}};

assign tmp_76_fu_2599_p3 = {{48'd0}, {or_ln34_75_fu_2594_p2}};

assign tmp_77_fu_2613_p3 = {{48'd0}, {or_ln34_76_fu_2608_p2}};

assign tmp_78_fu_2627_p3 = {{48'd0}, {or_ln34_77_fu_2622_p2}};

assign tmp_79_fu_2641_p3 = {{48'd0}, {or_ln34_78_fu_2636_p2}};

assign tmp_7_fu_1619_p3 = {{48'd0}, {or_ln34_5_fu_1614_p2}};

assign tmp_80_fu_2655_p3 = {{48'd0}, {or_ln34_79_fu_2650_p2}};

assign tmp_81_fu_2669_p3 = {{48'd0}, {or_ln34_80_fu_2664_p2}};

assign tmp_82_fu_2683_p3 = {{48'd0}, {or_ln34_81_fu_2678_p2}};

assign tmp_83_fu_2697_p3 = {{48'd0}, {or_ln34_82_fu_2692_p2}};

assign tmp_84_fu_2711_p3 = {{48'd0}, {or_ln34_83_fu_2706_p2}};

assign tmp_85_fu_2725_p3 = {{48'd0}, {or_ln34_84_fu_2720_p2}};

assign tmp_86_fu_2739_p3 = {{48'd0}, {or_ln34_85_fu_2734_p2}};

assign tmp_87_fu_2753_p3 = {{48'd0}, {or_ln34_86_fu_2748_p2}};

assign tmp_88_fu_2767_p3 = {{48'd0}, {or_ln34_87_fu_2762_p2}};

assign tmp_89_fu_2781_p3 = {{48'd0}, {or_ln34_88_fu_2776_p2}};

assign tmp_8_fu_1633_p3 = {{48'd0}, {or_ln34_6_fu_1628_p2}};

assign tmp_90_fu_2795_p3 = {{48'd0}, {or_ln34_89_fu_2790_p2}};

assign tmp_91_fu_2809_p3 = {{48'd0}, {or_ln34_90_fu_2804_p2}};

assign tmp_92_fu_2823_p3 = {{48'd0}, {or_ln34_91_fu_2818_p2}};

assign tmp_93_fu_2837_p3 = {{48'd0}, {or_ln34_92_fu_2832_p2}};

assign tmp_94_fu_2851_p3 = {{48'd0}, {or_ln34_93_fu_2846_p2}};

assign tmp_95_fu_2865_p3 = {{48'd0}, {or_ln34_94_fu_2860_p2}};

assign tmp_96_fu_2879_p3 = {{48'd0}, {or_ln34_95_fu_2874_p2}};

assign tmp_97_fu_2893_p3 = {{48'd0}, {or_ln34_96_fu_2888_p2}};

assign tmp_98_fu_2907_p3 = {{48'd0}, {or_ln34_97_fu_2902_p2}};

assign tmp_99_fu_2921_p3 = {{48'd0}, {or_ln34_98_fu_2916_p2}};

assign tmp_9_fu_1647_p3 = {{48'd0}, {or_ln34_7_fu_1642_p2}};

assign tmp_fu_3408_p3 = ap_phi_mux_j_phi_fu_1492_p4[32'd7];

assign tmp_s_fu_1661_p3 = {{48'd0}, {or_ln34_8_fu_1656_p2}};

assign trunc_ln215_fu_3432_p1 = select_ln54_1_fu_3424_p3[7:0];

assign trunc_ln49_fu_3356_p1 = Input_1_V_TDATA_int_regslice[7:0];

assign trunc_ln55_fu_3436_p1 = select_ln54_fu_3416_p3[6:0];

assign zext_ln215_1_fu_3468_p1 = tmp_129_fu_3461_p3;

assign zext_ln215_2_fu_3485_p1 = tmp_130_fu_3478_p3;

assign zext_ln215_3_fu_3511_p1 = tmp_131_fu_3504_p3;

assign zext_ln215_4_fu_3495_p1 = add_ln215_reg_3765;

assign zext_ln215_fu_3447_p1 = select_ln54_reg_3739;

assign zext_ln34_fu_1540_p1 = tmp_1_reg_3554;

assign zext_ln49_1_fu_3376_p1 = add_ln49_reg_3715;

assign zext_ln49_fu_3367_p1 = pixels_y_V_reg_3700;

always @ (posedge ap_clk) begin
    tmp_1_reg_3554[6:0] <= 7'b0000000;
end

endmodule //coloringFB_bot_m
