// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module coloringFB_top_m_coloringFB_top_m_Pipeline_COLORING_FB_INIT_ROW (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        frame_buffer_V_0_address1,
        frame_buffer_V_0_ce1,
        frame_buffer_V_0_we1,
        frame_buffer_V_0_d1,
        frame_buffer_V_1_address1,
        frame_buffer_V_1_ce1,
        frame_buffer_V_1_we1,
        frame_buffer_V_1_d1
);

parameter    ap_ST_fsm_state1 = 64'd1;
parameter    ap_ST_fsm_state2 = 64'd2;
parameter    ap_ST_fsm_state3 = 64'd4;
parameter    ap_ST_fsm_state4 = 64'd8;
parameter    ap_ST_fsm_state5 = 64'd16;
parameter    ap_ST_fsm_state6 = 64'd32;
parameter    ap_ST_fsm_state7 = 64'd64;
parameter    ap_ST_fsm_state8 = 64'd128;
parameter    ap_ST_fsm_state9 = 64'd256;
parameter    ap_ST_fsm_state10 = 64'd512;
parameter    ap_ST_fsm_state11 = 64'd1024;
parameter    ap_ST_fsm_state12 = 64'd2048;
parameter    ap_ST_fsm_state13 = 64'd4096;
parameter    ap_ST_fsm_state14 = 64'd8192;
parameter    ap_ST_fsm_state15 = 64'd16384;
parameter    ap_ST_fsm_state16 = 64'd32768;
parameter    ap_ST_fsm_state17 = 64'd65536;
parameter    ap_ST_fsm_state18 = 64'd131072;
parameter    ap_ST_fsm_state19 = 64'd262144;
parameter    ap_ST_fsm_state20 = 64'd524288;
parameter    ap_ST_fsm_state21 = 64'd1048576;
parameter    ap_ST_fsm_state22 = 64'd2097152;
parameter    ap_ST_fsm_state23 = 64'd4194304;
parameter    ap_ST_fsm_state24 = 64'd8388608;
parameter    ap_ST_fsm_state25 = 64'd16777216;
parameter    ap_ST_fsm_state26 = 64'd33554432;
parameter    ap_ST_fsm_state27 = 64'd67108864;
parameter    ap_ST_fsm_state28 = 64'd134217728;
parameter    ap_ST_fsm_state29 = 64'd268435456;
parameter    ap_ST_fsm_state30 = 64'd536870912;
parameter    ap_ST_fsm_state31 = 64'd1073741824;
parameter    ap_ST_fsm_state32 = 64'd2147483648;
parameter    ap_ST_fsm_state33 = 64'd4294967296;
parameter    ap_ST_fsm_state34 = 64'd8589934592;
parameter    ap_ST_fsm_state35 = 64'd17179869184;
parameter    ap_ST_fsm_state36 = 64'd34359738368;
parameter    ap_ST_fsm_state37 = 64'd68719476736;
parameter    ap_ST_fsm_state38 = 64'd137438953472;
parameter    ap_ST_fsm_state39 = 64'd274877906944;
parameter    ap_ST_fsm_state40 = 64'd549755813888;
parameter    ap_ST_fsm_state41 = 64'd1099511627776;
parameter    ap_ST_fsm_state42 = 64'd2199023255552;
parameter    ap_ST_fsm_state43 = 64'd4398046511104;
parameter    ap_ST_fsm_state44 = 64'd8796093022208;
parameter    ap_ST_fsm_state45 = 64'd17592186044416;
parameter    ap_ST_fsm_state46 = 64'd35184372088832;
parameter    ap_ST_fsm_state47 = 64'd70368744177664;
parameter    ap_ST_fsm_state48 = 64'd140737488355328;
parameter    ap_ST_fsm_state49 = 64'd281474976710656;
parameter    ap_ST_fsm_state50 = 64'd562949953421312;
parameter    ap_ST_fsm_state51 = 64'd1125899906842624;
parameter    ap_ST_fsm_state52 = 64'd2251799813685248;
parameter    ap_ST_fsm_state53 = 64'd4503599627370496;
parameter    ap_ST_fsm_state54 = 64'd9007199254740992;
parameter    ap_ST_fsm_state55 = 64'd18014398509481984;
parameter    ap_ST_fsm_state56 = 64'd36028797018963968;
parameter    ap_ST_fsm_state57 = 64'd72057594037927936;
parameter    ap_ST_fsm_state58 = 64'd144115188075855872;
parameter    ap_ST_fsm_state59 = 64'd288230376151711744;
parameter    ap_ST_fsm_state60 = 64'd576460752303423488;
parameter    ap_ST_fsm_state61 = 64'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 64'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 64'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 64'd9223372036854775808;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] frame_buffer_V_0_address1;
output   frame_buffer_V_0_ce1;
output   frame_buffer_V_0_we1;
output  [7:0] frame_buffer_V_0_d1;
output  [13:0] frame_buffer_V_1_address1;
output   frame_buffer_V_1_ce1;
output   frame_buffer_V_1_we1;
output  [7:0] frame_buffer_V_1_d1;

reg ap_idle;
reg[13:0] frame_buffer_V_0_address1;
reg frame_buffer_V_0_ce1;
reg frame_buffer_V_0_we1;
reg[13:0] frame_buffer_V_1_address1;
reg frame_buffer_V_1_ce1;
reg frame_buffer_V_1_we1;

(* fsm_encoding = "none" *) reg   [63:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln1057_fu_1230_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state64;
wire    ap_block_state64_pp0_stage63_iter0;
wire   [14:0] tmp_1_fu_1242_p3;
reg   [14:0] tmp_1_reg_2216;
wire   [63:0] zext_ln38_fu_1250_p1;
wire   [63:0] tmp_3_fu_1266_p3;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_4_fu_1281_p3;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_5_fu_1296_p3;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_6_fu_1311_p3;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_7_fu_1326_p3;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_8_fu_1341_p3;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_9_fu_1356_p3;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_s_fu_1371_p3;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_2_fu_1386_p3;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_10_fu_1401_p3;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_11_fu_1416_p3;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_12_fu_1431_p3;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_13_fu_1446_p3;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp_14_fu_1461_p3;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_15_fu_1476_p3;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_16_fu_1491_p3;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_17_fu_1506_p3;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_18_fu_1521_p3;
wire    ap_CS_fsm_state19;
wire   [63:0] tmp_19_fu_1536_p3;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_20_fu_1551_p3;
wire    ap_CS_fsm_state21;
wire   [63:0] tmp_21_fu_1566_p3;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_22_fu_1581_p3;
wire    ap_CS_fsm_state23;
wire   [63:0] tmp_23_fu_1596_p3;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_24_fu_1611_p3;
wire    ap_CS_fsm_state25;
wire   [63:0] tmp_25_fu_1626_p3;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_26_fu_1641_p3;
wire    ap_CS_fsm_state27;
wire   [63:0] tmp_27_fu_1656_p3;
wire    ap_CS_fsm_state28;
wire   [63:0] tmp_28_fu_1671_p3;
wire    ap_CS_fsm_state29;
wire   [63:0] tmp_29_fu_1686_p3;
wire    ap_CS_fsm_state30;
wire   [63:0] tmp_30_fu_1701_p3;
wire    ap_CS_fsm_state31;
wire   [63:0] tmp_31_fu_1716_p3;
wire    ap_CS_fsm_state32;
wire   [63:0] tmp_32_fu_1731_p3;
wire    ap_CS_fsm_state33;
wire   [63:0] tmp_33_fu_1746_p3;
wire    ap_CS_fsm_state34;
wire   [63:0] tmp_34_fu_1761_p3;
wire    ap_CS_fsm_state35;
wire   [63:0] tmp_35_fu_1776_p3;
wire    ap_CS_fsm_state36;
wire   [63:0] tmp_36_fu_1791_p3;
wire    ap_CS_fsm_state37;
wire   [63:0] tmp_37_fu_1806_p3;
wire    ap_CS_fsm_state38;
wire   [63:0] tmp_38_fu_1821_p3;
wire    ap_CS_fsm_state39;
wire   [63:0] tmp_39_fu_1836_p3;
wire    ap_CS_fsm_state40;
wire   [63:0] tmp_40_fu_1851_p3;
wire    ap_CS_fsm_state41;
wire   [63:0] tmp_41_fu_1866_p3;
wire    ap_CS_fsm_state42;
wire   [63:0] tmp_42_fu_1881_p3;
wire    ap_CS_fsm_state43;
wire   [63:0] tmp_43_fu_1896_p3;
wire    ap_CS_fsm_state44;
wire   [63:0] tmp_44_fu_1911_p3;
wire    ap_CS_fsm_state45;
wire   [63:0] tmp_45_fu_1926_p3;
wire    ap_CS_fsm_state46;
wire   [63:0] tmp_46_fu_1941_p3;
wire    ap_CS_fsm_state47;
wire   [63:0] tmp_47_fu_1956_p3;
wire    ap_CS_fsm_state48;
wire   [63:0] tmp_48_fu_1971_p3;
wire    ap_CS_fsm_state49;
wire   [63:0] tmp_49_fu_1986_p3;
wire    ap_CS_fsm_state50;
wire   [63:0] tmp_50_fu_2001_p3;
wire    ap_CS_fsm_state51;
wire   [63:0] tmp_51_fu_2016_p3;
wire    ap_CS_fsm_state52;
wire   [63:0] tmp_52_fu_2031_p3;
wire    ap_CS_fsm_state53;
wire   [63:0] tmp_53_fu_2046_p3;
wire    ap_CS_fsm_state54;
wire   [63:0] tmp_54_fu_2061_p3;
wire    ap_CS_fsm_state55;
wire   [63:0] tmp_55_fu_2076_p3;
wire    ap_CS_fsm_state56;
wire   [63:0] tmp_56_fu_2091_p3;
wire    ap_CS_fsm_state57;
wire   [63:0] tmp_57_fu_2106_p3;
wire    ap_CS_fsm_state58;
wire   [63:0] tmp_58_fu_2121_p3;
wire    ap_CS_fsm_state59;
wire   [63:0] tmp_59_fu_2136_p3;
wire    ap_CS_fsm_state60;
wire   [63:0] tmp_60_fu_2151_p3;
wire    ap_CS_fsm_state61;
wire   [63:0] tmp_61_fu_2166_p3;
wire    ap_CS_fsm_state62;
wire   [63:0] tmp_62_fu_2181_p3;
wire    ap_CS_fsm_state63;
wire   [63:0] tmp_63_fu_2196_p3;
reg   [8:0] i_V_fu_174;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_V_1;
wire   [8:0] i_V_2_fu_1236_p2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_state41_pp0_stage40_iter0;
wire    ap_block_state42_pp0_stage41_iter0;
wire    ap_block_state43_pp0_stage42_iter0;
wire    ap_block_state44_pp0_stage43_iter0;
wire    ap_block_state45_pp0_stage44_iter0;
wire    ap_block_state46_pp0_stage45_iter0;
wire    ap_block_state47_pp0_stage46_iter0;
wire    ap_block_state48_pp0_stage47_iter0;
wire    ap_block_state49_pp0_stage48_iter0;
wire    ap_block_state50_pp0_stage49_iter0;
wire    ap_block_state51_pp0_stage50_iter0;
wire    ap_block_state52_pp0_stage51_iter0;
wire    ap_block_state53_pp0_stage52_iter0;
wire    ap_block_state54_pp0_stage53_iter0;
wire    ap_block_state55_pp0_stage54_iter0;
wire    ap_block_state56_pp0_stage55_iter0;
wire    ap_block_state57_pp0_stage56_iter0;
wire    ap_block_state58_pp0_stage57_iter0;
wire    ap_block_state59_pp0_stage58_iter0;
wire    ap_block_state60_pp0_stage59_iter0;
wire    ap_block_state61_pp0_stage60_iter0;
wire    ap_block_state62_pp0_stage61_iter0;
wire    ap_block_state63_pp0_stage62_iter0;
wire   [14:0] or_ln38_fu_1261_p2;
wire   [14:0] or_ln38_1_fu_1276_p2;
wire   [14:0] or_ln38_2_fu_1291_p2;
wire   [14:0] or_ln38_3_fu_1306_p2;
wire   [14:0] or_ln38_4_fu_1321_p2;
wire   [14:0] or_ln38_5_fu_1336_p2;
wire   [14:0] or_ln38_6_fu_1351_p2;
wire   [14:0] or_ln38_7_fu_1366_p2;
wire   [14:0] or_ln38_8_fu_1381_p2;
wire   [14:0] or_ln38_9_fu_1396_p2;
wire   [14:0] or_ln38_10_fu_1411_p2;
wire   [14:0] or_ln38_11_fu_1426_p2;
wire   [14:0] or_ln38_12_fu_1441_p2;
wire   [14:0] or_ln38_13_fu_1456_p2;
wire   [14:0] or_ln38_14_fu_1471_p2;
wire   [14:0] or_ln38_15_fu_1486_p2;
wire   [14:0] or_ln38_16_fu_1501_p2;
wire   [14:0] or_ln38_17_fu_1516_p2;
wire   [14:0] or_ln38_18_fu_1531_p2;
wire   [14:0] or_ln38_19_fu_1546_p2;
wire   [14:0] or_ln38_20_fu_1561_p2;
wire   [14:0] or_ln38_21_fu_1576_p2;
wire   [14:0] or_ln38_22_fu_1591_p2;
wire   [14:0] or_ln38_23_fu_1606_p2;
wire   [14:0] or_ln38_24_fu_1621_p2;
wire   [14:0] or_ln38_25_fu_1636_p2;
wire   [14:0] or_ln38_26_fu_1651_p2;
wire   [14:0] or_ln38_27_fu_1666_p2;
wire   [14:0] or_ln38_28_fu_1681_p2;
wire   [14:0] or_ln38_29_fu_1696_p2;
wire   [14:0] or_ln38_30_fu_1711_p2;
wire   [14:0] or_ln38_31_fu_1726_p2;
wire   [14:0] or_ln38_32_fu_1741_p2;
wire   [14:0] or_ln38_33_fu_1756_p2;
wire   [14:0] or_ln38_34_fu_1771_p2;
wire   [14:0] or_ln38_35_fu_1786_p2;
wire   [14:0] or_ln38_36_fu_1801_p2;
wire   [14:0] or_ln38_37_fu_1816_p2;
wire   [14:0] or_ln38_38_fu_1831_p2;
wire   [14:0] or_ln38_39_fu_1846_p2;
wire   [14:0] or_ln38_40_fu_1861_p2;
wire   [14:0] or_ln38_41_fu_1876_p2;
wire   [14:0] or_ln38_42_fu_1891_p2;
wire   [14:0] or_ln38_43_fu_1906_p2;
wire   [14:0] or_ln38_44_fu_1921_p2;
wire   [14:0] or_ln38_45_fu_1936_p2;
wire   [14:0] or_ln38_46_fu_1951_p2;
wire   [14:0] or_ln38_47_fu_1966_p2;
wire   [14:0] or_ln38_48_fu_1981_p2;
wire   [14:0] or_ln38_49_fu_1996_p2;
wire   [14:0] or_ln38_50_fu_2011_p2;
wire   [14:0] or_ln38_51_fu_2026_p2;
wire   [14:0] or_ln38_52_fu_2041_p2;
wire   [14:0] or_ln38_53_fu_2056_p2;
wire   [14:0] or_ln38_54_fu_2071_p2;
wire   [14:0] or_ln38_55_fu_2086_p2;
wire   [14:0] or_ln38_56_fu_2101_p2;
wire   [14:0] or_ln38_57_fu_2116_p2;
wire   [14:0] or_ln38_58_fu_2131_p2;
wire   [14:0] or_ln38_59_fu_2146_p2;
wire   [14:0] or_ln38_60_fu_2161_p2;
wire   [14:0] or_ln38_61_fu_2176_p2;
wire   [14:0] or_ln38_62_fu_2191_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [63:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 64'd1;
#0 tmp_1_reg_2216 = 15'd0;
#0 i_V_fu_174 = 9'd0;
#0 ap_done_reg = 1'b0;
end

coloringFB_top_m_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_V_fu_174 <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
            if ((icmp_ln1057_fu_1230_p2 == 1'd0)) begin
                i_V_fu_174 <= i_V_2_fu_1236_p2;
            end else if ((ap_loop_init == 1'b1)) begin
                i_V_fu_174 <= 9'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_1_reg_2216[6] <= 1'b0;
        tmp_1_reg_2216[7] <= 1'b0;
        tmp_1_reg_2216[8] <= 1'b0;
        tmp_1_reg_2216[9] <= 1'b0;
        tmp_1_reg_2216[10] <= 1'b0;
        tmp_1_reg_2216[11] <= 1'b0;
        tmp_1_reg_2216[12] <= 1'b0;
        tmp_1_reg_2216[13] <= 1'b0;
        tmp_1_reg_2216[14] <= 1'b0;
    end else begin
        if (((icmp_ln1057_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                        tmp_1_reg_2216[14 : 6] <= tmp_1_fu_1242_p3[14 : 6];
        end
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln1057_fu_1230_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_V_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_V_1 = i_V_fu_174;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        frame_buffer_V_0_address1 = tmp_63_fu_2196_p3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        frame_buffer_V_0_address1 = tmp_62_fu_2181_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        frame_buffer_V_0_address1 = tmp_61_fu_2166_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        frame_buffer_V_0_address1 = tmp_60_fu_2151_p3;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        frame_buffer_V_0_address1 = tmp_59_fu_2136_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        frame_buffer_V_0_address1 = tmp_58_fu_2121_p3;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        frame_buffer_V_0_address1 = tmp_57_fu_2106_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        frame_buffer_V_0_address1 = tmp_56_fu_2091_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        frame_buffer_V_0_address1 = tmp_55_fu_2076_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        frame_buffer_V_0_address1 = tmp_54_fu_2061_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        frame_buffer_V_0_address1 = tmp_53_fu_2046_p3;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        frame_buffer_V_0_address1 = tmp_52_fu_2031_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        frame_buffer_V_0_address1 = tmp_51_fu_2016_p3;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        frame_buffer_V_0_address1 = tmp_50_fu_2001_p3;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        frame_buffer_V_0_address1 = tmp_49_fu_1986_p3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        frame_buffer_V_0_address1 = tmp_48_fu_1971_p3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        frame_buffer_V_0_address1 = tmp_47_fu_1956_p3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        frame_buffer_V_0_address1 = tmp_46_fu_1941_p3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        frame_buffer_V_0_address1 = tmp_45_fu_1926_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        frame_buffer_V_0_address1 = tmp_44_fu_1911_p3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        frame_buffer_V_0_address1 = tmp_43_fu_1896_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        frame_buffer_V_0_address1 = tmp_42_fu_1881_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        frame_buffer_V_0_address1 = tmp_41_fu_1866_p3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        frame_buffer_V_0_address1 = tmp_40_fu_1851_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        frame_buffer_V_0_address1 = tmp_39_fu_1836_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        frame_buffer_V_0_address1 = tmp_38_fu_1821_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        frame_buffer_V_0_address1 = tmp_37_fu_1806_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        frame_buffer_V_0_address1 = tmp_36_fu_1791_p3;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        frame_buffer_V_0_address1 = tmp_35_fu_1776_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        frame_buffer_V_0_address1 = tmp_34_fu_1761_p3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        frame_buffer_V_0_address1 = tmp_33_fu_1746_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        frame_buffer_V_0_address1 = tmp_32_fu_1731_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_0_address1 = tmp_31_fu_1716_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_0_address1 = tmp_30_fu_1701_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_0_address1 = tmp_29_fu_1686_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_0_address1 = tmp_28_fu_1671_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_0_address1 = tmp_27_fu_1656_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_0_address1 = tmp_26_fu_1641_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_0_address1 = tmp_25_fu_1626_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_0_address1 = tmp_24_fu_1611_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_0_address1 = tmp_23_fu_1596_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_0_address1 = tmp_22_fu_1581_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_0_address1 = tmp_21_fu_1566_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_0_address1 = tmp_20_fu_1551_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_0_address1 = tmp_19_fu_1536_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_0_address1 = tmp_18_fu_1521_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_0_address1 = tmp_17_fu_1506_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_0_address1 = tmp_16_fu_1491_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_0_address1 = tmp_15_fu_1476_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_0_address1 = tmp_14_fu_1461_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_0_address1 = tmp_13_fu_1446_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_0_address1 = tmp_12_fu_1431_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_0_address1 = tmp_11_fu_1416_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_0_address1 = tmp_10_fu_1401_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_0_address1 = tmp_2_fu_1386_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_0_address1 = tmp_s_fu_1371_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_0_address1 = tmp_9_fu_1356_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_0_address1 = tmp_8_fu_1341_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_0_address1 = tmp_7_fu_1326_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_0_address1 = tmp_6_fu_1311_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_0_address1 = tmp_5_fu_1296_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_0_address1 = tmp_4_fu_1281_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_0_address1 = tmp_3_fu_1266_p3;
    end else if (((icmp_ln1057_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_0_address1 = zext_ln38_fu_1250_p1;
    end else begin
        frame_buffer_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_0_ce1 = 1'b1;
    end else begin
        frame_buffer_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_0_we1 = 1'b1;
    end else begin
        frame_buffer_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        frame_buffer_V_1_address1 = tmp_63_fu_2196_p3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        frame_buffer_V_1_address1 = tmp_62_fu_2181_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        frame_buffer_V_1_address1 = tmp_61_fu_2166_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        frame_buffer_V_1_address1 = tmp_60_fu_2151_p3;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        frame_buffer_V_1_address1 = tmp_59_fu_2136_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        frame_buffer_V_1_address1 = tmp_58_fu_2121_p3;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        frame_buffer_V_1_address1 = tmp_57_fu_2106_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        frame_buffer_V_1_address1 = tmp_56_fu_2091_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        frame_buffer_V_1_address1 = tmp_55_fu_2076_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        frame_buffer_V_1_address1 = tmp_54_fu_2061_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        frame_buffer_V_1_address1 = tmp_53_fu_2046_p3;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        frame_buffer_V_1_address1 = tmp_52_fu_2031_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        frame_buffer_V_1_address1 = tmp_51_fu_2016_p3;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        frame_buffer_V_1_address1 = tmp_50_fu_2001_p3;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        frame_buffer_V_1_address1 = tmp_49_fu_1986_p3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        frame_buffer_V_1_address1 = tmp_48_fu_1971_p3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        frame_buffer_V_1_address1 = tmp_47_fu_1956_p3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        frame_buffer_V_1_address1 = tmp_46_fu_1941_p3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        frame_buffer_V_1_address1 = tmp_45_fu_1926_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        frame_buffer_V_1_address1 = tmp_44_fu_1911_p3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        frame_buffer_V_1_address1 = tmp_43_fu_1896_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        frame_buffer_V_1_address1 = tmp_42_fu_1881_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        frame_buffer_V_1_address1 = tmp_41_fu_1866_p3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        frame_buffer_V_1_address1 = tmp_40_fu_1851_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        frame_buffer_V_1_address1 = tmp_39_fu_1836_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        frame_buffer_V_1_address1 = tmp_38_fu_1821_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        frame_buffer_V_1_address1 = tmp_37_fu_1806_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        frame_buffer_V_1_address1 = tmp_36_fu_1791_p3;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        frame_buffer_V_1_address1 = tmp_35_fu_1776_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        frame_buffer_V_1_address1 = tmp_34_fu_1761_p3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        frame_buffer_V_1_address1 = tmp_33_fu_1746_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        frame_buffer_V_1_address1 = tmp_32_fu_1731_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_1_address1 = tmp_31_fu_1716_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_1_address1 = tmp_30_fu_1701_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_1_address1 = tmp_29_fu_1686_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_1_address1 = tmp_28_fu_1671_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_1_address1 = tmp_27_fu_1656_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_1_address1 = tmp_26_fu_1641_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_1_address1 = tmp_25_fu_1626_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_1_address1 = tmp_24_fu_1611_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_1_address1 = tmp_23_fu_1596_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_1_address1 = tmp_22_fu_1581_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_1_address1 = tmp_21_fu_1566_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_1_address1 = tmp_20_fu_1551_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_1_address1 = tmp_19_fu_1536_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_1_address1 = tmp_18_fu_1521_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_1_address1 = tmp_17_fu_1506_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_1_address1 = tmp_16_fu_1491_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_1_address1 = tmp_15_fu_1476_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_1_address1 = tmp_14_fu_1461_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_1_address1 = tmp_13_fu_1446_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_1_address1 = tmp_12_fu_1431_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_1_address1 = tmp_11_fu_1416_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_1_address1 = tmp_10_fu_1401_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_1_address1 = tmp_2_fu_1386_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_1_address1 = tmp_s_fu_1371_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_1_address1 = tmp_9_fu_1356_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_1_address1 = tmp_8_fu_1341_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_1_address1 = tmp_7_fu_1326_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_1_address1 = tmp_6_fu_1311_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_1_address1 = tmp_5_fu_1296_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_1_address1 = tmp_4_fu_1281_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_1_address1 = tmp_3_fu_1266_p3;
    end else if (((icmp_ln1057_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_1_address1 = zext_ln38_fu_1250_p1;
    end else begin
        frame_buffer_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_1_ce1 = 1'b1;
    end else begin
        frame_buffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1057_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        frame_buffer_V_1_we1 = 1'b1;
    end else begin
        frame_buffer_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln1057_fu_1230_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign frame_buffer_V_0_d1 = 8'd0;

assign frame_buffer_V_1_d1 = 8'd0;

assign i_V_2_fu_1236_p2 = (ap_sig_allocacmp_i_V_1 + 9'd1);

assign icmp_ln1057_fu_1230_p2 = ((ap_sig_allocacmp_i_V_1 == 9'd256) ? 1'b1 : 1'b0);

assign or_ln38_10_fu_1411_p2 = (tmp_1_reg_2216 | 15'd11);

assign or_ln38_11_fu_1426_p2 = (tmp_1_reg_2216 | 15'd12);

assign or_ln38_12_fu_1441_p2 = (tmp_1_reg_2216 | 15'd13);

assign or_ln38_13_fu_1456_p2 = (tmp_1_reg_2216 | 15'd14);

assign or_ln38_14_fu_1471_p2 = (tmp_1_reg_2216 | 15'd15);

assign or_ln38_15_fu_1486_p2 = (tmp_1_reg_2216 | 15'd16);

assign or_ln38_16_fu_1501_p2 = (tmp_1_reg_2216 | 15'd17);

assign or_ln38_17_fu_1516_p2 = (tmp_1_reg_2216 | 15'd18);

assign or_ln38_18_fu_1531_p2 = (tmp_1_reg_2216 | 15'd19);

assign or_ln38_19_fu_1546_p2 = (tmp_1_reg_2216 | 15'd20);

assign or_ln38_1_fu_1276_p2 = (tmp_1_reg_2216 | 15'd2);

assign or_ln38_20_fu_1561_p2 = (tmp_1_reg_2216 | 15'd21);

assign or_ln38_21_fu_1576_p2 = (tmp_1_reg_2216 | 15'd22);

assign or_ln38_22_fu_1591_p2 = (tmp_1_reg_2216 | 15'd23);

assign or_ln38_23_fu_1606_p2 = (tmp_1_reg_2216 | 15'd24);

assign or_ln38_24_fu_1621_p2 = (tmp_1_reg_2216 | 15'd25);

assign or_ln38_25_fu_1636_p2 = (tmp_1_reg_2216 | 15'd26);

assign or_ln38_26_fu_1651_p2 = (tmp_1_reg_2216 | 15'd27);

assign or_ln38_27_fu_1666_p2 = (tmp_1_reg_2216 | 15'd28);

assign or_ln38_28_fu_1681_p2 = (tmp_1_reg_2216 | 15'd29);

assign or_ln38_29_fu_1696_p2 = (tmp_1_reg_2216 | 15'd30);

assign or_ln38_2_fu_1291_p2 = (tmp_1_reg_2216 | 15'd3);

assign or_ln38_30_fu_1711_p2 = (tmp_1_reg_2216 | 15'd31);

assign or_ln38_31_fu_1726_p2 = (tmp_1_reg_2216 | 15'd32);

assign or_ln38_32_fu_1741_p2 = (tmp_1_reg_2216 | 15'd33);

assign or_ln38_33_fu_1756_p2 = (tmp_1_reg_2216 | 15'd34);

assign or_ln38_34_fu_1771_p2 = (tmp_1_reg_2216 | 15'd35);

assign or_ln38_35_fu_1786_p2 = (tmp_1_reg_2216 | 15'd36);

assign or_ln38_36_fu_1801_p2 = (tmp_1_reg_2216 | 15'd37);

assign or_ln38_37_fu_1816_p2 = (tmp_1_reg_2216 | 15'd38);

assign or_ln38_38_fu_1831_p2 = (tmp_1_reg_2216 | 15'd39);

assign or_ln38_39_fu_1846_p2 = (tmp_1_reg_2216 | 15'd40);

assign or_ln38_3_fu_1306_p2 = (tmp_1_reg_2216 | 15'd4);

assign or_ln38_40_fu_1861_p2 = (tmp_1_reg_2216 | 15'd41);

assign or_ln38_41_fu_1876_p2 = (tmp_1_reg_2216 | 15'd42);

assign or_ln38_42_fu_1891_p2 = (tmp_1_reg_2216 | 15'd43);

assign or_ln38_43_fu_1906_p2 = (tmp_1_reg_2216 | 15'd44);

assign or_ln38_44_fu_1921_p2 = (tmp_1_reg_2216 | 15'd45);

assign or_ln38_45_fu_1936_p2 = (tmp_1_reg_2216 | 15'd46);

assign or_ln38_46_fu_1951_p2 = (tmp_1_reg_2216 | 15'd47);

assign or_ln38_47_fu_1966_p2 = (tmp_1_reg_2216 | 15'd48);

assign or_ln38_48_fu_1981_p2 = (tmp_1_reg_2216 | 15'd49);

assign or_ln38_49_fu_1996_p2 = (tmp_1_reg_2216 | 15'd50);

assign or_ln38_4_fu_1321_p2 = (tmp_1_reg_2216 | 15'd5);

assign or_ln38_50_fu_2011_p2 = (tmp_1_reg_2216 | 15'd51);

assign or_ln38_51_fu_2026_p2 = (tmp_1_reg_2216 | 15'd52);

assign or_ln38_52_fu_2041_p2 = (tmp_1_reg_2216 | 15'd53);

assign or_ln38_53_fu_2056_p2 = (tmp_1_reg_2216 | 15'd54);

assign or_ln38_54_fu_2071_p2 = (tmp_1_reg_2216 | 15'd55);

assign or_ln38_55_fu_2086_p2 = (tmp_1_reg_2216 | 15'd56);

assign or_ln38_56_fu_2101_p2 = (tmp_1_reg_2216 | 15'd57);

assign or_ln38_57_fu_2116_p2 = (tmp_1_reg_2216 | 15'd58);

assign or_ln38_58_fu_2131_p2 = (tmp_1_reg_2216 | 15'd59);

assign or_ln38_59_fu_2146_p2 = (tmp_1_reg_2216 | 15'd60);

assign or_ln38_5_fu_1336_p2 = (tmp_1_reg_2216 | 15'd6);

assign or_ln38_60_fu_2161_p2 = (tmp_1_reg_2216 | 15'd61);

assign or_ln38_61_fu_2176_p2 = (tmp_1_reg_2216 | 15'd62);

assign or_ln38_62_fu_2191_p2 = (tmp_1_reg_2216 | 15'd63);

assign or_ln38_6_fu_1351_p2 = (tmp_1_reg_2216 | 15'd7);

assign or_ln38_7_fu_1366_p2 = (tmp_1_reg_2216 | 15'd8);

assign or_ln38_8_fu_1381_p2 = (tmp_1_reg_2216 | 15'd9);

assign or_ln38_9_fu_1396_p2 = (tmp_1_reg_2216 | 15'd10);

assign or_ln38_fu_1261_p2 = (tmp_1_reg_2216 | 15'd1);

assign tmp_10_fu_1401_p3 = {{49'd0}, {or_ln38_9_fu_1396_p2}};

assign tmp_11_fu_1416_p3 = {{49'd0}, {or_ln38_10_fu_1411_p2}};

assign tmp_12_fu_1431_p3 = {{49'd0}, {or_ln38_11_fu_1426_p2}};

assign tmp_13_fu_1446_p3 = {{49'd0}, {or_ln38_12_fu_1441_p2}};

assign tmp_14_fu_1461_p3 = {{49'd0}, {or_ln38_13_fu_1456_p2}};

assign tmp_15_fu_1476_p3 = {{49'd0}, {or_ln38_14_fu_1471_p2}};

assign tmp_16_fu_1491_p3 = {{49'd0}, {or_ln38_15_fu_1486_p2}};

assign tmp_17_fu_1506_p3 = {{49'd0}, {or_ln38_16_fu_1501_p2}};

assign tmp_18_fu_1521_p3 = {{49'd0}, {or_ln38_17_fu_1516_p2}};

assign tmp_19_fu_1536_p3 = {{49'd0}, {or_ln38_18_fu_1531_p2}};

assign tmp_1_fu_1242_p3 = {{ap_sig_allocacmp_i_V_1}, {6'd0}};

assign tmp_20_fu_1551_p3 = {{49'd0}, {or_ln38_19_fu_1546_p2}};

assign tmp_21_fu_1566_p3 = {{49'd0}, {or_ln38_20_fu_1561_p2}};

assign tmp_22_fu_1581_p3 = {{49'd0}, {or_ln38_21_fu_1576_p2}};

assign tmp_23_fu_1596_p3 = {{49'd0}, {or_ln38_22_fu_1591_p2}};

assign tmp_24_fu_1611_p3 = {{49'd0}, {or_ln38_23_fu_1606_p2}};

assign tmp_25_fu_1626_p3 = {{49'd0}, {or_ln38_24_fu_1621_p2}};

assign tmp_26_fu_1641_p3 = {{49'd0}, {or_ln38_25_fu_1636_p2}};

assign tmp_27_fu_1656_p3 = {{49'd0}, {or_ln38_26_fu_1651_p2}};

assign tmp_28_fu_1671_p3 = {{49'd0}, {or_ln38_27_fu_1666_p2}};

assign tmp_29_fu_1686_p3 = {{49'd0}, {or_ln38_28_fu_1681_p2}};

assign tmp_2_fu_1386_p3 = {{49'd0}, {or_ln38_8_fu_1381_p2}};

assign tmp_30_fu_1701_p3 = {{49'd0}, {or_ln38_29_fu_1696_p2}};

assign tmp_31_fu_1716_p3 = {{49'd0}, {or_ln38_30_fu_1711_p2}};

assign tmp_32_fu_1731_p3 = {{49'd0}, {or_ln38_31_fu_1726_p2}};

assign tmp_33_fu_1746_p3 = {{49'd0}, {or_ln38_32_fu_1741_p2}};

assign tmp_34_fu_1761_p3 = {{49'd0}, {or_ln38_33_fu_1756_p2}};

assign tmp_35_fu_1776_p3 = {{49'd0}, {or_ln38_34_fu_1771_p2}};

assign tmp_36_fu_1791_p3 = {{49'd0}, {or_ln38_35_fu_1786_p2}};

assign tmp_37_fu_1806_p3 = {{49'd0}, {or_ln38_36_fu_1801_p2}};

assign tmp_38_fu_1821_p3 = {{49'd0}, {or_ln38_37_fu_1816_p2}};

assign tmp_39_fu_1836_p3 = {{49'd0}, {or_ln38_38_fu_1831_p2}};

assign tmp_3_fu_1266_p3 = {{49'd0}, {or_ln38_fu_1261_p2}};

assign tmp_40_fu_1851_p3 = {{49'd0}, {or_ln38_39_fu_1846_p2}};

assign tmp_41_fu_1866_p3 = {{49'd0}, {or_ln38_40_fu_1861_p2}};

assign tmp_42_fu_1881_p3 = {{49'd0}, {or_ln38_41_fu_1876_p2}};

assign tmp_43_fu_1896_p3 = {{49'd0}, {or_ln38_42_fu_1891_p2}};

assign tmp_44_fu_1911_p3 = {{49'd0}, {or_ln38_43_fu_1906_p2}};

assign tmp_45_fu_1926_p3 = {{49'd0}, {or_ln38_44_fu_1921_p2}};

assign tmp_46_fu_1941_p3 = {{49'd0}, {or_ln38_45_fu_1936_p2}};

assign tmp_47_fu_1956_p3 = {{49'd0}, {or_ln38_46_fu_1951_p2}};

assign tmp_48_fu_1971_p3 = {{49'd0}, {or_ln38_47_fu_1966_p2}};

assign tmp_49_fu_1986_p3 = {{49'd0}, {or_ln38_48_fu_1981_p2}};

assign tmp_4_fu_1281_p3 = {{49'd0}, {or_ln38_1_fu_1276_p2}};

assign tmp_50_fu_2001_p3 = {{49'd0}, {or_ln38_49_fu_1996_p2}};

assign tmp_51_fu_2016_p3 = {{49'd0}, {or_ln38_50_fu_2011_p2}};

assign tmp_52_fu_2031_p3 = {{49'd0}, {or_ln38_51_fu_2026_p2}};

assign tmp_53_fu_2046_p3 = {{49'd0}, {or_ln38_52_fu_2041_p2}};

assign tmp_54_fu_2061_p3 = {{49'd0}, {or_ln38_53_fu_2056_p2}};

assign tmp_55_fu_2076_p3 = {{49'd0}, {or_ln38_54_fu_2071_p2}};

assign tmp_56_fu_2091_p3 = {{49'd0}, {or_ln38_55_fu_2086_p2}};

assign tmp_57_fu_2106_p3 = {{49'd0}, {or_ln38_56_fu_2101_p2}};

assign tmp_58_fu_2121_p3 = {{49'd0}, {or_ln38_57_fu_2116_p2}};

assign tmp_59_fu_2136_p3 = {{49'd0}, {or_ln38_58_fu_2131_p2}};

assign tmp_5_fu_1296_p3 = {{49'd0}, {or_ln38_2_fu_1291_p2}};

assign tmp_60_fu_2151_p3 = {{49'd0}, {or_ln38_59_fu_2146_p2}};

assign tmp_61_fu_2166_p3 = {{49'd0}, {or_ln38_60_fu_2161_p2}};

assign tmp_62_fu_2181_p3 = {{49'd0}, {or_ln38_61_fu_2176_p2}};

assign tmp_63_fu_2196_p3 = {{49'd0}, {or_ln38_62_fu_2191_p2}};

assign tmp_6_fu_1311_p3 = {{49'd0}, {or_ln38_3_fu_1306_p2}};

assign tmp_7_fu_1326_p3 = {{49'd0}, {or_ln38_4_fu_1321_p2}};

assign tmp_8_fu_1341_p3 = {{49'd0}, {or_ln38_5_fu_1336_p2}};

assign tmp_9_fu_1356_p3 = {{49'd0}, {or_ln38_6_fu_1351_p2}};

assign tmp_s_fu_1371_p3 = {{49'd0}, {or_ln38_7_fu_1366_p2}};

assign zext_ln38_fu_1250_p1 = tmp_1_fu_1242_p3;

always @ (posedge ap_clk) begin
    tmp_1_reg_2216[5:0] <= 6'b000000;
end

endmodule //coloringFB_top_m_coloringFB_top_m_Pipeline_COLORING_FB_INIT_ROW
